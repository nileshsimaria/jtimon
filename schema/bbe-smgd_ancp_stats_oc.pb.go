// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bbe-smgd_ancp_stats_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosAncpStats struct {
	System               *JunosAncpStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *JunosAncpStats) Reset()         { *m = JunosAncpStats{} }
func (m *JunosAncpStats) String() string { return proto.CompactTextString(m) }
func (*JunosAncpStats) ProtoMessage()    {}
func (*JunosAncpStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0}
}
func (m *JunosAncpStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStats.Merge(m, src)
}
func (m *JunosAncpStats) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStats) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStats.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStats proto.InternalMessageInfo

func (m *JunosAncpStats) GetSystem() *JunosAncpStatsSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosAncpStatsSystemType struct {
	SubscriberManagement *JunosAncpStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *JunosAncpStatsSystemType) Reset()         { *m = JunosAncpStatsSystemType{} }
func (m *JunosAncpStatsSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosAncpStatsSystemType) ProtoMessage()    {}
func (*JunosAncpStatsSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0, 0}
}
func (m *JunosAncpStatsSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStatsSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStatsSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStatsSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStatsSystemType.Merge(m, src)
}
func (m *JunosAncpStatsSystemType) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStatsSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStatsSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStatsSystemType proto.InternalMessageInfo

func (m *JunosAncpStatsSystemType) GetSubscriberManagement() *JunosAncpStatsSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementType struct {
	AccessNetwork        *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType `protobuf:"bytes,151,opt,name=access_network,json=accessNetwork" json:"access_network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                           `json:"-"`
	XXX_unrecognized     []byte                                                             `json:"-"`
	XXX_sizecache        int32                                                              `json:"-"`
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) Reset() {
	*m = JunosAncpStatsSystemTypeSubscriberManagementType{}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosAncpStatsSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosAncpStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0, 0, 0}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) GetAccessNetwork() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType {
	if m != nil {
		return m.AccessNetwork
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType struct {
	Ancp                 *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType `protobuf:"bytes,151,opt,name=ancp" json:"ancp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                     `json:"-"`
	XXX_sizecache        int32                                                                      `json:"-"`
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Reset() {
	*m = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType{}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) ProtoMessage() {}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0, 0, 0, 0}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType.Merge(m, src)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType proto.InternalMessageInfo

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) GetAncp() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType {
	if m != nil {
		return m.Ancp
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType struct {
	Adapter              *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType `protobuf:"bytes,151,opt,name=adapter" json:"adapter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                 `json:"-"`
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Reset() {
	*m = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType{}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) ProtoMessage() {}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0, 0, 0, 0, 0}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType.Merge(m, src)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType proto.InternalMessageInfo

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) GetAdapter() *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType {
	if m != nil {
		return m.Adapter
	}
	return nil
}

type JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType struct {
	MappedDynamicSubscriberCount *uint32  `protobuf:"varint,51,opt,name=mapped_dynamic_subscriber_count,json=mappedDynamicSubscriberCount" json:"mapped_dynamic_subscriber_count,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Reset() {
	*m = JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType{}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) ProtoMessage() {
}
func (*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Descriptor() ([]byte, []int) {
	return fileDescriptor_04b5e3e7408ddbf4, []int{0, 0, 0, 0, 0, 0}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType.Merge(m, src)
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) XXX_Size() int {
	return m.Size()
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType proto.InternalMessageInfo

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) GetMappedDynamicSubscriberCount() uint32 {
	if m != nil && m.MappedDynamicSubscriberCount != nil {
		return *m.MappedDynamicSubscriberCount
	}
	return 0
}

var E_JnprJunosAncpStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosAncpStats)(nil),
	Field:         34,
	Name:          "jnpr_junos_ancp_stats_ext",
	Tag:           "bytes,34,opt,name=jnpr_junos_ancp_stats_ext",
	Filename:      "bbe-smgd_ancp_stats_oc.proto",
}

func init() {
	proto.RegisterType((*JunosAncpStats)(nil), "junos_ancp_stats")
	proto.RegisterType((*JunosAncpStatsSystemType)(nil), "junos_ancp_stats.system_type")
	proto.RegisterType((*JunosAncpStatsSystemTypeSubscriberManagementType)(nil), "junos_ancp_stats.system_type.subscriber_management_type")
	proto.RegisterType((*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType)(nil), "junos_ancp_stats.system_type.subscriber_management_type.access_network_type")
	proto.RegisterType((*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType)(nil), "junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type")
	proto.RegisterType((*JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType)(nil), "junos_ancp_stats.system_type.subscriber_management_type.access_network_type.ancp_type.adapter_type")
	proto.RegisterExtension(E_JnprJunosAncpStatsExt)
}

func init() { proto.RegisterFile("bbe-smgd_ancp_stats_oc.proto", fileDescriptor_04b5e3e7408ddbf4) }

var fileDescriptor_04b5e3e7408ddbf4 = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0xbd, 0x6e, 0x13, 0x41,
	0x14, 0x85, 0xb5, 0x10, 0x40, 0x4c, 0x08, 0x82, 0x0d, 0x11, 0x66, 0x15, 0x4c, 0x94, 0x2a, 0x8d,
	0x67, 0x25, 0x90, 0x10, 0xa2, 0xe3, 0x27, 0x4d, 0x04, 0x14, 0xb6, 0xa0, 0xa0, 0x19, 0x66, 0x67,
	0xaf, 0xd6, 0x63, 0x67, 0x7e, 0x34, 0xf7, 0x1a, 0xe2, 0x86, 0xd7, 0xe0, 0x95, 0xa0, 0xe3, 0x11,
	0x90, 0x1b, 0x5e, 0x22, 0x05, 0x5a, 0xcf, 0xae, 0x59, 0x82, 0xa1, 0x40, 0xa4, 0x3d, 0xf7, 0xdc,
	0x73, 0xbe, 0xb9, 0xc3, 0x76, 0x8b, 0x02, 0x06, 0x68, 0xaa, 0x52, 0x48, 0xab, 0xbc, 0x40, 0x92,
	0x84, 0xc2, 0x29, 0xee, 0x83, 0x23, 0x97, 0x6d, 0x13, 0x1c, 0x83, 0x01, 0x0a, 0x73, 0x41, 0xce,
	0x47, 0x71, 0xff, 0xcb, 0x25, 0x76, 0x63, 0x32, 0xb3, 0x0e, 0x3b, 0x2b, 0xe9, 0x43, 0x76, 0x19,
	0xe7, 0x48, 0x60, 0x7a, 0x9f, 0x92, 0xbd, 0xe4, 0x60, 0xf3, 0xfe, 0x5d, 0x7e, 0xd6, 0xc3, 0xa3,
	0x41, 0xd0, 0xdc, 0xc3, 0xb0, 0x71, 0x67, 0xa7, 0x1b, 0x6c, 0xb3, 0xa3, 0xa7, 0x96, 0xed, 0xe0,
	0xac, 0x40, 0x15, 0x74, 0x01, 0x41, 0x18, 0x69, 0x65, 0x05, 0x06, 0x2c, 0xb5, 0xb1, 0x8f, 0xfe,
	0x1a, 0xcb, 0xd7, 0xee, 0xc6, 0xc6, 0x5b, 0x3f, 0x67, 0x2f, 0x57, 0xa3, 0xec, 0xf4, 0x22, 0xcb,
	0xfe, 0xbc, 0x94, 0x12, 0xbb, 0x2e, 0x95, 0x02, 0x44, 0x61, 0x81, 0x3e, 0xb8, 0x30, 0x6d, 0x39,
	0x5e, 0xfc, 0x2b, 0x07, 0xff, 0x35, 0x2f, 0xb2, 0x6d, 0x45, 0xf1, 0x55, 0xd4, 0xb2, 0xef, 0x17,
	0xd8, 0xf6, 0x1a, 0x5b, 0x3a, 0x65, 0x1b, 0x75, 0x5f, 0xcb, 0xf0, 0xe6, 0x7f, 0x32, 0xf0, 0x65,
	0xca, 0x92, 0x66, 0x59, 0x92, 0x2d, 0x12, 0x76, 0x75, 0xa5, 0xa5, 0x1f, 0xd9, 0x15, 0x59, 0x4a,
	0x4f, 0x10, 0xda, 0x76, 0x75, 0x3e, 0xed, 0xbc, 0xa9, 0x89, 0x28, 0x6d, 0x69, 0xf6, 0x9a, 0x5d,
	0xeb, 0x0e, 0xd2, 0x43, 0x76, 0xcf, 0x48, 0xef, 0xa1, 0x14, 0xe5, 0xdc, 0x4a, 0xa3, 0x95, 0xe8,
	0x14, 0x2a, 0x37, 0xb3, 0xd4, 0x7b, 0xb0, 0x97, 0x1c, 0x6c, 0x0d, 0x77, 0xa3, 0xed, 0x79, 0x74,
	0x8d, 0x56, 0xa6, 0x67, 0xb5, 0xe7, 0x71, 0xc9, 0xee, 0x4c, 0xac, 0x0f, 0xe2, 0xec, 0x53, 0x04,
	0x9c, 0x50, 0x7a, 0x9b, 0x1f, 0xcd, 0xac, 0xf6, 0x10, 0x9a, 0x7f, 0xc1, 0x11, 0x58, 0x74, 0x01,
	0x7b, 0xfb, 0xcb, 0x03, 0xdc, 0xfc, 0xed, 0x00, 0xc3, 0x9d, 0x3a, 0xec, 0xa8, 0x56, 0x9f, 0x58,
	0xe5, 0x47, 0xb5, 0x76, 0x78, 0x42, 0x4f, 0xdf, 0x7d, 0x5e, 0xf4, 0x93, 0xaf, 0x8b, 0x7e, 0xf2,
	0x6d, 0xd1, 0x4f, 0xde, 0x0e, 0x2b, 0x4d, 0xf5, 0x6a, 0x9d, 0xcc, 0x2d, 0x50, 0xae, 0x15, 0x14,
	0x10, 0xaa, 0x7c, 0x0c, 0xf2, 0x98, 0xc6, 0x85, 0xa3, 0x81, 0xb6, 0x15, 0x20, 0x0d, 0x26, 0xa4,
	0x07, 0x56, 0x92, 0x7e, 0x0f, 0xb9, 0x9f, 0x56, 0xf9, 0x84, 0x74, 0xde, 0x1c, 0x01, 0xf3, 0x88,
	0x9c, 0xa3, 0x1a, 0x83, 0x91, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xb8, 0x13, 0x56, 0xc7,
	0x03, 0x00, 0x00,
}

func (m *JunosAncpStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosAncpStatsSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStatsSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStatsSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AccessNetwork != nil {
		{
			size, err := m.AccessNetwork.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ancp != nil {
		{
			size, err := m.Ancp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Adapter != nil {
		{
			size, err := m.Adapter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MappedDynamicSubscriberCount != nil {
		i = encodeVarintBbeSmgdAncpStatsOc(dAtA, i, uint64(*m.MappedDynamicSubscriberCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintBbeSmgdAncpStatsOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovBbeSmgdAncpStatsOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosAncpStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovBbeSmgdAncpStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosAncpStatsSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovBbeSmgdAncpStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccessNetwork != nil {
		l = m.AccessNetwork.Size()
		n += 2 + l + sovBbeSmgdAncpStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ancp != nil {
		l = m.Ancp.Size()
		n += 2 + l + sovBbeSmgdAncpStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Adapter != nil {
		l = m.Adapter.Size()
		n += 2 + l + sovBbeSmgdAncpStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MappedDynamicSubscriberCount != nil {
		n += 2 + sovBbeSmgdAncpStatsOc(uint64(*m.MappedDynamicSubscriberCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBbeSmgdAncpStatsOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBbeSmgdAncpStatsOc(x uint64) (n int) {
	return sovBbeSmgdAncpStatsOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosAncpStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_ancp_stats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_ancp_stats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &JunosAncpStatsSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosAncpStatsSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &JunosAncpStatsSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessNetwork", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AccessNetwork == nil {
				m.AccessNetwork = &JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType{}
			}
			if err := m.AccessNetwork.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: access_network_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: access_network_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ancp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ancp == nil {
				m.Ancp = &JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType{}
			}
			if err := m.Ancp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ancp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ancp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adapter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Adapter == nil {
				m.Adapter = &JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType{}
			}
			if err := m.Adapter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosAncpStatsSystemTypeSubscriberManagementTypeAccessNetworkTypeAncpTypeAdapterType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: adapter_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: adapter_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MappedDynamicSubscriberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MappedDynamicSubscriberCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdAncpStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBbeSmgdAncpStatsOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBbeSmgdAncpStatsOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdAncpStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBbeSmgdAncpStatsOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBbeSmgdAncpStatsOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBbeSmgdAncpStatsOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBbeSmgdAncpStatsOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBbeSmgdAncpStatsOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBbeSmgdAncpStatsOc = fmt.Errorf("proto: unexpected end of group")
)
