// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bbe-smgd_rsmon_debug_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DebugRsmonDebug struct {
	System               *DebugRsmonDebugSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DebugRsmonDebug) Reset()         { *m = DebugRsmonDebug{} }
func (m *DebugRsmonDebug) String() string { return proto.CompactTextString(m) }
func (*DebugRsmonDebug) ProtoMessage()    {}
func (*DebugRsmonDebug) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0}
}
func (m *DebugRsmonDebug) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebug.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebug.Merge(m, src)
}
func (m *DebugRsmonDebug) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebug) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebug.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebug proto.InternalMessageInfo

func (m *DebugRsmonDebug) GetSystem() *DebugRsmonDebugSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type DebugRsmonDebugSystemType struct {
	SubscriberManagement *DebugRsmonDebugSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *DebugRsmonDebugSystemType) Reset()         { *m = DebugRsmonDebugSystemType{} }
func (m *DebugRsmonDebugSystemType) String() string { return proto.CompactTextString(m) }
func (*DebugRsmonDebugSystemType) ProtoMessage()    {}
func (*DebugRsmonDebugSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0}
}
func (m *DebugRsmonDebugSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemType) GetSubscriberManagement() *DebugRsmonDebugSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementType struct {
	Infra                *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementType{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*DebugRsmonDebugSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) GetInfra() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType {
	if m != nil {
		return m.Infra
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType struct {
	ResourceMonitor      *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType `protobuf:"bytes,151,opt,name=resource_monitor,json=resourceMonitor" json:"resource_monitor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                         `json:"-"`
	XXX_sizecache        int32                                                                          `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) ProtoMessage() {}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) GetResourceMonitor() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType {
	if m != nil {
		return m.ResourceMonitor
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType struct {
	Fpcs                 *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType `protobuf:"bytes,151,opt,name=fpcs" json:"fpcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                  `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) ProtoMessage() {
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) GetFpcs() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType {
	if m != nil {
		return m.Fpcs
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType struct {
	Fpc                  []*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList `protobuf:"bytes,151,rep,name=fpc" json:"fpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                           `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) ProtoMessage() {
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0, 0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) GetFpc() []*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList {
	if m != nil {
		return m.Fpc
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList struct {
	Slot                 *uint32                                                                                                     `protobuf:"varint,61,opt,name=slot" json:"slot,omitempty"`
	Statistics           *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                       `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) ProtoMessage() {
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetSlot() uint32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetStatistics() *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType {
	if m != nil {
		return m.Statistics
	}
	return nil
}

type DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType struct {
	AverageRtt           *uint32  `protobuf:"varint,61,opt,name=average_rtt,json=averageRtt" json:"average_rtt,omitempty"`
	CurrentRtt           *uint32  `protobuf:"varint,62,opt,name=current_rtt,json=currentRtt" json:"current_rtt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Reset() {
	*m = DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType{}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) ProtoMessage() {
}
func (*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef015e367e22db8a, []int{0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.Merge(m, src)
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Size() int {
	return m.Size()
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType proto.InternalMessageInfo

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetAverageRtt() uint32 {
	if m != nil && m.AverageRtt != nil {
		return *m.AverageRtt
	}
	return 0
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetCurrentRtt() uint32 {
	if m != nil && m.CurrentRtt != nil {
		return *m.CurrentRtt
	}
	return 0
}

var E_JnprDebugRsmonDebugExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*DebugRsmonDebug)(nil),
	Field:         36,
	Name:          "jnpr_debug_rsmon_debug_ext",
	Tag:           "bytes,36,opt,name=jnpr_debug_rsmon_debug_ext",
	Filename:      "bbe-smgd_rsmon_debug_oc.proto",
}

func init() {
	proto.RegisterType((*DebugRsmonDebug)(nil), "debug_rsmon_debug")
	proto.RegisterType((*DebugRsmonDebugSystemType)(nil), "debug_rsmon_debug.system_type")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementType)(nil), "debug_rsmon_debug.system_type.subscriber_management_type")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType)(nil), "debug_rsmon_debug.system_type.subscriber_management_type.infra_type")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType)(nil), "debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType)(nil), "debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList)(nil), "debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list")
	proto.RegisterType((*DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType)(nil), "debug_rsmon_debug.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type")
	proto.RegisterExtension(E_JnprDebugRsmonDebugExt)
}

func init() { proto.RegisterFile("bbe-smgd_rsmon_debug_oc.proto", fileDescriptor_ef015e367e22db8a) }

var fileDescriptor_ef015e367e22db8a = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x90, 0xb1, 0x6f, 0xd3, 0x40,
	0x14, 0xc6, 0xe5, 0xb6, 0x29, 0xe1, 0x45, 0xa8, 0x60, 0x28, 0x04, 0x4b, 0x84, 0x0a, 0x31, 0x64,
	0xc9, 0x59, 0xea, 0x82, 0x40, 0x02, 0xa1, 0xaa, 0x2c, 0x48, 0x65, 0x70, 0xb7, 0x32, 0x1c, 0x67,
	0xe7, 0xc5, 0xb9, 0x34, 0xbe, 0xb3, 0xee, 0x9e, 0x4b, 0x33, 0x20, 0x21, 0x06, 0xfe, 0x05, 0x06,
	0x24, 0x36, 0x36, 0xfe, 0x09, 0x36, 0x46, 0x16, 0x90, 0xd8, 0x50, 0xfe, 0x12, 0x64, 0x5f, 0xdc,
	0x44, 0x4d, 0x61, 0x40, 0xd0, 0xed, 0xf4, 0xbd, 0xef, 0x7d, 0xdf, 0xef, 0x1e, 0xdc, 0x8a, 0x63,
	0xec, 0xd9, 0x2c, 0xed, 0x73, 0x63, 0x33, 0xad, 0x78, 0x1f, 0xe3, 0x22, 0xe5, 0x3a, 0x61, 0xb9,
	0xd1, 0xa4, 0x83, 0xab, 0x84, 0x63, 0xcc, 0x90, 0xcc, 0x84, 0x93, 0xce, 0x9d, 0x78, 0xe7, 0x63,
	0x13, 0xae, 0x38, 0xdf, 0xc2, 0x8e, 0x7f, 0x0f, 0xd6, 0xed, 0xc4, 0x12, 0x66, 0xed, 0x77, 0xde,
	0x96, 0xd7, 0x6d, 0x6d, 0x77, 0xd8, 0x92, 0x89, 0x39, 0x07, 0xa7, 0x49, 0x8e, 0xd1, 0xcc, 0x1e,
	0x7c, 0xbf, 0x00, 0xad, 0x05, 0xdd, 0xd7, 0xb0, 0x69, 0x8b, 0xd8, 0x26, 0x46, 0xc6, 0x68, 0x78,
	0x26, 0x94, 0x48, 0x31, 0x43, 0x45, 0x75, 0xee, 0xfd, 0x3f, 0xe7, 0xb2, 0x33, 0x97, 0x5d, 0xe5,
	0xb5, 0xf9, 0x6c, 0xef, 0x64, 0x14, 0x7c, 0x5b, 0x87, 0xe0, 0xf7, 0x4b, 0xfe, 0x73, 0x68, 0x48,
	0x35, 0x30, 0xa2, 0xee, 0xdf, 0xfd, 0xeb, 0x7e, 0x56, 0xe5, 0x38, 0x14, 0x97, 0x19, 0xfc, 0x68,
	0x00, 0xcc, 0x55, 0xff, 0xad, 0x07, 0x97, 0x0d, 0x5a, 0x5d, 0x98, 0x04, 0x79, 0xa6, 0x95, 0x24,
	0x6d, 0xea, 0xde, 0x83, 0x7f, 0xd1, 0xcb, 0x4e, 0xa7, 0x3b, 0x9a, 0x8d, 0x5a, 0xde, 0x73, 0x6a,
	0xf0, 0x79, 0x0d, 0x36, 0xcf, 0xb4, 0xfa, 0x13, 0x58, 0x1b, 0xe4, 0x89, 0xad, 0xa9, 0xfa, 0xff,
	0x8f, 0x8a, 0x95, 0x3d, 0x8e, 0xaf, 0xaa, 0x0c, 0x3e, 0xad, 0xc2, 0xc5, 0x13, 0xcd, 0x7f, 0xed,
	0xc1, 0xea, 0x20, 0x4f, 0x4a, 0x90, 0xd5, 0x6e, 0x6b, 0x3b, 0x3b, 0x0f, 0x90, 0xf2, 0xc5, 0xc7,
	0xd2, 0x52, 0x54, 0x56, 0x07, 0xef, 0x57, 0xa0, 0x59, 0x2b, 0xfe, 0x4d, 0x58, 0xb3, 0x63, 0x4d,
	0xed, 0x87, 0x5b, 0x5e, 0xf7, 0xd2, 0x4e, 0xe3, 0xcd, 0xe3, 0x95, 0xa6, 0x17, 0x55, 0x92, 0xff,
	0xc1, 0x03, 0xb0, 0x24, 0x48, 0x5a, 0x92, 0xf3, 0xd3, 0xbd, 0x3a, 0x57, 0x62, 0x36, 0x07, 0x70,
	0x37, 0x5d, 0x20, 0x0a, 0xf6, 0x61, 0xe3, 0xd4, 0xd8, 0xbf, 0x0d, 0x2d, 0x71, 0x84, 0x46, 0xa4,
	0xc8, 0x0d, 0xcd, 0x7e, 0x15, 0xc1, 0x4c, 0x8a, 0x88, 0x4a, 0x43, 0x52, 0x18, 0x53, 0x32, 0x95,
	0x86, 0x47, 0xce, 0x30, 0x93, 0x22, 0xa2, 0x07, 0x29, 0x04, 0x23, 0x95, 0x1b, 0xbe, 0xf4, 0x4b,
	0x8e, 0xc7, 0xe4, 0xdf, 0x60, 0x4f, 0x0b, 0x25, 0x73, 0x34, 0xcf, 0x90, 0x5e, 0x6a, 0x73, 0x68,
	0xf7, 0x51, 0x59, 0x6d, 0x6c, 0xfb, 0x6e, 0x75, 0x1c, 0x7f, 0xf9, 0x38, 0xd1, 0xf5, 0x32, 0x6e,
	0xb7, 0x7a, 0x96, 0x6a, 0xf5, 0x7a, 0x72, 0x4c, 0x3b, 0x2f, 0xbe, 0x4c, 0x3b, 0xde, 0xd7, 0x69,
	0xc7, 0xfb, 0x39, 0xed, 0x78, 0x07, 0x51, 0x2a, 0x89, 0x8d, 0x5c, 0x36, 0x53, 0x48, 0xa1, 0x4c,
	0x30, 0x46, 0x93, 0x86, 0x43, 0x14, 0x63, 0x1a, 0xc6, 0x9a, 0x7a, 0x52, 0xa5, 0x68, 0xa9, 0x37,
	0x22, 0xd9, 0x53, 0x82, 0xe4, 0x11, 0x86, 0xf9, 0x61, 0x1a, 0x8e, 0x48, 0x86, 0xa2, 0x2f, 0x72,
	0x42, 0x63, 0x43, 0x3e, 0x2a, 0x94, 0xb6, 0xa1, 0x4d, 0x86, 0x98, 0x89, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x64, 0x69, 0x4e, 0xd2, 0x27, 0x05, 0x00, 0x00,
}

func (m *DebugRsmonDebug) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebug) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebug) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Infra != nil {
		{
			size, err := m.Infra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ResourceMonitor != nil {
		{
			size, err := m.ResourceMonitor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Fpcs != nil {
		{
			size, err := m.Fpcs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Fpc) > 0 {
		for iNdEx := len(m.Fpc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Fpc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Statistics != nil {
		{
			size, err := m.Statistics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Slot != nil {
		i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(*m.Slot))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	return len(dAtA) - i, nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CurrentRtt != nil {
		i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(*m.CurrentRtt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.AverageRtt != nil {
		i = encodeVarintBbeSmgdRsmonDebugOc(dAtA, i, uint64(*m.AverageRtt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	return len(dAtA) - i, nil
}

func encodeVarintBbeSmgdRsmonDebugOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovBbeSmgdRsmonDebugOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DebugRsmonDebug) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Infra != nil {
		l = m.Infra.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ResourceMonitor != nil {
		l = m.ResourceMonitor.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Fpcs != nil {
		l = m.Fpcs.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Fpc) > 0 {
		for _, e := range m.Fpc {
			l = e.Size()
			n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slot != nil {
		n += 2 + sovBbeSmgdRsmonDebugOc(uint64(*m.Slot))
	}
	if m.Statistics != nil {
		l = m.Statistics.Size()
		n += 2 + l + sovBbeSmgdRsmonDebugOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AverageRtt != nil {
		n += 2 + sovBbeSmgdRsmonDebugOc(uint64(*m.AverageRtt))
	}
	if m.CurrentRtt != nil {
		n += 2 + sovBbeSmgdRsmonDebugOc(uint64(*m.CurrentRtt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBbeSmgdRsmonDebugOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBbeSmgdRsmonDebugOc(x uint64) (n int) {
	return sovBbeSmgdRsmonDebugOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DebugRsmonDebug) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: debug_rsmon_debug: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: debug_rsmon_debug: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &DebugRsmonDebugSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &DebugRsmonDebugSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Infra == nil {
				m.Infra = &DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType{}
			}
			if err := m.Infra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: infra_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: infra_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceMonitor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResourceMonitor == nil {
				m.ResourceMonitor = &DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType{}
			}
			if err := m.ResourceMonitor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: resource_monitor_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: resource_monitor_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fpcs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fpcs == nil {
				m.Fpcs = &DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType{}
			}
			if err := m.Fpcs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: fpcs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: fpcs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fpc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fpc = append(m.Fpc, &DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList{})
			if err := m.Fpc[len(m.Fpc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: fpc_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: fpc_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Slot = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Statistics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Statistics == nil {
				m.Statistics = &DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType{}
			}
			if err := m.Statistics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugRsmonDebugSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: statistics_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: statistics_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AverageRtt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AverageRtt = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentRtt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentRtt = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdRsmonDebugOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBbeSmgdRsmonDebugOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBbeSmgdRsmonDebugOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdRsmonDebugOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBbeSmgdRsmonDebugOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBbeSmgdRsmonDebugOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBbeSmgdRsmonDebugOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBbeSmgdRsmonDebugOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBbeSmgdRsmonDebugOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBbeSmgdRsmonDebugOc = fmt.Errorf("proto: unexpected end of group")
)
