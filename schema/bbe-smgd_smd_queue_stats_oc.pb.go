// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bbe-smgd_smd_queue_stats_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DebugQueueStats struct {
	System               *DebugQueueStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DebugQueueStats) Reset()         { *m = DebugQueueStats{} }
func (m *DebugQueueStats) String() string { return proto.CompactTextString(m) }
func (*DebugQueueStats) ProtoMessage()    {}
func (*DebugQueueStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0}
}
func (m *DebugQueueStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStats.Merge(m, src)
}
func (m *DebugQueueStats) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStats.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStats proto.InternalMessageInfo

func (m *DebugQueueStats) GetSystem() *DebugQueueStatsSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type DebugQueueStatsSystemType struct {
	SubscriberManagement *DebugQueueStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *DebugQueueStatsSystemType) Reset()         { *m = DebugQueueStatsSystemType{} }
func (m *DebugQueueStatsSystemType) String() string { return proto.CompactTextString(m) }
func (*DebugQueueStatsSystemType) ProtoMessage()    {}
func (*DebugQueueStatsSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0}
}
func (m *DebugQueueStatsSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemType.Merge(m, src)
}
func (m *DebugQueueStatsSystemType) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemType proto.InternalMessageInfo

func (m *DebugQueueStatsSystemType) GetSubscriberManagement() *DebugQueueStatsSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type DebugQueueStatsSystemTypeSubscriberManagementType struct {
	Uplanes              *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType `protobuf:"bytes,151,opt,name=uplanes" json:"uplanes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) Reset() {
	*m = DebugQueueStatsSystemTypeSubscriberManagementType{}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugQueueStatsSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*DebugQueueStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0, 0}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) GetUplanes() *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType {
	if m != nil {
		return m.Uplanes
	}
	return nil
}

type DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType struct {
	Uplane               []*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList `protobuf:"bytes,151,rep,name=uplane" json:"uplane,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) Reset() {
	*m = DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType{}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) ProtoMessage() {}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0, 0, 0}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType.Merge(m, src)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType proto.InternalMessageInfo

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) GetUplane() []*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList {
	if m != nil {
		return m.Uplane
	}
	return nil
}

type DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList struct {
	UplaneId             *uint32                                                                          `protobuf:"varint,51,opt,name=uplane_id,json=uplaneId" json:"uplane_id,omitempty"`
	Infra                *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Reset() {
	*m = DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList{}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) String() string {
	return proto.CompactTextString(m)
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) ProtoMessage() {}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0, 0, 0, 0}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.Merge(m, src)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList proto.InternalMessageInfo

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) GetUplaneId() uint32 {
	if m != nil && m.UplaneId != nil {
		return *m.UplaneId
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) GetInfra() *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType {
	if m != nil {
		return m.Infra
	}
	return nil
}

type DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType struct {
	Era                  *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType `protobuf:"bytes,151,opt,name=era" json:"era,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Reset() {
	*m = DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType{}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) ProtoMessage() {
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0, 0, 0, 0, 0}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.Merge(m, src)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType proto.InternalMessageInfo

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) GetEra() *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType {
	if m != nil {
		return m.Era
	}
	return nil
}

type DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType struct {
	IoToSmdDvlanQCount                *uint32  `protobuf:"varint,51,opt,name=io_to_smd_dvlan_q_count,json=ioToSmdDvlanQCount" json:"io_to_smd_dvlan_q_count,omitempty"`
	IoToSmdDvlanMaxQCount             *uint32  `protobuf:"varint,52,opt,name=io_to_smd_dvlan_max_q_count,json=ioToSmdDvlanMaxQCount" json:"io_to_smd_dvlan_max_q_count,omitempty"`
	IoToSmdPadiQCnt                   *uint32  `protobuf:"varint,53,opt,name=io_to_smd_padi_q_cnt,json=ioToSmdPadiQCnt" json:"io_to_smd_padi_q_cnt,omitempty"`
	IoToSmdPadiQCntPeak               *uint32  `protobuf:"varint,54,opt,name=io_to_smd_padi_q_cnt_peak,json=ioToSmdPadiQCntPeak" json:"io_to_smd_padi_q_cnt_peak,omitempty"`
	IoToSmdDiscoverQCnt               *uint32  `protobuf:"varint,55,opt,name=io_to_smd_discover_q_cnt,json=ioToSmdDiscoverQCnt" json:"io_to_smd_discover_q_cnt,omitempty"`
	IoToSmdDiscoverQCntPeak           *uint32  `protobuf:"varint,56,opt,name=io_to_smd_discover_q_cnt_peak,json=ioToSmdDiscoverQCntPeak" json:"io_to_smd_discover_q_cnt_peak,omitempty"`
	IoToSmdSolicitQCnt                *uint32  `protobuf:"varint,57,opt,name=io_to_smd_solicit_q_cnt,json=ioToSmdSolicitQCnt" json:"io_to_smd_solicit_q_cnt,omitempty"`
	IoToSmdSolicitQCntPeak            *uint32  `protobuf:"varint,58,opt,name=io_to_smd_solicit_q_cnt_peak,json=ioToSmdSolicitQCntPeak" json:"io_to_smd_solicit_q_cnt_peak,omitempty"`
	IoToSmdDhcpQCnt                   *uint32  `protobuf:"varint,59,opt,name=io_to_smd_dhcp_q_cnt,json=ioToSmdDhcpQCnt" json:"io_to_smd_dhcp_q_cnt,omitempty"`
	IoToSmdDhcpQCntPeak               *uint32  `protobuf:"varint,60,opt,name=io_to_smd_dhcp_q_cnt_peak,json=ioToSmdDhcpQCntPeak" json:"io_to_smd_dhcp_q_cnt_peak,omitempty"`
	IoToSmdHagQCnt                    *uint32  `protobuf:"varint,61,opt,name=io_to_smd_hag_q_cnt,json=ioToSmdHagQCnt" json:"io_to_smd_hag_q_cnt,omitempty"`
	IoToSmdHagQCntPeak                *uint32  `protobuf:"varint,62,opt,name=io_to_smd_hag_q_cnt_peak,json=ioToSmdHagQCntPeak" json:"io_to_smd_hag_q_cnt_peak,omitempty"`
	IoToSmdTotalQCnt                  *uint32  `protobuf:"varint,63,opt,name=io_to_smd_total_q_cnt,json=ioToSmdTotalQCnt" json:"io_to_smd_total_q_cnt,omitempty"`
	IoToSmdTotalQCntPeak              *uint32  `protobuf:"varint,64,opt,name=io_to_smd_total_q_cnt_peak,json=ioToSmdTotalQCntPeak" json:"io_to_smd_total_q_cnt_peak,omitempty"`
	SmdDvlanQCount                    *uint32  `protobuf:"varint,65,opt,name=smd_dvlan_q_count,json=smdDvlanQCount" json:"smd_dvlan_q_count,omitempty"`
	SmdDvlanMaxQCount                 *uint32  `protobuf:"varint,66,opt,name=smd_dvlan_max_q_count,json=smdDvlanMaxQCount" json:"smd_dvlan_max_q_count,omitempty"`
	SmdPadiQCnt                       *uint32  `protobuf:"varint,67,opt,name=smd_padi_q_cnt,json=smdPadiQCnt" json:"smd_padi_q_cnt,omitempty"`
	SmdPadiQCntPeak                   *uint32  `protobuf:"varint,68,opt,name=smd_padi_q_cnt_peak,json=smdPadiQCntPeak" json:"smd_padi_q_cnt_peak,omitempty"`
	SmdDiscoverQCnt                   *uint32  `protobuf:"varint,69,opt,name=smd_discover_q_cnt,json=smdDiscoverQCnt" json:"smd_discover_q_cnt,omitempty"`
	SmdDiscoverQCntPeak               *uint32  `protobuf:"varint,70,opt,name=smd_discover_q_cnt_peak,json=smdDiscoverQCntPeak" json:"smd_discover_q_cnt_peak,omitempty"`
	SmdSolicitQCnt                    *uint32  `protobuf:"varint,71,opt,name=smd_solicit_q_cnt,json=smdSolicitQCnt" json:"smd_solicit_q_cnt,omitempty"`
	SmdSolicitQCntPeak                *uint32  `protobuf:"varint,72,opt,name=smd_solicit_q_cnt_peak,json=smdSolicitQCntPeak" json:"smd_solicit_q_cnt_peak,omitempty"`
	SmdDhcpQCnt                       *uint32  `protobuf:"varint,73,opt,name=smd_dhcp_q_cnt,json=smdDhcpQCnt" json:"smd_dhcp_q_cnt,omitempty"`
	SmdDhcpQCntPeak                   *uint32  `protobuf:"varint,74,opt,name=smd_dhcp_q_cnt_peak,json=smdDhcpQCntPeak" json:"smd_dhcp_q_cnt_peak,omitempty"`
	SmdHagQCnt                        *uint32  `protobuf:"varint,75,opt,name=smd_hag_q_cnt,json=smdHagQCnt" json:"smd_hag_q_cnt,omitempty"`
	SmdHagQCntPeak                    *uint32  `protobuf:"varint,76,opt,name=smd_hag_q_cnt_peak,json=smdHagQCntPeak" json:"smd_hag_q_cnt_peak,omitempty"`
	SmdTotalQCnt                      *uint32  `protobuf:"varint,77,opt,name=smd_total_q_cnt,json=smdTotalQCnt" json:"smd_total_q_cnt,omitempty"`
	SmdTotalQCntPeak                  *uint32  `protobuf:"varint,78,opt,name=smd_total_q_cnt_peak,json=smdTotalQCntPeak" json:"smd_total_q_cnt_peak,omitempty"`
	SmdNotificationQueueCnt           *uint32  `protobuf:"varint,79,opt,name=smd_notification_queue_cnt,json=smdNotificationQueueCnt" json:"smd_notification_queue_cnt,omitempty"`
	SmdNotificationQueueCntPeak       *uint32  `protobuf:"varint,80,opt,name=smd_notification_queue_cnt_peak,json=smdNotificationQueueCntPeak" json:"smd_notification_queue_cnt_peak,omitempty"`
	SmdMessageQueueCnt                *uint32  `protobuf:"varint,81,opt,name=smd_message_queue_cnt,json=smdMessageQueueCnt" json:"smd_message_queue_cnt,omitempty"`
	SmdMessageQueueCntPeak            *uint32  `protobuf:"varint,82,opt,name=smd_message_queue_cnt_peak,json=smdMessageQueueCntPeak" json:"smd_message_queue_cnt_peak,omitempty"`
	SmdPacketQueueCnt                 *uint32  `protobuf:"varint,83,opt,name=smd_packet_queue_cnt,json=smdPacketQueueCnt" json:"smd_packet_queue_cnt,omitempty"`
	SmdPacketQueueCntPeak             *uint32  `protobuf:"varint,84,opt,name=smd_packet_queue_cnt_peak,json=smdPacketQueueCntPeak" json:"smd_packet_queue_cnt_peak,omitempty"`
	SmdPacketLowQueueCnt              *uint32  `protobuf:"varint,85,opt,name=smd_packet_low_queue_cnt,json=smdPacketLowQueueCnt" json:"smd_packet_low_queue_cnt,omitempty"`
	SmdPacketLowQueueCntPeak          *uint32  `protobuf:"varint,86,opt,name=smd_packet_low_queue_cnt_peak,json=smdPacketLowQueueCntPeak" json:"smd_packet_low_queue_cnt_peak,omitempty"`
	IoPktCountLow                     *uint64  `protobuf:"varint,87,opt,name=io_pkt_count_low,json=ioPktCountLow" json:"io_pkt_count_low,omitempty"`
	IoPktCountMlow                    *uint64  `protobuf:"varint,88,opt,name=io_pkt_count_mlow,json=ioPktCountMlow" json:"io_pkt_count_mlow,omitempty"`
	IoPktCountMed                     *uint64  `protobuf:"varint,89,opt,name=io_pkt_count_med,json=ioPktCountMed" json:"io_pkt_count_med,omitempty"`
	IoPktCountHigh                    *uint64  `protobuf:"varint,90,opt,name=io_pkt_count_high,json=ioPktCountHigh" json:"io_pkt_count_high,omitempty"`
	IoPacketsDroppedLow               *uint64  `protobuf:"varint,91,opt,name=io_packets_dropped_low,json=ioPacketsDroppedLow" json:"io_packets_dropped_low,omitempty"`
	IoPacketsDroppedMlow              *uint64  `protobuf:"varint,92,opt,name=io_packets_dropped_mlow,json=ioPacketsDroppedMlow" json:"io_packets_dropped_mlow,omitempty"`
	IoPacketsDroppedMed               *uint64  `protobuf:"varint,93,opt,name=io_packets_dropped_med,json=ioPacketsDroppedMed" json:"io_packets_dropped_med,omitempty"`
	IoPacketsDroppedHigh              *uint64  `protobuf:"varint,94,opt,name=io_packets_dropped_high,json=ioPacketsDroppedHigh" json:"io_packets_dropped_high,omitempty"`
	IoPacketsDroppedPadiQlen          *uint64  `protobuf:"varint,95,opt,name=io_packets_dropped_padi_qlen,json=ioPacketsDroppedPadiQlen" json:"io_packets_dropped_padi_qlen,omitempty"`
	IoPacketsDroppedPadiImbalance     *uint64  `protobuf:"varint,96,opt,name=io_packets_dropped_padi_imbalance,json=ioPacketsDroppedPadiImbalance" json:"io_packets_dropped_padi_imbalance,omitempty"`
	IoPacketsDroppedDiscoverQlen      *uint64  `protobuf:"varint,97,opt,name=io_packets_dropped_discover_qlen,json=ioPacketsDroppedDiscoverQlen" json:"io_packets_dropped_discover_qlen,omitempty"`
	IoPacketsDroppedDiscoverImbalance *uint64  `protobuf:"varint,98,opt,name=io_packets_dropped_discover_imbalance,json=ioPacketsDroppedDiscoverImbalance" json:"io_packets_dropped_discover_imbalance,omitempty"`
	IoPacketsDroppedSolicitQlen       *uint64  `protobuf:"varint,99,opt,name=io_packets_dropped_solicit_qlen,json=ioPacketsDroppedSolicitQlen" json:"io_packets_dropped_solicit_qlen,omitempty"`
	IoPacketsDroppedSolicitImbalance  *uint64  `protobuf:"varint,100,opt,name=io_packets_dropped_solicit_imbalance,json=ioPacketsDroppedSolicitImbalance" json:"io_packets_dropped_solicit_imbalance,omitempty"`
	IoPacketsDroppedDvlanQlen         *uint64  `protobuf:"varint,101,opt,name=io_packets_dropped_dvlan_qlen,json=ioPacketsDroppedDvlanQlen" json:"io_packets_dropped_dvlan_qlen,omitempty"`
	IoPacketsDroppedDvlanImbalance    *uint64  `protobuf:"varint,102,opt,name=io_packets_dropped_dvlan_imbalance,json=ioPacketsDroppedDvlanImbalance" json:"io_packets_dropped_dvlan_imbalance,omitempty"`
	IoPacketsDroppedHagQlen           *uint64  `protobuf:"varint,103,opt,name=io_packets_dropped_hag_qlen,json=ioPacketsDroppedHagQlen" json:"io_packets_dropped_hag_qlen,omitempty"`
	IoPacketsDroppedHagImbalance      *uint64  `protobuf:"varint,104,opt,name=io_packets_dropped_hag_imbalance,json=ioPacketsDroppedHagImbalance" json:"io_packets_dropped_hag_imbalance,omitempty"`
	MaxAllowedInFlightCurrent         *uint32  `protobuf:"varint,105,opt,name=max_allowed_in_flight_current,json=maxAllowedInFlightCurrent" json:"max_allowed_in_flight_current,omitempty"`
	MaxAllowedInFlightActual          *uint32  `protobuf:"varint,106,opt,name=max_allowed_in_flight_actual,json=maxAllowedInFlightActual" json:"max_allowed_in_flight_actual,omitempty"`
	MaxAllowedInFlightCurrentAbsolute *uint32  `protobuf:"varint,107,opt,name=max_allowed_in_flight_current_absolute,json=maxAllowedInFlightCurrentAbsolute" json:"max_allowed_in_flight_current_absolute,omitempty"`
	MaxAllowedInFlightMaxEverAbsolute *uint32  `protobuf:"varint,108,opt,name=max_allowed_in_flight_max_ever_absolute,json=maxAllowedInFlightMaxEverAbsolute" json:"max_allowed_in_flight_max_ever_absolute,omitempty"`
	MinAllowedInFlight                *uint32  `protobuf:"varint,109,opt,name=min_allowed_in_flight,json=minAllowedInFlight" json:"min_allowed_in_flight,omitempty"`
	MaxLowPriPktToEnqueue             *uint32  `protobuf:"varint,110,opt,name=max_low_pri_pkt_to_enqueue,json=maxLowPriPktToEnqueue" json:"max_low_pri_pkt_to_enqueue,omitempty"`
	InFlightDvlan                     *uint32  `protobuf:"varint,111,opt,name=in_flight_dvlan,json=inFlightDvlan" json:"in_flight_dvlan,omitempty"`
	InFlightDvlanPeak                 *uint32  `protobuf:"varint,112,opt,name=in_flight_dvlan_peak,json=inFlightDvlanPeak" json:"in_flight_dvlan_peak,omitempty"`
	InFlightDhcp                      *uint32  `protobuf:"varint,113,opt,name=in_flight_dhcp,json=inFlightDhcp" json:"in_flight_dhcp,omitempty"`
	InFlightDhcpPeak                  *uint32  `protobuf:"varint,114,opt,name=in_flight_dhcp_peak,json=inFlightDhcpPeak" json:"in_flight_dhcp_peak,omitempty"`
	InFlightPpp                       *uint32  `protobuf:"varint,115,opt,name=in_flight_ppp,json=inFlightPpp" json:"in_flight_ppp,omitempty"`
	InFlightPppPeak                   *uint32  `protobuf:"varint,116,opt,name=in_flight_ppp_peak,json=inFlightPppPeak" json:"in_flight_ppp_peak,omitempty"`
	InFlightHag                       *uint32  `protobuf:"varint,117,opt,name=in_flight_hag,json=inFlightHag" json:"in_flight_hag,omitempty"`
	InFlightHagPeak                   *uint32  `protobuf:"varint,118,opt,name=in_flight_hag_peak,json=inFlightHagPeak" json:"in_flight_hag_peak,omitempty"`
	InFlightTotal                     *uint32  `protobuf:"varint,119,opt,name=in_flight_total,json=inFlightTotal" json:"in_flight_total,omitempty"`
	InFlightTotalPeak                 *uint32  `protobuf:"varint,120,opt,name=in_flight_total_peak,json=inFlightTotalPeak" json:"in_flight_total_peak,omitempty"`
	InNegoDvlan                       *uint32  `protobuf:"varint,121,opt,name=in_nego_dvlan,json=inNegoDvlan" json:"in_nego_dvlan,omitempty"`
	InNegoDvlanPeak                   *uint32  `protobuf:"varint,122,opt,name=in_nego_dvlan_peak,json=inNegoDvlanPeak" json:"in_nego_dvlan_peak,omitempty"`
	InNegoDhcp                        *uint32  `protobuf:"varint,123,opt,name=in_nego_dhcp,json=inNegoDhcp" json:"in_nego_dhcp,omitempty"`
	InNegoDhcpPeak                    *uint32  `protobuf:"varint,124,opt,name=in_nego_dhcp_peak,json=inNegoDhcpPeak" json:"in_nego_dhcp_peak,omitempty"`
	InNegoPpp                         *uint32  `protobuf:"varint,125,opt,name=in_nego_ppp,json=inNegoPpp" json:"in_nego_ppp,omitempty"`
	InNegoPppPeak                     *uint32  `protobuf:"varint,126,opt,name=in_nego_ppp_peak,json=inNegoPppPeak" json:"in_nego_ppp_peak,omitempty"`
	InNegoHag                         *uint32  `protobuf:"varint,127,opt,name=in_nego_hag,json=inNegoHag" json:"in_nego_hag,omitempty"`
	InNegoHagPeak                     *uint32  `protobuf:"varint,128,opt,name=in_nego_hag_peak,json=inNegoHagPeak" json:"in_nego_hag_peak,omitempty"`
	InNegoTotal                       *uint32  `protobuf:"varint,129,opt,name=in_nego_total,json=inNegoTotal" json:"in_nego_total,omitempty"`
	InNegoTotalPeak                   *uint32  `protobuf:"varint,130,opt,name=in_nego_total_peak,json=inNegoTotalPeak" json:"in_nego_total_peak,omitempty"`
	InNegoOverrides                   *uint32  `protobuf:"varint,131,opt,name=in_nego_overrides,json=inNegoOverrides" json:"in_nego_overrides,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) Reset() {
	*m = DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType{}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) String() string {
	return proto.CompactTextString(m)
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) ProtoMessage() {
}
func (*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_25315a2411c1892a, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType.Merge(m, src)
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) XXX_Size() int {
	return m.Size()
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType.DiscardUnknown(m)
}

var xxx_messageInfo_DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType proto.InternalMessageInfo

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDvlanQCount() uint32 {
	if m != nil && m.IoToSmdDvlanQCount != nil {
		return *m.IoToSmdDvlanQCount
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDvlanMaxQCount() uint32 {
	if m != nil && m.IoToSmdDvlanMaxQCount != nil {
		return *m.IoToSmdDvlanMaxQCount
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdPadiQCnt() uint32 {
	if m != nil && m.IoToSmdPadiQCnt != nil {
		return *m.IoToSmdPadiQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdPadiQCntPeak() uint32 {
	if m != nil && m.IoToSmdPadiQCntPeak != nil {
		return *m.IoToSmdPadiQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDiscoverQCnt() uint32 {
	if m != nil && m.IoToSmdDiscoverQCnt != nil {
		return *m.IoToSmdDiscoverQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDiscoverQCntPeak() uint32 {
	if m != nil && m.IoToSmdDiscoverQCntPeak != nil {
		return *m.IoToSmdDiscoverQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdSolicitQCnt() uint32 {
	if m != nil && m.IoToSmdSolicitQCnt != nil {
		return *m.IoToSmdSolicitQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdSolicitQCntPeak() uint32 {
	if m != nil && m.IoToSmdSolicitQCntPeak != nil {
		return *m.IoToSmdSolicitQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDhcpQCnt() uint32 {
	if m != nil && m.IoToSmdDhcpQCnt != nil {
		return *m.IoToSmdDhcpQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdDhcpQCntPeak() uint32 {
	if m != nil && m.IoToSmdDhcpQCntPeak != nil {
		return *m.IoToSmdDhcpQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdHagQCnt() uint32 {
	if m != nil && m.IoToSmdHagQCnt != nil {
		return *m.IoToSmdHagQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdHagQCntPeak() uint32 {
	if m != nil && m.IoToSmdHagQCntPeak != nil {
		return *m.IoToSmdHagQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdTotalQCnt() uint32 {
	if m != nil && m.IoToSmdTotalQCnt != nil {
		return *m.IoToSmdTotalQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoToSmdTotalQCntPeak() uint32 {
	if m != nil && m.IoToSmdTotalQCntPeak != nil {
		return *m.IoToSmdTotalQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDvlanQCount() uint32 {
	if m != nil && m.SmdDvlanQCount != nil {
		return *m.SmdDvlanQCount
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDvlanMaxQCount() uint32 {
	if m != nil && m.SmdDvlanMaxQCount != nil {
		return *m.SmdDvlanMaxQCount
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPadiQCnt() uint32 {
	if m != nil && m.SmdPadiQCnt != nil {
		return *m.SmdPadiQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPadiQCntPeak() uint32 {
	if m != nil && m.SmdPadiQCntPeak != nil {
		return *m.SmdPadiQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDiscoverQCnt() uint32 {
	if m != nil && m.SmdDiscoverQCnt != nil {
		return *m.SmdDiscoverQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDiscoverQCntPeak() uint32 {
	if m != nil && m.SmdDiscoverQCntPeak != nil {
		return *m.SmdDiscoverQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdSolicitQCnt() uint32 {
	if m != nil && m.SmdSolicitQCnt != nil {
		return *m.SmdSolicitQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdSolicitQCntPeak() uint32 {
	if m != nil && m.SmdSolicitQCntPeak != nil {
		return *m.SmdSolicitQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDhcpQCnt() uint32 {
	if m != nil && m.SmdDhcpQCnt != nil {
		return *m.SmdDhcpQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdDhcpQCntPeak() uint32 {
	if m != nil && m.SmdDhcpQCntPeak != nil {
		return *m.SmdDhcpQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdHagQCnt() uint32 {
	if m != nil && m.SmdHagQCnt != nil {
		return *m.SmdHagQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdHagQCntPeak() uint32 {
	if m != nil && m.SmdHagQCntPeak != nil {
		return *m.SmdHagQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdTotalQCnt() uint32 {
	if m != nil && m.SmdTotalQCnt != nil {
		return *m.SmdTotalQCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdTotalQCntPeak() uint32 {
	if m != nil && m.SmdTotalQCntPeak != nil {
		return *m.SmdTotalQCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdNotificationQueueCnt() uint32 {
	if m != nil && m.SmdNotificationQueueCnt != nil {
		return *m.SmdNotificationQueueCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdNotificationQueueCntPeak() uint32 {
	if m != nil && m.SmdNotificationQueueCntPeak != nil {
		return *m.SmdNotificationQueueCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdMessageQueueCnt() uint32 {
	if m != nil && m.SmdMessageQueueCnt != nil {
		return *m.SmdMessageQueueCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdMessageQueueCntPeak() uint32 {
	if m != nil && m.SmdMessageQueueCntPeak != nil {
		return *m.SmdMessageQueueCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPacketQueueCnt() uint32 {
	if m != nil && m.SmdPacketQueueCnt != nil {
		return *m.SmdPacketQueueCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPacketQueueCntPeak() uint32 {
	if m != nil && m.SmdPacketQueueCntPeak != nil {
		return *m.SmdPacketQueueCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPacketLowQueueCnt() uint32 {
	if m != nil && m.SmdPacketLowQueueCnt != nil {
		return *m.SmdPacketLowQueueCnt
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetSmdPacketLowQueueCntPeak() uint32 {
	if m != nil && m.SmdPacketLowQueueCntPeak != nil {
		return *m.SmdPacketLowQueueCntPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPktCountLow() uint64 {
	if m != nil && m.IoPktCountLow != nil {
		return *m.IoPktCountLow
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPktCountMlow() uint64 {
	if m != nil && m.IoPktCountMlow != nil {
		return *m.IoPktCountMlow
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPktCountMed() uint64 {
	if m != nil && m.IoPktCountMed != nil {
		return *m.IoPktCountMed
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPktCountHigh() uint64 {
	if m != nil && m.IoPktCountHigh != nil {
		return *m.IoPktCountHigh
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedLow() uint64 {
	if m != nil && m.IoPacketsDroppedLow != nil {
		return *m.IoPacketsDroppedLow
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedMlow() uint64 {
	if m != nil && m.IoPacketsDroppedMlow != nil {
		return *m.IoPacketsDroppedMlow
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedMed() uint64 {
	if m != nil && m.IoPacketsDroppedMed != nil {
		return *m.IoPacketsDroppedMed
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedHigh() uint64 {
	if m != nil && m.IoPacketsDroppedHigh != nil {
		return *m.IoPacketsDroppedHigh
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedPadiQlen() uint64 {
	if m != nil && m.IoPacketsDroppedPadiQlen != nil {
		return *m.IoPacketsDroppedPadiQlen
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedPadiImbalance() uint64 {
	if m != nil && m.IoPacketsDroppedPadiImbalance != nil {
		return *m.IoPacketsDroppedPadiImbalance
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedDiscoverQlen() uint64 {
	if m != nil && m.IoPacketsDroppedDiscoverQlen != nil {
		return *m.IoPacketsDroppedDiscoverQlen
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedDiscoverImbalance() uint64 {
	if m != nil && m.IoPacketsDroppedDiscoverImbalance != nil {
		return *m.IoPacketsDroppedDiscoverImbalance
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedSolicitQlen() uint64 {
	if m != nil && m.IoPacketsDroppedSolicitQlen != nil {
		return *m.IoPacketsDroppedSolicitQlen
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedSolicitImbalance() uint64 {
	if m != nil && m.IoPacketsDroppedSolicitImbalance != nil {
		return *m.IoPacketsDroppedSolicitImbalance
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedDvlanQlen() uint64 {
	if m != nil && m.IoPacketsDroppedDvlanQlen != nil {
		return *m.IoPacketsDroppedDvlanQlen
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedDvlanImbalance() uint64 {
	if m != nil && m.IoPacketsDroppedDvlanImbalance != nil {
		return *m.IoPacketsDroppedDvlanImbalance
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedHagQlen() uint64 {
	if m != nil && m.IoPacketsDroppedHagQlen != nil {
		return *m.IoPacketsDroppedHagQlen
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetIoPacketsDroppedHagImbalance() uint64 {
	if m != nil && m.IoPacketsDroppedHagImbalance != nil {
		return *m.IoPacketsDroppedHagImbalance
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMaxAllowedInFlightCurrent() uint32 {
	if m != nil && m.MaxAllowedInFlightCurrent != nil {
		return *m.MaxAllowedInFlightCurrent
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMaxAllowedInFlightActual() uint32 {
	if m != nil && m.MaxAllowedInFlightActual != nil {
		return *m.MaxAllowedInFlightActual
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMaxAllowedInFlightCurrentAbsolute() uint32 {
	if m != nil && m.MaxAllowedInFlightCurrentAbsolute != nil {
		return *m.MaxAllowedInFlightCurrentAbsolute
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMaxAllowedInFlightMaxEverAbsolute() uint32 {
	if m != nil && m.MaxAllowedInFlightMaxEverAbsolute != nil {
		return *m.MaxAllowedInFlightMaxEverAbsolute
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMinAllowedInFlight() uint32 {
	if m != nil && m.MinAllowedInFlight != nil {
		return *m.MinAllowedInFlight
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetMaxLowPriPktToEnqueue() uint32 {
	if m != nil && m.MaxLowPriPktToEnqueue != nil {
		return *m.MaxLowPriPktToEnqueue
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightDvlan() uint32 {
	if m != nil && m.InFlightDvlan != nil {
		return *m.InFlightDvlan
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightDvlanPeak() uint32 {
	if m != nil && m.InFlightDvlanPeak != nil {
		return *m.InFlightDvlanPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightDhcp() uint32 {
	if m != nil && m.InFlightDhcp != nil {
		return *m.InFlightDhcp
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightDhcpPeak() uint32 {
	if m != nil && m.InFlightDhcpPeak != nil {
		return *m.InFlightDhcpPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightPpp() uint32 {
	if m != nil && m.InFlightPpp != nil {
		return *m.InFlightPpp
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightPppPeak() uint32 {
	if m != nil && m.InFlightPppPeak != nil {
		return *m.InFlightPppPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightHag() uint32 {
	if m != nil && m.InFlightHag != nil {
		return *m.InFlightHag
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightHagPeak() uint32 {
	if m != nil && m.InFlightHagPeak != nil {
		return *m.InFlightHagPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightTotal() uint32 {
	if m != nil && m.InFlightTotal != nil {
		return *m.InFlightTotal
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInFlightTotalPeak() uint32 {
	if m != nil && m.InFlightTotalPeak != nil {
		return *m.InFlightTotalPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoDvlan() uint32 {
	if m != nil && m.InNegoDvlan != nil {
		return *m.InNegoDvlan
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoDvlanPeak() uint32 {
	if m != nil && m.InNegoDvlanPeak != nil {
		return *m.InNegoDvlanPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoDhcp() uint32 {
	if m != nil && m.InNegoDhcp != nil {
		return *m.InNegoDhcp
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoDhcpPeak() uint32 {
	if m != nil && m.InNegoDhcpPeak != nil {
		return *m.InNegoDhcpPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoPpp() uint32 {
	if m != nil && m.InNegoPpp != nil {
		return *m.InNegoPpp
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoPppPeak() uint32 {
	if m != nil && m.InNegoPppPeak != nil {
		return *m.InNegoPppPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoHag() uint32 {
	if m != nil && m.InNegoHag != nil {
		return *m.InNegoHag
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoHagPeak() uint32 {
	if m != nil && m.InNegoHagPeak != nil {
		return *m.InNegoHagPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoTotal() uint32 {
	if m != nil && m.InNegoTotal != nil {
		return *m.InNegoTotal
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoTotalPeak() uint32 {
	if m != nil && m.InNegoTotalPeak != nil {
		return *m.InNegoTotalPeak
	}
	return 0
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) GetInNegoOverrides() uint32 {
	if m != nil && m.InNegoOverrides != nil {
		return *m.InNegoOverrides
	}
	return 0
}

var E_JnprDebugQueueStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*DebugQueueStats)(nil),
	Field:         38,
	Name:          "jnpr_debug_queue_stats_ext",
	Tag:           "bytes,38,opt,name=jnpr_debug_queue_stats_ext",
	Filename:      "bbe-smgd_smd_queue_stats_oc.proto",
}

func init() {
	proto.RegisterType((*DebugQueueStats)(nil), "debug_queue_stats")
	proto.RegisterType((*DebugQueueStatsSystemType)(nil), "debug_queue_stats.system_type")
	proto.RegisterType((*DebugQueueStatsSystemTypeSubscriberManagementType)(nil), "debug_queue_stats.system_type.subscriber_management_type")
	proto.RegisterType((*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType)(nil), "debug_queue_stats.system_type.subscriber_management_type.uplanes_type")
	proto.RegisterType((*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList)(nil), "debug_queue_stats.system_type.subscriber_management_type.uplanes_type.uplane_list")
	proto.RegisterType((*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType)(nil), "debug_queue_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type")
	proto.RegisterType((*DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType)(nil), "debug_queue_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.era_type")
	proto.RegisterExtension(E_JnprDebugQueueStatsExt)
}

func init() { proto.RegisterFile("bbe-smgd_smd_queue_stats_oc.proto", fileDescriptor_25315a2411c1892a) }

var fileDescriptor_25315a2411c1892a = []byte{
	// 1731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdb, 0x56, 0x14, 0xcb,
	0x19, 0x5e, 0x13, 0xa3, 0xd1, 0x42, 0x50, 0x9b, 0x53, 0x33, 0x2a, 0x02, 0x2a, 0x92, 0x28, 0x33,
	0xf1, 0xac, 0x68, 0x54, 0x64, 0x20, 0x60, 0x00, 0x87, 0x81, 0x9c, 0x4c, 0x4c, 0x5b, 0xd3, 0x5d,
	0xf4, 0x14, 0xd3, 0xdd, 0xd5, 0x76, 0xd5, 0x30, 0x43, 0xce, 0x9a, 0x95, 0xab, 0x3c, 0x40, 0x1e,
	0x64, 0x2f, 0xf7, 0x33, 0xec, 0xcb, 0xfd, 0x08, 0x7b, 0xf9, 0x24, 0x7b, 0xd5, 0x5f, 0x3d, 0x7d,
	0x1e, 0x2e, 0xf6, 0x72, 0x5f, 0x52, 0xf5, 0x1d, 0xfe, 0xfa, 0xeb, 0xeb, 0xaa, 0x62, 0xd0, 0x6c,
	0xb3, 0x49, 0x16, 0xb9, 0x6b, 0x5b, 0x06, 0x77, 0x2d, 0xe3, 0x7d, 0x87, 0x74, 0x88, 0xc1, 0x05,
	0x16, 0xdc, 0x60, 0x66, 0xc5, 0x0f, 0x98, 0x60, 0xe5, 0x51, 0x41, 0x1c, 0xe2, 0x12, 0x11, 0x1c,
	0x19, 0x82, 0xf9, 0x6a, 0x70, 0xee, 0xbf, 0x37, 0xd0, 0x05, 0x8b, 0x34, 0x3b, 0x76, 0x92, 0xa3,
	0x3d, 0x44, 0xa7, 0xf8, 0x11, 0x17, 0xc4, 0xd5, 0xff, 0x5f, 0x9a, 0x29, 0x2d, 0x0c, 0xdd, 0x99,
	0xae, 0xe4, 0x40, 0x15, 0x85, 0x30, 0xc4, 0x91, 0x4f, 0x1a, 0x21, 0xbc, 0xfc, 0xf5, 0x3c, 0x1a,
	0x4a, 0x8c, 0x6b, 0x0c, 0x8d, 0xf3, 0x4e, 0x93, 0x9b, 0x01, 0x6d, 0x92, 0xc0, 0x70, 0xb1, 0x87,
	0x6d, 0xe2, 0x12, 0x4f, 0xf4, 0x75, 0x1f, 0x1f, 0xaf, 0x5b, 0x29, 0x24, 0x2b, 0xcb, 0xb1, 0x78,
	0x6e, 0x2b, 0x9a, 0x2a, 0x7f, 0xba, 0x8e, 0xca, 0x83, 0x49, 0x1a, 0x46, 0x3f, 0xeb, 0xf8, 0x0e,
	0xf6, 0x08, 0xef, 0x57, 0xb0, 0xf6, 0x83, 0x2b, 0xa8, 0x84, 0x4a, 0xaa, 0x9c, 0xbe, 0x6e, 0xf9,
	0xab, 0x6b, 0xe8, 0x6c, 0x72, 0x46, 0x6b, 0xa3, 0x53, 0xea, 0x6f, 0x69, 0x79, 0x62, 0x61, 0xe8,
	0x4e, 0xe3, 0xcb, 0x58, 0x86, 0x7f, 0x18, 0x0e, 0xe5, 0xa2, 0x11, 0x5a, 0x94, 0x3f, 0x5d, 0x45,
	0x43, 0x89, 0x71, 0x6d, 0x0e, 0x9d, 0x09, 0xff, 0xa4, 0x96, 0x7e, 0x77, 0xa6, 0xb4, 0x30, 0xfc,
	0xf2, 0xe4, 0xc7, 0x17, 0x3f, 0x39, 0x5d, 0x6a, 0x9c, 0x56, 0xe3, 0x1b, 0x96, 0x26, 0xd0, 0x49,
	0xea, 0xed, 0x07, 0xb8, 0xdf, 0x92, 0xb7, 0x5f, 0xbe, 0xbe, 0x0a, 0x18, 0xa8, 0x4e, 0x29, 0xb3,
	0xf2, 0xff, 0xe6, 0x10, 0x8a, 0x47, 0xb5, 0x23, 0x74, 0x82, 0xc4, 0x25, 0xec, 0xff, 0xa8, 0x25,
	0x54, 0x48, 0xbf, 0x16, 0xe9, 0x59, 0xfe, 0x30, 0x8b, 0x4e, 0xf7, 0x47, 0xb4, 0xbb, 0x68, 0x92,
	0x32, 0x43, 0x30, 0xf8, 0x8e, 0xac, 0x43, 0x07, 0x7b, 0xc6, 0x7b, 0xc3, 0x64, 0x1d, 0x4f, 0xa8,
	0xf6, 0x35, 0x34, 0xca, 0xf6, 0xd8, 0xae, 0x6b, 0xd5, 0xe4, 0xdc, 0xce, 0x8a, 0x9c, 0xd1, 0x96,
	0xd0, 0xc5, 0x2c, 0xc9, 0xc5, 0xbd, 0x88, 0x78, 0x0f, 0x88, 0xe3, 0x49, 0xe2, 0x16, 0xee, 0x85,
	0xdc, 0x45, 0x34, 0x16, 0x73, 0x7d, 0x6c, 0x51, 0x49, 0xf3, 0x84, 0x7e, 0x1f, 0x48, 0xe7, 0x42,
	0x52, 0x1d, 0x5b, 0x74, 0x67, 0xc5, 0x13, 0xda, 0x03, 0x34, 0x55, 0x04, 0x37, 0x7c, 0x82, 0xdb,
	0xfa, 0x03, 0xe0, 0x8c, 0x66, 0x38, 0x75, 0x82, 0xdb, 0xda, 0x7d, 0xa4, 0x27, 0x4a, 0xa4, 0xdc,
	0x64, 0x87, 0x24, 0x08, 0xad, 0x1e, 0xa6, 0x68, 0xb5, 0x70, 0x12, 0xec, 0x9e, 0xa1, 0xcb, 0x83,
	0x68, 0xca, 0xf2, 0x11, 0x70, 0x27, 0x0b, 0xb8, 0x60, 0x9b, 0x6a, 0x27, 0x67, 0x0e, 0x35, 0xa9,
	0x08, 0x5d, 0x1f, 0xa7, 0xda, 0xb9, 0xab, 0xe6, 0xc0, 0xf4, 0x29, 0xba, 0x34, 0x80, 0xa4, 0x3c,
	0x97, 0x80, 0x39, 0x91, 0x67, 0x82, 0x65, 0xaa, 0xa1, 0x56, 0xcb, 0xf4, 0x43, 0xbf, 0x27, 0xa9,
	0x86, 0xd6, 0x5a, 0xa6, 0x9f, 0x6f, 0x68, 0x0c, 0x57, 0x4e, 0x4f, 0xd3, 0x9d, 0x09, 0x39, 0x60,
	0x73, 0x13, 0x8d, 0xc6, 0xbc, 0x16, 0xb6, 0x43, 0x97, 0x5f, 0x01, 0x63, 0x24, 0x64, 0xac, 0x63,
	0x1b, 0x4c, 0xee, 0x25, 0xbb, 0x1f, 0x81, 0x95, 0xc7, 0xb3, 0x54, 0x1f, 0x42, 0x06, 0x58, 0x54,
	0xd1, 0x78, 0xcc, 0x12, 0x4c, 0x60, 0x27, 0x34, 0x79, 0x0e, 0x94, 0xf3, 0x21, 0x65, 0x4f, 0xce,
	0x80, 0xcd, 0x23, 0x54, 0x2e, 0x24, 0x28, 0xa3, 0x17, 0xc0, 0x1a, 0xcb, 0xb2, 0xc0, 0xea, 0xe7,
	0xe8, 0x42, 0x3e, 0xf0, 0xcb, 0x6a, 0x2d, 0x3c, 0x1d, 0xf6, 0x5f, 0xa2, 0xf1, 0xe2, 0x98, 0xbf,
	0x04, 0xf8, 0x05, 0x9e, 0x8b, 0xf8, 0x55, 0x34, 0x92, 0x09, 0xf7, 0x0a, 0x40, 0x87, 0x78, 0x22,
	0xd8, 0xb7, 0xd0, 0x68, 0x51, 0xa4, 0x6b, 0x6a, 0xd7, 0x78, 0x26, 0xce, 0x37, 0x91, 0x56, 0x10,
	0xe4, 0xd5, 0x08, 0x9c, 0x0a, 0xf1, 0x3d, 0x34, 0x39, 0x28, 0xbe, 0x6b, 0x6a, 0x83, 0x79, 0x41,
	0x74, 0xc3, 0x96, 0xa4, 0x43, 0xfb, 0xeb, 0xa8, 0x25, 0xc9, 0xc0, 0xde, 0x41, 0x13, 0x03, 0xa2,
	0xba, 0xae, 0x36, 0x97, 0xe7, 0x63, 0x1a, 0x36, 0x25, 0x11, 0xd0, 0x8d, 0xa8, 0x29, 0x51, 0x38,
	0xc3, 0xa6, 0x64, 0x63, 0xf9, 0x2a, 0x5e, 0x67, 0x32, 0x92, 0xb3, 0x68, 0x38, 0x1d, 0xc6, 0xdf,
	0x00, 0x0e, 0xf1, 0x38, 0x88, 0xbf, 0x50, 0x7d, 0xcb, 0x44, 0x70, 0x33, 0x5a, 0x55, 0x32, 0x7e,
	0xd7, 0xd1, 0xb9, 0x6c, 0xf0, 0xb6, 0x00, 0x78, 0x96, 0x27, 0x43, 0x57, 0x41, 0x63, 0x85, 0x71,
	0xdb, 0x56, 0x21, 0xe5, 0xd9, 0xa8, 0x3d, 0x41, 0x65, 0x89, 0xf7, 0x98, 0xa0, 0xfb, 0xd4, 0xc4,
	0x82, 0x32, 0x2f, 0x3c, 0xe7, 0xa5, 0xc3, 0x6b, 0x75, 0x9e, 0x70, 0xd7, 0xda, 0x4e, 0x00, 0x76,
	0xe4, 0xbc, 0x34, 0xab, 0xa1, 0x2b, 0x83, 0xc9, 0xca, 0xb7, 0x0e, 0x0a, 0x17, 0x07, 0x28, 0x40,
	0x09, 0xb7, 0x55, 0x84, 0x5d, 0xc2, 0x39, 0xb6, 0x49, 0xc2, 0x7d, 0x27, 0xda, 0xae, 0x2d, 0x35,
	0x17, 0x19, 0x2f, 0xa9, 0xaa, 0x73, 0x14, 0xe5, 0xd9, 0x50, 0x27, 0x52, 0x9e, 0x17, 0x7e, 0xc7,
	0x63, 0x2a, 0xda, 0x66, 0x9b, 0x88, 0x84, 0xdb, 0x6e, 0xf4, 0xc1, 0xd4, 0x61, 0x2a, 0x32, 0x7b,
	0x84, 0xa6, 0x8a, 0x08, 0xca, 0x6b, 0x4f, 0xdd, 0x26, 0x39, 0x16, 0x58, 0x3d, 0x40, 0x7a, 0x82,
	0xe9, 0xb0, 0x6e, 0xc2, 0xee, 0xb7, 0xea, 0xfb, 0x8f, 0x88, 0x9b, 0xac, 0x1b, 0x39, 0x3e, 0x47,
	0x97, 0x07, 0xf1, 0x94, 0xeb, 0xef, 0x80, 0xac, 0x17, 0x91, 0xc1, 0xf8, 0x06, 0x3a, 0x4f, 0x99,
	0xe1, 0xb7, 0x85, 0x3a, 0x0c, 0xa4, 0x84, 0xfe, 0xfb, 0x99, 0xd2, 0xc2, 0x4f, 0x1b, 0xc3, 0x94,
	0xd5, 0xdb, 0x02, 0x4e, 0x82, 0x4d, 0xd6, 0x95, 0x9f, 0x55, 0x0a, 0xe8, 0x4a, 0xe4, 0x1f, 0x00,
	0x39, 0x12, 0x23, 0xb7, 0x1c, 0xd6, 0xcd, 0x69, 0xba, 0xc4, 0xd2, 0xff, 0x98, 0xd5, 0xdc, 0x22,
	0x56, 0x4e, 0xb3, 0x45, 0xed, 0x96, 0xfe, 0x26, 0xab, 0xb9, 0x4e, 0xed, 0x96, 0x76, 0x17, 0x4d,
	0x48, 0x28, 0xac, 0x81, 0x1b, 0x56, 0xc0, 0x7c, 0x9f, 0x58, 0x50, 0xed, 0x9f, 0x00, 0x3f, 0x4a,
	0x99, 0x5a, 0x20, 0xaf, 0xa9, 0x39, 0x59, 0xf3, 0x7d, 0xb8, 0xc5, 0xb2, 0x24, 0xa8, 0xfc, 0xcf,
	0xc0, 0x1a, 0xcb, 0xb2, 0xa0, 0xfe, 0x62, 0x2f, 0xb9, 0x8a, 0xb7, 0xc5, 0x5e, 0x72, 0x2d, 0xc5,
	0x5e, 0xb0, 0xa2, 0xbf, 0x14, 0x7b, 0xc1, 0xba, 0x9e, 0xc1, 0x9d, 0x99, 0xa5, 0xa9, 0xd3, 0xd4,
	0x21, 0x9e, 0x6e, 0x00, 0x57, 0xcf, 0x72, 0xe1, 0x50, 0x75, 0x88, 0xa7, 0xad, 0xa3, 0xd9, 0x41,
	0x7c, 0xea, 0x36, 0xb1, 0x83, 0x3d, 0x93, 0xe8, 0xef, 0x40, 0xe4, 0x72, 0x91, 0xc8, 0x46, 0x1f,
	0xa4, 0xad, 0xa1, 0x99, 0x02, 0xa5, 0xf8, 0xf0, 0x95, 0xd5, 0x60, 0x10, 0xba, 0x94, 0x15, 0x8a,
	0xce, 0x60, 0x59, 0x51, 0x1d, 0x5d, 0x3f, 0x4e, 0x27, 0xae, 0xaa, 0x09, 0x62, 0xb3, 0x83, 0xc4,
	0xe2, 0xca, 0x6a, 0xe8, 0x4a, 0x81, 0x62, 0x74, 0x6a, 0xcb, 0xc2, 0x4c, 0xd0, 0xba, 0x98, 0xd5,
	0xea, 0x1f, 0xde, 0xb2, 0xae, 0x6d, 0x74, 0xed, 0x18, 0x95, 0xb8, 0x2c, 0x0b, 0xa4, 0x66, 0x06,
	0x48, 0xc5, 0x55, 0xbd, 0x80, 0x27, 0x56, 0x6e, 0x9d, 0xea, 0x26, 0x96, 0x35, 0x11, 0x10, 0x9a,
	0xca, 0xad, 0x0f, 0xee, 0x64, 0x59, 0xd1, 0x2b, 0x34, 0x37, 0x50, 0x21, 0xae, 0x67, 0x1f, 0x64,
	0xa6, 0x0b, 0x65, 0xe2, 0x6a, 0x9e, 0xc2, 0x53, 0x36, 0x17, 0x3f, 0x79, 0x5f, 0xc8, 0x5a, 0x6c,
	0x10, 0x99, 0xcc, 0x45, 0x10, 0xdb, 0x50, 0x49, 0xf1, 0xde, 0x4b, 0x76, 0x5c, 0x47, 0xab, 0x78,
	0xef, 0xd7, 0xb1, 0x9d, 0xea, 0x89, 0x7c, 0x59, 0x60, 0xc7, 0x61, 0x5d, 0x62, 0x19, 0xd4, 0x33,
	0xf6, 0x1d, 0x6a, 0xb7, 0x84, 0x61, 0x76, 0x82, 0x40, 0xfe, 0xff, 0x48, 0xe1, 0x38, 0x9a, 0x72,
	0x71, 0x6f, 0x59, 0x61, 0x36, 0xbc, 0x35, 0x40, 0xac, 0x28, 0x80, 0xfc, 0x1e, 0x8a, 0x15, 0xb0,
	0x29, 0x3a, 0xd8, 0xd1, 0x0f, 0xd4, 0x79, 0x96, 0x17, 0x58, 0x86, 0x79, 0x6d, 0x07, 0xcd, 0x1f,
	0x5b, 0x81, 0x81, 0x9b, 0x9c, 0x39, 0x1d, 0x41, 0xf4, 0x36, 0x28, 0xcd, 0x0e, 0x2c, 0x65, 0x39,
	0x04, 0x6a, 0x0d, 0x74, 0xa3, 0x58, 0x52, 0x8e, 0x12, 0x99, 0xe9, 0x48, 0xd3, 0x19, 0xa4, 0xb9,
	0x85, 0x7b, 0xab, 0x87, 0x24, 0x88, 0x34, 0x6f, 0xa3, 0x71, 0x97, 0x7a, 0x79, 0x4d, 0xdd, 0x55,
	0x37, 0x99, 0x4b, 0xbd, 0x8c, 0x82, 0xf6, 0x18, 0x95, 0xa5, 0xa1, 0x3c, 0xe3, 0xfd, 0x80, 0xc2,
	0xa9, 0x29, 0x98, 0x41, 0x3c, 0x38, 0xf0, 0x75, 0x4f, 0xdd, 0x2e, 0x2e, 0xee, 0x6d, 0xb2, 0x6e,
	0x3d, 0xa0, 0xf5, 0xb6, 0xd8, 0x63, 0xab, 0x6a, 0x52, 0x9b, 0x47, 0xe7, 0xe2, 0xaa, 0x21, 0x5f,
	0x3a, 0x03, 0xfc, 0x30, 0x0d, 0xd5, 0x21, 0x4d, 0xf2, 0xc2, 0xcb, 0xe0, 0xd4, 0x25, 0xe2, 0xab,
	0x0b, 0x2f, 0x05, 0x86, 0xdb, 0xe3, 0x1a, 0x1a, 0x49, 0x10, 0x5a, 0xa6, 0xaf, 0xbf, 0x57, 0x2f,
	0x8d, 0x08, 0xda, 0x32, 0x7d, 0x6d, 0x11, 0x8d, 0xa6, 0x51, 0x4a, 0x35, 0x08, 0x5f, 0xc3, 0x09,
	0x28, 0x88, 0xce, 0xa1, 0xe1, 0x18, 0xee, 0xfb, 0xbe, 0xce, 0xd5, 0x03, 0xab, 0x0f, 0xac, 0xfb,
	0xbe, 0x7c, 0x47, 0xa6, 0x30, 0x4a, 0x51, 0x84, 0xff, 0x2a, 0xc4, 0xc0, 0xbc, 0x60, 0x0b, 0xdb,
	0x7a, 0x27, 0x2d, 0xb8, 0x8e, 0xed, 0xb4, 0xa0, 0x0c, 0x3e, 0x08, 0x1e, 0xa6, 0x05, 0xd7, 0xb1,
	0x0d, 0x82, 0xa9, 0x7e, 0xc2, 0x03, 0x4a, 0xef, 0xa6, 0xfb, 0x09, 0x4f, 0xa7, 0x74, 0x3f, 0xd5,
	0x43, 0x0b, 0x64, 0x7b, 0xe9, 0x7e, 0x02, 0x38, 0x51, 0xa9, 0x47, 0x6c, 0x16, 0x6e, 0xd3, 0x51,
	0xbf, 0xd2, 0x6d, 0x62, 0x33, 0xb5, 0x49, 0xaa, 0xd2, 0x18, 0xa3, 0x24, 0xff, 0xda, 0xaf, 0x34,
	0x02, 0x82, 0xe0, 0x0c, 0x3a, 0x1b, 0x81, 0xe5, 0xf6, 0xfc, 0x4d, 0xbd, 0x2c, 0x43, 0x98, 0xdc,
	0x1c, 0x79, 0x07, 0x27, 0x10, 0x4a, 0xed, 0xef, 0xe1, 0x7f, 0x43, 0x11, 0x0c, 0xc4, 0xa6, 0xd1,
	0x50, 0x1f, 0x2a, 0xb7, 0xe5, 0x1f, 0x00, 0x3a, 0xa3, 0x40, 0x72, 0x53, 0xe4, 0xbd, 0x1f, 0xcf,
	0x2b, 0xa5, 0x7f, 0xf6, 0xfb, 0x12, 0x82, 0xb2, 0x42, 0x72, 0x3b, 0xfe, 0x95, 0x14, 0x92, 0x9b,
	0xb1, 0x10, 0x0b, 0x45, 0x5b, 0xf1, 0xef, 0x52, 0x52, 0xa9, 0xbf, 0x13, 0x57, 0xe3, 0x86, 0xa9,
	0x7d, 0xf8, 0x50, 0x4a, 0x76, 0x4c, 0x6d, 0xc3, 0xad, 0xb8, 0x63, 0x89, 0x4d, 0xf8, 0x58, 0x4a,
	0xb6, 0x2c, 0xde, 0x83, 0x9b, 0x71, 0x43, 0xe4, 0x35, 0x14, 0x50, 0x8b, 0x70, 0xfd, 0x3f, 0x29,
	0xf0, 0xeb, 0xfe, 0xf8, 0x92, 0x8d, 0xca, 0x07, 0x9e, 0x1f, 0x18, 0xb9, 0x9f, 0x3d, 0x0c, 0xd2,
	0x13, 0xda, 0x64, 0xe5, 0x55, 0xc7, 0xa3, 0x3e, 0x09, 0xb6, 0x89, 0xe8, 0xb2, 0xa0, 0xcd, 0x77,
	0x89, 0xc7, 0x59, 0xc0, 0xf5, 0x79, 0xf8, 0xb5, 0x44, 0xcb, 0xff, 0x5a, 0xd2, 0x98, 0x90, 0x72,
	0x35, 0x39, 0x0c, 0xcf, 0xb4, 0x5d, 0x39, 0xb8, 0xda, 0x13, 0x2f, 0xdf, 0x7d, 0xf3, 0x79, 0xba,
	0xf4, 0xed, 0xe7, 0xe9, 0xd2, 0x77, 0x9f, 0xa7, 0x4b, 0x6f, 0x1a, 0x36, 0x15, 0x95, 0x03, 0xa5,
	0x5d, 0xf1, 0x88, 0xa8, 0x52, 0x93, 0x34, 0x49, 0x60, 0x57, 0x5b, 0x04, 0x3b, 0xa2, 0xd5, 0x64,
	0x62, 0x91, 0x7a, 0x36, 0xe1, 0x62, 0xf1, 0x40, 0xd0, 0x45, 0x0f, 0x0b, 0x7a, 0x48, 0xaa, 0x7e,
	0xdb, 0xae, 0x1e, 0x08, 0x5a, 0xc5, 0x16, 0xf6, 0x05, 0x09, 0x78, 0xd5, 0x38, 0xe8, 0x78, 0x8c,
	0x57, 0xb9, 0xd9, 0x22, 0x2e, 0xfe, 0x3e, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x1e, 0xad, 0x96, 0x8b,
	0x14, 0x00, 0x00,
}

func (m *DebugQueueStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Uplanes != nil {
		{
			size, err := m.Uplanes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uplane) > 0 {
		for iNdEx := len(m.Uplane) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Uplane[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Infra != nil {
		{
			size, err := m.Infra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.UplaneId != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.UplaneId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Era != nil {
		{
			size, err := m.Era.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InNegoOverrides != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoOverrides))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x98
	}
	if m.InNegoTotalPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoTotalPeak))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x90
	}
	if m.InNegoTotal != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoTotal))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x88
	}
	if m.InNegoHagPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoHagPeak))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x80
	}
	if m.InNegoHag != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoHag))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xf8
	}
	if m.InNegoPppPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoPppPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xf0
	}
	if m.InNegoPpp != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoPpp))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xe8
	}
	if m.InNegoDhcpPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoDhcpPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xe0
	}
	if m.InNegoDhcp != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoDhcp))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xd8
	}
	if m.InNegoDvlanPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoDvlanPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xd0
	}
	if m.InNegoDvlan != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InNegoDvlan))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xc8
	}
	if m.InFlightTotalPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightTotalPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xc0
	}
	if m.InFlightTotal != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightTotal))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xb8
	}
	if m.InFlightHagPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightHagPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xb0
	}
	if m.InFlightHag != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightHag))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xa8
	}
	if m.InFlightPppPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightPppPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xa0
	}
	if m.InFlightPpp != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightPpp))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x98
	}
	if m.InFlightDhcpPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightDhcpPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x90
	}
	if m.InFlightDhcp != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightDhcp))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x88
	}
	if m.InFlightDvlanPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightDvlanPeak))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x80
	}
	if m.InFlightDvlan != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.InFlightDvlan))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf8
	}
	if m.MaxLowPriPktToEnqueue != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MaxLowPriPktToEnqueue))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf0
	}
	if m.MinAllowedInFlight != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MinAllowedInFlight))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xe8
	}
	if m.MaxAllowedInFlightMaxEverAbsolute != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MaxAllowedInFlightMaxEverAbsolute))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xe0
	}
	if m.MaxAllowedInFlightCurrentAbsolute != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MaxAllowedInFlightCurrentAbsolute))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd8
	}
	if m.MaxAllowedInFlightActual != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MaxAllowedInFlightActual))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xd0
	}
	if m.MaxAllowedInFlightCurrent != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.MaxAllowedInFlightCurrent))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc8
	}
	if m.IoPacketsDroppedHagImbalance != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedHagImbalance))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc0
	}
	if m.IoPacketsDroppedHagQlen != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedHagQlen))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb8
	}
	if m.IoPacketsDroppedDvlanImbalance != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedDvlanImbalance))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb0
	}
	if m.IoPacketsDroppedDvlanQlen != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedDvlanQlen))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa8
	}
	if m.IoPacketsDroppedSolicitImbalance != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedSolicitImbalance))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa0
	}
	if m.IoPacketsDroppedSolicitQlen != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedSolicitQlen))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x98
	}
	if m.IoPacketsDroppedDiscoverImbalance != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedDiscoverImbalance))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x90
	}
	if m.IoPacketsDroppedDiscoverQlen != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedDiscoverQlen))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x88
	}
	if m.IoPacketsDroppedPadiImbalance != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedPadiImbalance))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x80
	}
	if m.IoPacketsDroppedPadiQlen != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedPadiQlen))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf8
	}
	if m.IoPacketsDroppedHigh != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedHigh))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf0
	}
	if m.IoPacketsDroppedMed != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedMed))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe8
	}
	if m.IoPacketsDroppedMlow != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedMlow))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.IoPacketsDroppedLow != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPacketsDroppedLow))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.IoPktCountHigh != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPktCountHigh))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd0
	}
	if m.IoPktCountMed != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPktCountMed))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc8
	}
	if m.IoPktCountMlow != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPktCountMlow))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc0
	}
	if m.IoPktCountLow != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoPktCountLow))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb8
	}
	if m.SmdPacketLowQueueCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPacketLowQueueCntPeak))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb0
	}
	if m.SmdPacketLowQueueCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPacketLowQueueCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa8
	}
	if m.SmdPacketQueueCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPacketQueueCntPeak))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa0
	}
	if m.SmdPacketQueueCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPacketQueueCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x98
	}
	if m.SmdMessageQueueCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdMessageQueueCntPeak))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x90
	}
	if m.SmdMessageQueueCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdMessageQueueCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.SmdNotificationQueueCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdNotificationQueueCntPeak))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x80
	}
	if m.SmdNotificationQueueCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdNotificationQueueCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf8
	}
	if m.SmdTotalQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdTotalQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf0
	}
	if m.SmdTotalQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdTotalQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe8
	}
	if m.SmdHagQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdHagQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe0
	}
	if m.SmdHagQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdHagQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.SmdDhcpQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDhcpQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.SmdDhcpQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDhcpQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.SmdSolicitQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdSolicitQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.SmdSolicitQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdSolicitQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.SmdDiscoverQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDiscoverQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.SmdDiscoverQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDiscoverQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.SmdPadiQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPadiQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.SmdPadiQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdPadiQCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.SmdDvlanMaxQCount != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDvlanMaxQCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.SmdDvlanQCount != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.SmdDvlanQCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.IoToSmdTotalQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdTotalQCntPeak))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.IoToSmdTotalQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdTotalQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.IoToSmdHagQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdHagQCntPeak))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.IoToSmdHagQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdHagQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.IoToSmdDhcpQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDhcpQCntPeak))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.IoToSmdDhcpQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDhcpQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.IoToSmdSolicitQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdSolicitQCntPeak))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.IoToSmdSolicitQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdSolicitQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.IoToSmdDiscoverQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDiscoverQCntPeak))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.IoToSmdDiscoverQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDiscoverQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.IoToSmdPadiQCntPeak != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdPadiQCntPeak))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.IoToSmdPadiQCnt != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdPadiQCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.IoToSmdDvlanMaxQCount != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDvlanMaxQCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.IoToSmdDvlanQCount != nil {
		i = encodeVarintBbeSmgdSmdQueueStatsOc(dAtA, i, uint64(*m.IoToSmdDvlanQCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintBbeSmgdSmdQueueStatsOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovBbeSmgdSmdQueueStatsOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DebugQueueStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uplanes != nil {
		l = m.Uplanes.Size()
		n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Uplane) > 0 {
		for _, e := range m.Uplane {
			l = e.Size()
			n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UplaneId != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.UplaneId))
	}
	if m.Infra != nil {
		l = m.Infra.Size()
		n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Era != nil {
		l = m.Era.Size()
		n += 2 + l + sovBbeSmgdSmdQueueStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IoToSmdDvlanQCount != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDvlanQCount))
	}
	if m.IoToSmdDvlanMaxQCount != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDvlanMaxQCount))
	}
	if m.IoToSmdPadiQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdPadiQCnt))
	}
	if m.IoToSmdPadiQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdPadiQCntPeak))
	}
	if m.IoToSmdDiscoverQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDiscoverQCnt))
	}
	if m.IoToSmdDiscoverQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDiscoverQCntPeak))
	}
	if m.IoToSmdSolicitQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdSolicitQCnt))
	}
	if m.IoToSmdSolicitQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdSolicitQCntPeak))
	}
	if m.IoToSmdDhcpQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDhcpQCnt))
	}
	if m.IoToSmdDhcpQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdDhcpQCntPeak))
	}
	if m.IoToSmdHagQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdHagQCnt))
	}
	if m.IoToSmdHagQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdHagQCntPeak))
	}
	if m.IoToSmdTotalQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdTotalQCnt))
	}
	if m.IoToSmdTotalQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoToSmdTotalQCntPeak))
	}
	if m.SmdDvlanQCount != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDvlanQCount))
	}
	if m.SmdDvlanMaxQCount != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDvlanMaxQCount))
	}
	if m.SmdPadiQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPadiQCnt))
	}
	if m.SmdPadiQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPadiQCntPeak))
	}
	if m.SmdDiscoverQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDiscoverQCnt))
	}
	if m.SmdDiscoverQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDiscoverQCntPeak))
	}
	if m.SmdSolicitQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdSolicitQCnt))
	}
	if m.SmdSolicitQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdSolicitQCntPeak))
	}
	if m.SmdDhcpQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDhcpQCnt))
	}
	if m.SmdDhcpQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdDhcpQCntPeak))
	}
	if m.SmdHagQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdHagQCnt))
	}
	if m.SmdHagQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdHagQCntPeak))
	}
	if m.SmdTotalQCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdTotalQCnt))
	}
	if m.SmdTotalQCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdTotalQCntPeak))
	}
	if m.SmdNotificationQueueCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdNotificationQueueCnt))
	}
	if m.SmdNotificationQueueCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdNotificationQueueCntPeak))
	}
	if m.SmdMessageQueueCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdMessageQueueCnt))
	}
	if m.SmdMessageQueueCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdMessageQueueCntPeak))
	}
	if m.SmdPacketQueueCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPacketQueueCnt))
	}
	if m.SmdPacketQueueCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPacketQueueCntPeak))
	}
	if m.SmdPacketLowQueueCnt != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPacketLowQueueCnt))
	}
	if m.SmdPacketLowQueueCntPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.SmdPacketLowQueueCntPeak))
	}
	if m.IoPktCountLow != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPktCountLow))
	}
	if m.IoPktCountMlow != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPktCountMlow))
	}
	if m.IoPktCountMed != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPktCountMed))
	}
	if m.IoPktCountHigh != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPktCountHigh))
	}
	if m.IoPacketsDroppedLow != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedLow))
	}
	if m.IoPacketsDroppedMlow != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedMlow))
	}
	if m.IoPacketsDroppedMed != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedMed))
	}
	if m.IoPacketsDroppedHigh != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedHigh))
	}
	if m.IoPacketsDroppedPadiQlen != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedPadiQlen))
	}
	if m.IoPacketsDroppedPadiImbalance != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedPadiImbalance))
	}
	if m.IoPacketsDroppedDiscoverQlen != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedDiscoverQlen))
	}
	if m.IoPacketsDroppedDiscoverImbalance != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedDiscoverImbalance))
	}
	if m.IoPacketsDroppedSolicitQlen != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedSolicitQlen))
	}
	if m.IoPacketsDroppedSolicitImbalance != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedSolicitImbalance))
	}
	if m.IoPacketsDroppedDvlanQlen != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedDvlanQlen))
	}
	if m.IoPacketsDroppedDvlanImbalance != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedDvlanImbalance))
	}
	if m.IoPacketsDroppedHagQlen != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedHagQlen))
	}
	if m.IoPacketsDroppedHagImbalance != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.IoPacketsDroppedHagImbalance))
	}
	if m.MaxAllowedInFlightCurrent != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MaxAllowedInFlightCurrent))
	}
	if m.MaxAllowedInFlightActual != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MaxAllowedInFlightActual))
	}
	if m.MaxAllowedInFlightCurrentAbsolute != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MaxAllowedInFlightCurrentAbsolute))
	}
	if m.MaxAllowedInFlightMaxEverAbsolute != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MaxAllowedInFlightMaxEverAbsolute))
	}
	if m.MinAllowedInFlight != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MinAllowedInFlight))
	}
	if m.MaxLowPriPktToEnqueue != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.MaxLowPriPktToEnqueue))
	}
	if m.InFlightDvlan != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightDvlan))
	}
	if m.InFlightDvlanPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightDvlanPeak))
	}
	if m.InFlightDhcp != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightDhcp))
	}
	if m.InFlightDhcpPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightDhcpPeak))
	}
	if m.InFlightPpp != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightPpp))
	}
	if m.InFlightPppPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightPppPeak))
	}
	if m.InFlightHag != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightHag))
	}
	if m.InFlightHagPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightHagPeak))
	}
	if m.InFlightTotal != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightTotal))
	}
	if m.InFlightTotalPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InFlightTotalPeak))
	}
	if m.InNegoDvlan != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoDvlan))
	}
	if m.InNegoDvlanPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoDvlanPeak))
	}
	if m.InNegoDhcp != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoDhcp))
	}
	if m.InNegoDhcpPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoDhcpPeak))
	}
	if m.InNegoPpp != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoPpp))
	}
	if m.InNegoPppPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoPppPeak))
	}
	if m.InNegoHag != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoHag))
	}
	if m.InNegoHagPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoHagPeak))
	}
	if m.InNegoTotal != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoTotal))
	}
	if m.InNegoTotalPeak != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoTotalPeak))
	}
	if m.InNegoOverrides != nil {
		n += 2 + sovBbeSmgdSmdQueueStatsOc(uint64(*m.InNegoOverrides))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBbeSmgdSmdQueueStatsOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBbeSmgdSmdQueueStatsOc(x uint64) (n int) {
	return sovBbeSmgdSmdQueueStatsOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DebugQueueStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: debug_queue_stats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: debug_queue_stats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &DebugQueueStatsSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &DebugQueueStatsSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uplanes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Uplanes == nil {
				m.Uplanes = &DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType{}
			}
			if err := m.Uplanes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: uplanes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: uplanes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uplane", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uplane = append(m.Uplane, &DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList{})
			if err := m.Uplane[len(m.Uplane)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: uplane_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: uplane_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UplaneId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UplaneId = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Infra == nil {
				m.Infra = &DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType{}
			}
			if err := m.Infra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: infra_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: infra_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Era", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Era == nil {
				m.Era = &DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType{}
			}
			if err := m.Era.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DebugQueueStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeEraType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: era_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: era_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDvlanQCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDvlanQCount = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDvlanMaxQCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDvlanMaxQCount = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdPadiQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdPadiQCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdPadiQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdPadiQCntPeak = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDiscoverQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDiscoverQCnt = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDiscoverQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDiscoverQCntPeak = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdSolicitQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdSolicitQCnt = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdSolicitQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdSolicitQCntPeak = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDhcpQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDhcpQCnt = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdDhcpQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdDhcpQCntPeak = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdHagQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdHagQCnt = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdHagQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdHagQCntPeak = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdTotalQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdTotalQCnt = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoToSmdTotalQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoToSmdTotalQCntPeak = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDvlanQCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDvlanQCount = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDvlanMaxQCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDvlanMaxQCount = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPadiQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPadiQCnt = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPadiQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPadiQCntPeak = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDiscoverQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDiscoverQCnt = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDiscoverQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDiscoverQCntPeak = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdSolicitQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdSolicitQCnt = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdSolicitQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdSolicitQCntPeak = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDhcpQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDhcpQCnt = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdDhcpQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdDhcpQCntPeak = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdHagQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdHagQCnt = &v
		case 76:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdHagQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdHagQCntPeak = &v
		case 77:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdTotalQCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdTotalQCnt = &v
		case 78:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdTotalQCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdTotalQCntPeak = &v
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdNotificationQueueCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdNotificationQueueCnt = &v
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdNotificationQueueCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdNotificationQueueCntPeak = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdMessageQueueCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdMessageQueueCnt = &v
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdMessageQueueCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdMessageQueueCntPeak = &v
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPacketQueueCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPacketQueueCnt = &v
		case 84:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPacketQueueCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPacketQueueCntPeak = &v
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPacketLowQueueCnt", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPacketLowQueueCnt = &v
		case 86:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmdPacketLowQueueCntPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SmdPacketLowQueueCntPeak = &v
		case 87:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPktCountLow", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPktCountLow = &v
		case 88:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPktCountMlow", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPktCountMlow = &v
		case 89:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPktCountMed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPktCountMed = &v
		case 90:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPktCountHigh", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPktCountHigh = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedLow", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedLow = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedMlow", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedMlow = &v
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedMed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedMed = &v
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedHigh", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedHigh = &v
		case 95:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedPadiQlen", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedPadiQlen = &v
		case 96:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedPadiImbalance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedPadiImbalance = &v
		case 97:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedDiscoverQlen", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedDiscoverQlen = &v
		case 98:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedDiscoverImbalance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedDiscoverImbalance = &v
		case 99:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedSolicitQlen", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedSolicitQlen = &v
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedSolicitImbalance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedSolicitImbalance = &v
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedDvlanQlen", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedDvlanQlen = &v
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedDvlanImbalance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedDvlanImbalance = &v
		case 103:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedHagQlen", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedHagQlen = &v
		case 104:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IoPacketsDroppedHagImbalance", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IoPacketsDroppedHagImbalance = &v
		case 105:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedInFlightCurrent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAllowedInFlightCurrent = &v
		case 106:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedInFlightActual", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAllowedInFlightActual = &v
		case 107:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedInFlightCurrentAbsolute", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAllowedInFlightCurrentAbsolute = &v
		case 108:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedInFlightMaxEverAbsolute", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAllowedInFlightMaxEverAbsolute = &v
		case 109:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinAllowedInFlight", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinAllowedInFlight = &v
		case 110:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLowPriPktToEnqueue", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxLowPriPktToEnqueue = &v
		case 111:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightDvlan", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightDvlan = &v
		case 112:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightDvlanPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightDvlanPeak = &v
		case 113:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightDhcp", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightDhcp = &v
		case 114:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightDhcpPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightDhcpPeak = &v
		case 115:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightPpp", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightPpp = &v
		case 116:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightPppPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightPppPeak = &v
		case 117:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightHag", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightHag = &v
		case 118:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightHagPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightHagPeak = &v
		case 119:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightTotal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightTotal = &v
		case 120:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFlightTotalPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFlightTotalPeak = &v
		case 121:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoDvlan", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoDvlan = &v
		case 122:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoDvlanPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoDvlanPeak = &v
		case 123:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoDhcp", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoDhcp = &v
		case 124:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoDhcpPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoDhcpPeak = &v
		case 125:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoPpp", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoPpp = &v
		case 126:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoPppPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoPppPeak = &v
		case 127:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoHag", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoHag = &v
		case 128:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoHagPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoHagPeak = &v
		case 129:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoTotal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoTotal = &v
		case 130:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoTotalPeak", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoTotalPeak = &v
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InNegoOverrides", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InNegoOverrides = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSmdQueueStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBbeSmgdSmdQueueStatsOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBbeSmgdSmdQueueStatsOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdSmdQueueStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBbeSmgdSmdQueueStatsOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBbeSmgdSmdQueueStatsOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBbeSmgdSmdQueueStatsOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBbeSmgdSmdQueueStatsOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBbeSmgdSmdQueueStatsOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBbeSmgdSmdQueueStatsOc = fmt.Errorf("proto: unexpected end of group")
)
