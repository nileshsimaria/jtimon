// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bbe-smgd_sub_mgmt_network_stats_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosNetworkStats struct {
	System               *JunosNetworkStatsSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *JunosNetworkStats) Reset()         { *m = JunosNetworkStats{} }
func (m *JunosNetworkStats) String() string { return proto.CompactTextString(m) }
func (*JunosNetworkStats) ProtoMessage()    {}
func (*JunosNetworkStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0}
}
func (m *JunosNetworkStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStats.Merge(m, src)
}
func (m *JunosNetworkStats) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStats) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStats.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStats proto.InternalMessageInfo

func (m *JunosNetworkStats) GetSystem() *JunosNetworkStatsSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosNetworkStatsSystemType struct {
	SubscriberManagement *JunosNetworkStatsSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *JunosNetworkStatsSystemType) Reset()         { *m = JunosNetworkStatsSystemType{} }
func (m *JunosNetworkStatsSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosNetworkStatsSystemType) ProtoMessage()    {}
func (*JunosNetworkStatsSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0}
}
func (m *JunosNetworkStatsSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemType) GetSubscriberManagement() *JunosNetworkStatsSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementType struct {
	Uplanes              *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType `protobuf:"bytes,151,opt,name=uplanes" json:"uplanes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_unrecognized     []byte                                                          `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) GetUplanes() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType {
	if m != nil {
		return m.Uplanes
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType struct {
	Uplane               []*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList `protobuf:"bytes,151,rep,name=uplane" json:"uplane,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                      `json:"-"`
	XXX_sizecache        int32                                                                       `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) GetUplane() []*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList {
	if m != nil {
		return m.Uplane
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList struct {
	UplaneId             *uint32                                                                            `protobuf:"varint,51,opt,name=uplane_id,json=uplaneId" json:"uplane_id,omitempty"`
	Infra                *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                             `json:"-"`
	XXX_sizecache        int32                                                                              `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) ProtoMessage() {}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) GetUplaneId() uint32 {
	if m != nil && m.UplaneId != nil {
		return *m.UplaneId
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) GetInfra() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType {
	if m != nil {
		return m.Infra
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType struct {
	Network              *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType `protobuf:"bytes,151,opt,name=network" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                         `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) GetNetwork() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType {
	if m != nil {
		return m.Network
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType struct {
	Io                   *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType    `protobuf:"bytes,151,opt,name=io" json:"io,omitempty"`
	Dhcp                 *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType  `protobuf:"bytes,152,opt,name=dhcp" json:"dhcp,omitempty"`
	Ppp                  *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType   `protobuf:"bytes,153,opt,name=ppp" json:"ppp,omitempty"`
	Pppoe                *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType `protobuf:"bytes,154,opt,name=pppoe" json:"pppoe,omitempty"`
	Dvlan                *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType `protobuf:"bytes,156,opt,name=dvlan" json:"dvlan,omitempty"`
	L2Tp                 *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType  `protobuf:"bytes,155,opt,name=l2tp" json:"l2tp,omitempty"`
	Hag                  *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType   `protobuf:"bytes,157,opt,name=hag" json:"hag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                  `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetIo() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType {
	if m != nil {
		return m.Io
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetDhcp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType {
	if m != nil {
		return m.Dhcp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetPpp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType {
	if m != nil {
		return m.Ppp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetPppoe() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType {
	if m != nil {
		return m.Pppoe
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetDvlan() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType {
	if m != nil {
		return m.Dvlan
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetL2Tp() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType {
	if m != nil {
		return m.L2Tp
	}
	return nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) GetHag() *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType {
	if m != nil {
		return m.Hag
	}
	return nil
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType struct {
	L2RxPacketsCnt                   *uint64  `protobuf:"varint,51,opt,name=l2_rx_packets_cnt,json=l2RxPacketsCnt" json:"l2_rx_packets_cnt,omitempty"`
	L2RxPacketsFailed                *uint64  `protobuf:"varint,52,opt,name=l2_rx_packets_failed,json=l2RxPacketsFailed" json:"l2_rx_packets_failed,omitempty"`
	L2RxMalformedCnt                 *uint64  `protobuf:"varint,53,opt,name=l2_rx_malformed_cnt,json=l2RxMalformedCnt" json:"l2_rx_malformed_cnt,omitempty"`
	L2RxIfdInvalid                   *uint64  `protobuf:"varint,54,opt,name=l2_rx_ifd_invalid,json=l2RxIfdInvalid" json:"l2_rx_ifd_invalid,omitempty"`
	L2RxIflInvalid                   *uint64  `protobuf:"varint,55,opt,name=l2_rx_ifl_invalid,json=l2RxIflInvalid" json:"l2_rx_ifl_invalid,omitempty"`
	L2RxNoIffCnt                     *uint64  `protobuf:"varint,56,opt,name=l2_rx_no_iff_cnt,json=l2RxNoIffCnt" json:"l2_rx_no_iff_cnt,omitempty"`
	L2RxIfCreateFailed               *uint64  `protobuf:"varint,57,opt,name=l2_rx_if_create_failed,json=l2RxIfCreateFailed" json:"l2_rx_if_create_failed,omitempty"`
	L2BbeIoRcvL3UnknownAddressFamily *uint64  `protobuf:"varint,58,opt,name=l2_bbe_io_rcv_l3_unknown_address_family,json=l2BbeIoRcvL3UnknownAddressFamily" json:"l2_bbe_io_rcv_l3_unknown_address_family,omitempty"`
	L2RxUnsupportedInetProtocol      *uint64  `protobuf:"varint,59,opt,name=l2_rx_unsupported_inet_protocol,json=l2RxUnsupportedInetProtocol" json:"l2_rx_unsupported_inet_protocol,omitempty"`
	L2RxUnsupportedInet6Protocol     *uint64  `protobuf:"varint,60,opt,name=l2_rx_unsupported_inet6_protocol,json=l2RxUnsupportedInet6Protocol" json:"l2_rx_unsupported_inet6_protocol,omitempty"`
	L2RxUnsupportedUdpProtocol       *uint64  `protobuf:"varint,61,opt,name=l2_rx_unsupported_udp_protocol,json=l2RxUnsupportedUdpProtocol" json:"l2_rx_unsupported_udp_protocol,omitempty"`
	L2RxUnsupportedPuntAf            *uint64  `protobuf:"varint,62,opt,name=l2_rx_unsupported_punt_af,json=l2RxUnsupportedPuntAf" json:"l2_rx_unsupported_punt_af,omitempty"`
	L2RxV4DataPathPuntPkt            *uint64  `protobuf:"varint,63,opt,name=l2_rx_v4_data_path_punt_pkt,json=l2RxV4DataPathPuntPkt" json:"l2_rx_v4_data_path_punt_pkt,omitempty"`
	L2RxV4DataPathPuntPktDrop        *uint64  `protobuf:"varint,64,opt,name=l2_rx_v4_data_path_punt_pkt_drop,json=l2RxV4DataPathPuntPktDrop" json:"l2_rx_v4_data_path_punt_pkt_drop,omitempty"`
	L2RxV6DataPathPuntPkt            *uint64  `protobuf:"varint,65,opt,name=l2_rx_v6_data_path_punt_pkt,json=l2RxV6DataPathPuntPkt" json:"l2_rx_v6_data_path_punt_pkt,omitempty"`
	L2RxV6DataPathPuntPktDrop        *uint64  `protobuf:"varint,66,opt,name=l2_rx_v6_data_path_punt_pkt_drop,json=l2RxV6DataPathPuntPktDrop" json:"l2_rx_v6_data_path_punt_pkt_drop,omitempty"`
	L2TxPacketsCnt                   *uint64  `protobuf:"varint,67,opt,name=l2_tx_packets_cnt,json=l2TxPacketsCnt" json:"l2_tx_packets_cnt,omitempty"`
	L2TxMalformedCnt                 *uint64  `protobuf:"varint,68,opt,name=l2_tx_malformed_cnt,json=l2TxMalformedCnt" json:"l2_tx_malformed_cnt,omitempty"`
	L2TxNoIfdCnt                     *uint64  `protobuf:"varint,69,opt,name=l2_tx_no_ifd_cnt,json=l2TxNoIfdCnt" json:"l2_tx_no_ifd_cnt,omitempty"`
	L2TxIflInvalid                   *uint64  `protobuf:"varint,70,opt,name=l2_tx_ifl_invalid,json=l2TxIflInvalid" json:"l2_tx_ifl_invalid,omitempty"`
	L2BbeIoSendTxFailed              *uint64  `protobuf:"varint,71,opt,name=l2_bbe_io_send_tx_failed,json=l2BbeIoSendTxFailed" json:"l2_bbe_io_send_tx_failed,omitempty"`
	L2BbeIoSendTxFailedPartial       *uint64  `protobuf:"varint,72,opt,name=l2_bbe_io_send_tx_failed_partial,json=l2BbeIoSendTxFailedPartial" json:"l2_bbe_io_send_tx_failed_partial,omitempty"`
	L2TxV4OutErrorLocalIntf          *uint64  `protobuf:"varint,73,opt,name=l2_tx_v4_out_error_local_intf,json=l2TxV4OutErrorLocalIntf" json:"l2_tx_v4_out_error_local_intf,omitempty"`
	L2TxV6OutErrorLocalIntf          *uint64  `protobuf:"varint,74,opt,name=l2_tx_v6_out_error_local_intf,json=l2TxV6OutErrorLocalIntf" json:"l2_tx_v6_out_error_local_intf,omitempty"`
	L3RxPacketCnt                    *uint64  `protobuf:"varint,75,opt,name=l3_rx_packet_cnt,json=l3RxPacketCnt" json:"l3_rx_packet_cnt,omitempty"`
	L3RxUnsupportedProtocol          *uint64  `protobuf:"varint,76,opt,name=l3_rx_unsupported_protocol,json=l3RxUnsupportedProtocol" json:"l3_rx_unsupported_protocol,omitempty"`
	L3TxPacketCnt                    *uint64  `protobuf:"varint,77,opt,name=l3_tx_packet_cnt,json=l3TxPacketCnt" json:"l3_tx_packet_cnt,omitempty"`
	L3TxSendFailed                   *uint64  `protobuf:"varint,78,opt,name=l3_tx_send_failed,json=l3TxSendFailed" json:"l3_tx_send_failed,omitempty"`
	L3TxV4KernelForward              *uint64  `protobuf:"varint,79,opt,name=l3_tx_v4_kernel_forward,json=l3TxV4KernelForward" json:"l3_tx_v4_kernel_forward,omitempty"`
	L3TxV4KernelForwardDrops         *uint64  `protobuf:"varint,80,opt,name=l3_tx_v4_kernel_forward_drops,json=l3TxV4KernelForwardDrops" json:"l3_tx_v4_kernel_forward_drops,omitempty"`
	L3TxV6KernelForward              *uint64  `protobuf:"varint,81,opt,name=l3_tx_v6_kernel_forward,json=l3TxV6KernelForward" json:"l3_tx_v6_kernel_forward,omitempty"`
	L3TxV6KernelForwardDrops         *uint64  `protobuf:"varint,82,opt,name=l3_tx_v6_kernel_forward_drops,json=l3TxV6KernelForwardDrops" json:"l3_tx_v6_kernel_forward_drops,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxPacketsCnt() uint64 {
	if m != nil && m.L2RxPacketsCnt != nil {
		return *m.L2RxPacketsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxPacketsFailed() uint64 {
	if m != nil && m.L2RxPacketsFailed != nil {
		return *m.L2RxPacketsFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxMalformedCnt() uint64 {
	if m != nil && m.L2RxMalformedCnt != nil {
		return *m.L2RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxIfdInvalid() uint64 {
	if m != nil && m.L2RxIfdInvalid != nil {
		return *m.L2RxIfdInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxIflInvalid() uint64 {
	if m != nil && m.L2RxIflInvalid != nil {
		return *m.L2RxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxNoIffCnt() uint64 {
	if m != nil && m.L2RxNoIffCnt != nil {
		return *m.L2RxNoIffCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxIfCreateFailed() uint64 {
	if m != nil && m.L2RxIfCreateFailed != nil {
		return *m.L2RxIfCreateFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2BbeIoRcvL3UnknownAddressFamily() uint64 {
	if m != nil && m.L2BbeIoRcvL3UnknownAddressFamily != nil {
		return *m.L2BbeIoRcvL3UnknownAddressFamily
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxUnsupportedInetProtocol() uint64 {
	if m != nil && m.L2RxUnsupportedInetProtocol != nil {
		return *m.L2RxUnsupportedInetProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxUnsupportedInet6Protocol() uint64 {
	if m != nil && m.L2RxUnsupportedInet6Protocol != nil {
		return *m.L2RxUnsupportedInet6Protocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxUnsupportedUdpProtocol() uint64 {
	if m != nil && m.L2RxUnsupportedUdpProtocol != nil {
		return *m.L2RxUnsupportedUdpProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxUnsupportedPuntAf() uint64 {
	if m != nil && m.L2RxUnsupportedPuntAf != nil {
		return *m.L2RxUnsupportedPuntAf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxV4DataPathPuntPkt() uint64 {
	if m != nil && m.L2RxV4DataPathPuntPkt != nil {
		return *m.L2RxV4DataPathPuntPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxV4DataPathPuntPktDrop() uint64 {
	if m != nil && m.L2RxV4DataPathPuntPktDrop != nil {
		return *m.L2RxV4DataPathPuntPktDrop
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxV6DataPathPuntPkt() uint64 {
	if m != nil && m.L2RxV6DataPathPuntPkt != nil {
		return *m.L2RxV6DataPathPuntPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2RxV6DataPathPuntPktDrop() uint64 {
	if m != nil && m.L2RxV6DataPathPuntPktDrop != nil {
		return *m.L2RxV6DataPathPuntPktDrop
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxPacketsCnt() uint64 {
	if m != nil && m.L2TxPacketsCnt != nil {
		return *m.L2TxPacketsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxMalformedCnt() uint64 {
	if m != nil && m.L2TxMalformedCnt != nil {
		return *m.L2TxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxNoIfdCnt() uint64 {
	if m != nil && m.L2TxNoIfdCnt != nil {
		return *m.L2TxNoIfdCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxIflInvalid() uint64 {
	if m != nil && m.L2TxIflInvalid != nil {
		return *m.L2TxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2BbeIoSendTxFailed() uint64 {
	if m != nil && m.L2BbeIoSendTxFailed != nil {
		return *m.L2BbeIoSendTxFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2BbeIoSendTxFailedPartial() uint64 {
	if m != nil && m.L2BbeIoSendTxFailedPartial != nil {
		return *m.L2BbeIoSendTxFailedPartial
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxV4OutErrorLocalIntf() uint64 {
	if m != nil && m.L2TxV4OutErrorLocalIntf != nil {
		return *m.L2TxV4OutErrorLocalIntf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL2TxV6OutErrorLocalIntf() uint64 {
	if m != nil && m.L2TxV6OutErrorLocalIntf != nil {
		return *m.L2TxV6OutErrorLocalIntf
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3RxPacketCnt() uint64 {
	if m != nil && m.L3RxPacketCnt != nil {
		return *m.L3RxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3RxUnsupportedProtocol() uint64 {
	if m != nil && m.L3RxUnsupportedProtocol != nil {
		return *m.L3RxUnsupportedProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxPacketCnt() uint64 {
	if m != nil && m.L3TxPacketCnt != nil {
		return *m.L3TxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxSendFailed() uint64 {
	if m != nil && m.L3TxSendFailed != nil {
		return *m.L3TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxV4KernelForward() uint64 {
	if m != nil && m.L3TxV4KernelForward != nil {
		return *m.L3TxV4KernelForward
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxV4KernelForwardDrops() uint64 {
	if m != nil && m.L3TxV4KernelForwardDrops != nil {
		return *m.L3TxV4KernelForwardDrops
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxV6KernelForward() uint64 {
	if m != nil && m.L3TxV6KernelForward != nil {
		return *m.L3TxV6KernelForward
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) GetL3TxV6KernelForwardDrops() uint64 {
	if m != nil && m.L3TxV6KernelForwardDrops != nil {
		return *m.L3TxV6KernelForwardDrops
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType struct {
	RxPacketCnt          *uint64  `protobuf:"varint,51,opt,name=rx_packet_cnt,json=rxPacketCnt" json:"rx_packet_cnt,omitempty"`
	EraDrops             *uint64  `protobuf:"varint,52,opt,name=era_drops,json=eraDrops" json:"era_drops,omitempty"`
	RxNoConnection       *uint64  `protobuf:"varint,53,opt,name=rx_no_connection,json=rxNoConnection" json:"rx_no_connection,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,54,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,55,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxIflInvalid         *uint64  `protobuf:"varint,56,opt,name=rx_ifl_invalid,json=rxIflInvalid" json:"rx_ifl_invalid,omitempty"`
	RxSendFailed         *uint64  `protobuf:"varint,57,opt,name=rx_send_failed,json=rxSendFailed" json:"rx_send_failed,omitempty"`
	TxPacketCnt          *uint64  `protobuf:"varint,58,opt,name=tx_packet_cnt,json=txPacketCnt" json:"tx_packet_cnt,omitempty"`
	PacketsTransmitted   *uint64  `protobuf:"varint,59,opt,name=packets_transmitted,json=packetsTransmitted" json:"packets_transmitted,omitempty"`
	TxMalformedCnt       *uint64  `protobuf:"varint,60,opt,name=tx_malformed_cnt,json=txMalformedCnt" json:"tx_malformed_cnt,omitempty"`
	TxNullPkt            *uint64  `protobuf:"varint,61,opt,name=tx_null_pkt,json=txNullPkt" json:"tx_null_pkt,omitempty"`
	TxNoIfCnt            *uint64  `protobuf:"varint,62,opt,name=tx_no_if_cnt,json=txNoIfCnt" json:"tx_no_if_cnt,omitempty"`
	TxNoIffCnt           *uint64  `protobuf:"varint,63,opt,name=tx_no_iff_cnt,json=txNoIffCnt" json:"tx_no_iff_cnt,omitempty"`
	TxNoRttCnt           *uint64  `protobuf:"varint,64,opt,name=tx_no_rtt_cnt,json=txNoRttCnt" json:"tx_no_rtt_cnt,omitempty"`
	TxArpFailed          *uint64  `protobuf:"varint,65,opt,name=tx_arp_failed,json=txArpFailed" json:"tx_arp_failed,omitempty"`
	TxIfInvalid          *uint64  `protobuf:"varint,66,opt,name=tx_if_invalid,json=txIfInvalid" json:"tx_if_invalid,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,67,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	RxWhileNotConnected  *uint64  `protobuf:"varint,68,opt,name=rx_while_not_connected,json=rxWhileNotConnected" json:"rx_while_not_connected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 1}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxPacketCnt() uint64 {
	if m != nil && m.RxPacketCnt != nil {
		return *m.RxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetEraDrops() uint64 {
	if m != nil && m.EraDrops != nil {
		return *m.EraDrops
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxNoConnection() uint64 {
	if m != nil && m.RxNoConnection != nil {
		return *m.RxNoConnection
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxIflInvalid() uint64 {
	if m != nil && m.RxIflInvalid != nil {
		return *m.RxIflInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxSendFailed() uint64 {
	if m != nil && m.RxSendFailed != nil {
		return *m.RxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxPacketCnt() uint64 {
	if m != nil && m.TxPacketCnt != nil {
		return *m.TxPacketCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetPacketsTransmitted() uint64 {
	if m != nil && m.PacketsTransmitted != nil {
		return *m.PacketsTransmitted
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxMalformedCnt() uint64 {
	if m != nil && m.TxMalformedCnt != nil {
		return *m.TxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxNullPkt() uint64 {
	if m != nil && m.TxNullPkt != nil {
		return *m.TxNullPkt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxNoIfCnt() uint64 {
	if m != nil && m.TxNoIfCnt != nil {
		return *m.TxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxNoIffCnt() uint64 {
	if m != nil && m.TxNoIffCnt != nil {
		return *m.TxNoIffCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxNoRttCnt() uint64 {
	if m != nil && m.TxNoRttCnt != nil {
		return *m.TxNoRttCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxArpFailed() uint64 {
	if m != nil && m.TxArpFailed != nil {
		return *m.TxArpFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxIfInvalid() uint64 {
	if m != nil && m.TxIfInvalid != nil {
		return *m.TxIfInvalid
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) GetRxWhileNotConnected() uint64 {
	if m != nil && m.RxWhileNotConnected != nil {
		return *m.RxWhileNotConnected
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType struct {
	RxNetworkPktCnt      *uint64  `protobuf:"varint,51,opt,name=rx_network_pkt_cnt,json=rxNetworkPktCnt" json:"rx_network_pkt_cnt,omitempty"`
	RxPluginPktCnt       *uint64  `protobuf:"varint,52,opt,name=rx_plugin_pkt_cnt,json=rxPluginPktCnt" json:"rx_plugin_pkt_cnt,omitempty"`
	RxLcpConfReqCnt      *uint64  `protobuf:"varint,53,opt,name=rx_lcp_conf_req_cnt,json=rxLcpConfReqCnt" json:"rx_lcp_conf_req_cnt,omitempty"`
	RxLcpConfAckCnt      *uint64  `protobuf:"varint,54,opt,name=rx_lcp_conf_ack_cnt,json=rxLcpConfAckCnt" json:"rx_lcp_conf_ack_cnt,omitempty"`
	RxLcpConfNackCnt     *uint64  `protobuf:"varint,55,opt,name=rx_lcp_conf_nack_cnt,json=rxLcpConfNackCnt" json:"rx_lcp_conf_nack_cnt,omitempty"`
	RxLcpConfRejCnt      *uint64  `protobuf:"varint,56,opt,name=rx_lcp_conf_rej_cnt,json=rxLcpConfRejCnt" json:"rx_lcp_conf_rej_cnt,omitempty"`
	RxLcpTermReqCnt      *uint64  `protobuf:"varint,57,opt,name=rx_lcp_term_req_cnt,json=rxLcpTermReqCnt" json:"rx_lcp_term_req_cnt,omitempty"`
	RxLcpTermAckCnt      *uint64  `protobuf:"varint,58,opt,name=rx_lcp_term_ack_cnt,json=rxLcpTermAckCnt" json:"rx_lcp_term_ack_cnt,omitempty"`
	RxLcpCodeRejCnt      *uint64  `protobuf:"varint,59,opt,name=rx_lcp_code_rej_cnt,json=rxLcpCodeRejCnt" json:"rx_lcp_code_rej_cnt,omitempty"`
	RxLcpProtocolRejCnt  *uint64  `protobuf:"varint,60,opt,name=rx_lcp_protocol_rej_cnt,json=rxLcpProtocolRejCnt" json:"rx_lcp_protocol_rej_cnt,omitempty"`
	RxLcpEchoReqCnt      *uint64  `protobuf:"varint,61,opt,name=rx_lcp_echo_req_cnt,json=rxLcpEchoReqCnt" json:"rx_lcp_echo_req_cnt,omitempty"`
	RxLcpEchoReplyCnt    *uint64  `protobuf:"varint,62,opt,name=rx_lcp_echo_reply_cnt,json=rxLcpEchoReplyCnt" json:"rx_lcp_echo_reply_cnt,omitempty"`
	RxLcpDiscardReqCnt   *uint64  `protobuf:"varint,63,opt,name=rx_lcp_discard_req_cnt,json=rxLcpDiscardReqCnt" json:"rx_lcp_discard_req_cnt,omitempty"`
	RxPapReqCnt          *uint64  `protobuf:"varint,64,opt,name=rx_pap_req_cnt,json=rxPapReqCnt" json:"rx_pap_req_cnt,omitempty"`
	RxPapAckCnt          *uint64  `protobuf:"varint,65,opt,name=rx_pap_ack_cnt,json=rxPapAckCnt" json:"rx_pap_ack_cnt,omitempty"`
	RxPapNackCnt         *uint64  `protobuf:"varint,66,opt,name=rx_pap_nack_cnt,json=rxPapNackCnt" json:"rx_pap_nack_cnt,omitempty"`
	RxChapChallengeCnt   *uint64  `protobuf:"varint,67,opt,name=rx_chap_challenge_cnt,json=rxChapChallengeCnt" json:"rx_chap_challenge_cnt,omitempty"`
	RxChapRespCnt        *uint64  `protobuf:"varint,68,opt,name=rx_chap_resp_cnt,json=rxChapRespCnt" json:"rx_chap_resp_cnt,omitempty"`
	RxChapSuccessCnt     *uint64  `protobuf:"varint,69,opt,name=rx_chap_success_cnt,json=rxChapSuccessCnt" json:"rx_chap_success_cnt,omitempty"`
	RxChapFailureCnt     *uint64  `protobuf:"varint,70,opt,name=rx_chap_failure_cnt,json=rxChapFailureCnt" json:"rx_chap_failure_cnt,omitempty"`
	RxIpcpReqCnt         *uint64  `protobuf:"varint,71,opt,name=rx_ipcp_req_cnt,json=rxIpcpReqCnt" json:"rx_ipcp_req_cnt,omitempty"`
	RxIpcpAckCnt         *uint64  `protobuf:"varint,72,opt,name=rx_ipcp_ack_cnt,json=rxIpcpAckCnt" json:"rx_ipcp_ack_cnt,omitempty"`
	RxIpcpNackCnt        *uint64  `protobuf:"varint,73,opt,name=rx_ipcp_nack_cnt,json=rxIpcpNackCnt" json:"rx_ipcp_nack_cnt,omitempty"`
	RxIpv6CpReqCnt       *uint64  `protobuf:"varint,74,opt,name=rx_ipv6cp_req_cnt,json=rxIpv6cpReqCnt" json:"rx_ipv6cp_req_cnt,omitempty"`
	RxIpv6CpAckCnt       *uint64  `protobuf:"varint,75,opt,name=rx_ipv6cp_ack_cnt,json=rxIpv6cpAckCnt" json:"rx_ipv6cp_ack_cnt,omitempty"`
	RxIpv6CpNackCnt      *uint64  `protobuf:"varint,76,opt,name=rx_ipv6cp_nack_cnt,json=rxIpv6cpNackCnt" json:"rx_ipv6cp_nack_cnt,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,77,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,78,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxUnsupported        *uint64  `protobuf:"varint,79,opt,name=rx_unsupported,json=rxUnsupported" json:"rx_unsupported,omitempty"`
	TxCnt                *uint64  `protobuf:"varint,80,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	TxLcpConfReqCnt      *uint64  `protobuf:"varint,81,opt,name=tx_lcp_conf_req_cnt,json=txLcpConfReqCnt" json:"tx_lcp_conf_req_cnt,omitempty"`
	TxLcpConfAckCnt      *uint64  `protobuf:"varint,82,opt,name=tx_lcp_conf_ack_cnt,json=txLcpConfAckCnt" json:"tx_lcp_conf_ack_cnt,omitempty"`
	TxLcpConfNackCnt     *uint64  `protobuf:"varint,83,opt,name=tx_lcp_conf_nack_cnt,json=txLcpConfNackCnt" json:"tx_lcp_conf_nack_cnt,omitempty"`
	TxLcpConfRejCnt      *uint64  `protobuf:"varint,84,opt,name=tx_lcp_conf_rej_cnt,json=txLcpConfRejCnt" json:"tx_lcp_conf_rej_cnt,omitempty"`
	TxLcpEchoReqCnt      *uint64  `protobuf:"varint,85,opt,name=tx_lcp_echo_req_cnt,json=txLcpEchoReqCnt" json:"tx_lcp_echo_req_cnt,omitempty"`
	TxLcpEchoReplyCnt    *uint64  `protobuf:"varint,86,opt,name=tx_lcp_echo_reply_cnt,json=txLcpEchoReplyCnt" json:"tx_lcp_echo_reply_cnt,omitempty"`
	TxLcpDiscardReqCnt   *uint64  `protobuf:"varint,87,opt,name=tx_lcp_discard_req_cnt,json=txLcpDiscardReqCnt" json:"tx_lcp_discard_req_cnt,omitempty"`
	TxLcpTermReqCnt      *uint64  `protobuf:"varint,88,opt,name=tx_lcp_term_req_cnt,json=txLcpTermReqCnt" json:"tx_lcp_term_req_cnt,omitempty"`
	TxLcpTermAckCnt      *uint64  `protobuf:"varint,89,opt,name=tx_lcp_term_ack_cnt,json=txLcpTermAckCnt" json:"tx_lcp_term_ack_cnt,omitempty"`
	TxPapReqCnt          *uint64  `protobuf:"varint,90,opt,name=tx_pap_req_cnt,json=txPapReqCnt" json:"tx_pap_req_cnt,omitempty"`
	TxPapAckCnt          *uint64  `protobuf:"varint,91,opt,name=tx_pap_ack_cnt,json=txPapAckCnt" json:"tx_pap_ack_cnt,omitempty"`
	TxPapNackCnt         *uint64  `protobuf:"varint,92,opt,name=tx_pap_nack_cnt,json=txPapNackCnt" json:"tx_pap_nack_cnt,omitempty"`
	TxChapChallengeCnt   *uint64  `protobuf:"varint,93,opt,name=tx_chap_challenge_cnt,json=txChapChallengeCnt" json:"tx_chap_challenge_cnt,omitempty"`
	TxChapRespCnt        *uint64  `protobuf:"varint,94,opt,name=tx_chap_resp_cnt,json=txChapRespCnt" json:"tx_chap_resp_cnt,omitempty"`
	TxChapSuccessCnt     *uint64  `protobuf:"varint,95,opt,name=tx_chap_success_cnt,json=txChapSuccessCnt" json:"tx_chap_success_cnt,omitempty"`
	TxChapFailureCnt     *uint64  `protobuf:"varint,96,opt,name=tx_chap_failure_cnt,json=txChapFailureCnt" json:"tx_chap_failure_cnt,omitempty"`
	TxIpcpReqCnt         *uint64  `protobuf:"varint,97,opt,name=tx_ipcp_req_cnt,json=txIpcpReqCnt" json:"tx_ipcp_req_cnt,omitempty"`
	TxIpcpAckCnt         *uint64  `protobuf:"varint,98,opt,name=tx_ipcp_ack_cnt,json=txIpcpAckCnt" json:"tx_ipcp_ack_cnt,omitempty"`
	TxIpcpNackCnt        *uint64  `protobuf:"varint,99,opt,name=tx_ipcp_nack_cnt,json=txIpcpNackCnt" json:"tx_ipcp_nack_cnt,omitempty"`
	TxIpv6CpReqCnt       *uint64  `protobuf:"varint,100,opt,name=tx_ipv6cp_req_cnt,json=txIpv6cpReqCnt" json:"tx_ipv6cp_req_cnt,omitempty"`
	TxIpv6CpAckCnt       *uint64  `protobuf:"varint,101,opt,name=tx_ipv6cp_ack_cnt,json=txIpv6cpAckCnt" json:"tx_ipv6cp_ack_cnt,omitempty"`
	TxIpv6CpNackCnt      *uint64  `protobuf:"varint,102,opt,name=tx_ipv6cp_nack_cnt,json=txIpv6cpNackCnt" json:"tx_ipv6cp_nack_cnt,omitempty"`
	TxUnknownPktCnt      *uint64  `protobuf:"varint,103,opt,name=tx_unknown_pkt_cnt,json=txUnknownPktCnt" json:"tx_unknown_pkt_cnt,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,104,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	TxMalformedCnt       *uint64  `protobuf:"varint,105,opt,name=tx_malformed_cnt,json=txMalformedCnt" json:"tx_malformed_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 2}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxNetworkPktCnt() uint64 {
	if m != nil && m.RxNetworkPktCnt != nil {
		return *m.RxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxPluginPktCnt() uint64 {
	if m != nil && m.RxPluginPktCnt != nil {
		return *m.RxPluginPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpConfReqCnt() uint64 {
	if m != nil && m.RxLcpConfReqCnt != nil {
		return *m.RxLcpConfReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpConfAckCnt() uint64 {
	if m != nil && m.RxLcpConfAckCnt != nil {
		return *m.RxLcpConfAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpConfNackCnt() uint64 {
	if m != nil && m.RxLcpConfNackCnt != nil {
		return *m.RxLcpConfNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpConfRejCnt() uint64 {
	if m != nil && m.RxLcpConfRejCnt != nil {
		return *m.RxLcpConfRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpTermReqCnt() uint64 {
	if m != nil && m.RxLcpTermReqCnt != nil {
		return *m.RxLcpTermReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpTermAckCnt() uint64 {
	if m != nil && m.RxLcpTermAckCnt != nil {
		return *m.RxLcpTermAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpCodeRejCnt() uint64 {
	if m != nil && m.RxLcpCodeRejCnt != nil {
		return *m.RxLcpCodeRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpProtocolRejCnt() uint64 {
	if m != nil && m.RxLcpProtocolRejCnt != nil {
		return *m.RxLcpProtocolRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpEchoReqCnt() uint64 {
	if m != nil && m.RxLcpEchoReqCnt != nil {
		return *m.RxLcpEchoReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpEchoReplyCnt() uint64 {
	if m != nil && m.RxLcpEchoReplyCnt != nil {
		return *m.RxLcpEchoReplyCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxLcpDiscardReqCnt() uint64 {
	if m != nil && m.RxLcpDiscardReqCnt != nil {
		return *m.RxLcpDiscardReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxPapReqCnt() uint64 {
	if m != nil && m.RxPapReqCnt != nil {
		return *m.RxPapReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxPapAckCnt() uint64 {
	if m != nil && m.RxPapAckCnt != nil {
		return *m.RxPapAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxPapNackCnt() uint64 {
	if m != nil && m.RxPapNackCnt != nil {
		return *m.RxPapNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxChapChallengeCnt() uint64 {
	if m != nil && m.RxChapChallengeCnt != nil {
		return *m.RxChapChallengeCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxChapRespCnt() uint64 {
	if m != nil && m.RxChapRespCnt != nil {
		return *m.RxChapRespCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxChapSuccessCnt() uint64 {
	if m != nil && m.RxChapSuccessCnt != nil {
		return *m.RxChapSuccessCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxChapFailureCnt() uint64 {
	if m != nil && m.RxChapFailureCnt != nil {
		return *m.RxChapFailureCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpcpReqCnt() uint64 {
	if m != nil && m.RxIpcpReqCnt != nil {
		return *m.RxIpcpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpcpAckCnt() uint64 {
	if m != nil && m.RxIpcpAckCnt != nil {
		return *m.RxIpcpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpcpNackCnt() uint64 {
	if m != nil && m.RxIpcpNackCnt != nil {
		return *m.RxIpcpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpv6CpReqCnt() uint64 {
	if m != nil && m.RxIpv6CpReqCnt != nil {
		return *m.RxIpv6CpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpv6CpAckCnt() uint64 {
	if m != nil && m.RxIpv6CpAckCnt != nil {
		return *m.RxIpv6CpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxIpv6CpNackCnt() uint64 {
	if m != nil && m.RxIpv6CpNackCnt != nil {
		return *m.RxIpv6CpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetRxUnsupported() uint64 {
	if m != nil && m.RxUnsupported != nil {
		return *m.RxUnsupported
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpConfReqCnt() uint64 {
	if m != nil && m.TxLcpConfReqCnt != nil {
		return *m.TxLcpConfReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpConfAckCnt() uint64 {
	if m != nil && m.TxLcpConfAckCnt != nil {
		return *m.TxLcpConfAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpConfNackCnt() uint64 {
	if m != nil && m.TxLcpConfNackCnt != nil {
		return *m.TxLcpConfNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpConfRejCnt() uint64 {
	if m != nil && m.TxLcpConfRejCnt != nil {
		return *m.TxLcpConfRejCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpEchoReqCnt() uint64 {
	if m != nil && m.TxLcpEchoReqCnt != nil {
		return *m.TxLcpEchoReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpEchoReplyCnt() uint64 {
	if m != nil && m.TxLcpEchoReplyCnt != nil {
		return *m.TxLcpEchoReplyCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpDiscardReqCnt() uint64 {
	if m != nil && m.TxLcpDiscardReqCnt != nil {
		return *m.TxLcpDiscardReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpTermReqCnt() uint64 {
	if m != nil && m.TxLcpTermReqCnt != nil {
		return *m.TxLcpTermReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxLcpTermAckCnt() uint64 {
	if m != nil && m.TxLcpTermAckCnt != nil {
		return *m.TxLcpTermAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxPapReqCnt() uint64 {
	if m != nil && m.TxPapReqCnt != nil {
		return *m.TxPapReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxPapAckCnt() uint64 {
	if m != nil && m.TxPapAckCnt != nil {
		return *m.TxPapAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxPapNackCnt() uint64 {
	if m != nil && m.TxPapNackCnt != nil {
		return *m.TxPapNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxChapChallengeCnt() uint64 {
	if m != nil && m.TxChapChallengeCnt != nil {
		return *m.TxChapChallengeCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxChapRespCnt() uint64 {
	if m != nil && m.TxChapRespCnt != nil {
		return *m.TxChapRespCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxChapSuccessCnt() uint64 {
	if m != nil && m.TxChapSuccessCnt != nil {
		return *m.TxChapSuccessCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxChapFailureCnt() uint64 {
	if m != nil && m.TxChapFailureCnt != nil {
		return *m.TxChapFailureCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpcpReqCnt() uint64 {
	if m != nil && m.TxIpcpReqCnt != nil {
		return *m.TxIpcpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpcpAckCnt() uint64 {
	if m != nil && m.TxIpcpAckCnt != nil {
		return *m.TxIpcpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpcpNackCnt() uint64 {
	if m != nil && m.TxIpcpNackCnt != nil {
		return *m.TxIpcpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpv6CpReqCnt() uint64 {
	if m != nil && m.TxIpv6CpReqCnt != nil {
		return *m.TxIpv6CpReqCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpv6CpAckCnt() uint64 {
	if m != nil && m.TxIpv6CpAckCnt != nil {
		return *m.TxIpv6CpAckCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxIpv6CpNackCnt() uint64 {
	if m != nil && m.TxIpv6CpNackCnt != nil {
		return *m.TxIpv6CpNackCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxUnknownPktCnt() uint64 {
	if m != nil && m.TxUnknownPktCnt != nil {
		return *m.TxUnknownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) GetTxMalformedCnt() uint64 {
	if m != nil && m.TxMalformedCnt != nil {
		return *m.TxMalformedCnt
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType struct {
	RxCnt                *uint64  `protobuf:"varint,51,opt,name=rx_cnt,json=rxCnt" json:"rx_cnt,omitempty"`
	RxPadiCnt            *uint64  `protobuf:"varint,52,opt,name=rx_padi_cnt,json=rxPadiCnt" json:"rx_padi_cnt,omitempty"`
	RxPadrCnt            *uint64  `protobuf:"varint,53,opt,name=rx_padr_cnt,json=rxPadrCnt" json:"rx_padr_cnt,omitempty"`
	RxPppCnt             *uint64  `protobuf:"varint,54,opt,name=rx_ppp_cnt,json=rxPppCnt" json:"rx_ppp_cnt,omitempty"`
	RxMalformedCnt       *uint64  `protobuf:"varint,55,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	RxNoIfCnt            *uint64  `protobuf:"varint,56,opt,name=rx_no_if_cnt,json=rxNoIfCnt" json:"rx_no_if_cnt,omitempty"`
	RxUnsupported        *uint64  `protobuf:"varint,57,opt,name=rx_unsupported,json=rxUnsupported" json:"rx_unsupported,omitempty"`
	RxPadiEraDiscards    *uint64  `protobuf:"varint,58,opt,name=rx_padi_era_discards,json=rxPadiEraDiscards" json:"rx_padi_era_discards,omitempty"`
	TxCnt                *uint64  `protobuf:"varint,59,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	TxSendFailed         *uint64  `protobuf:"varint,60,opt,name=tx_send_failed,json=txSendFailed" json:"tx_send_failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 3}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxCnt() uint64 {
	if m != nil && m.RxCnt != nil {
		return *m.RxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxPadiCnt() uint64 {
	if m != nil && m.RxPadiCnt != nil {
		return *m.RxPadiCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxPadrCnt() uint64 {
	if m != nil && m.RxPadrCnt != nil {
		return *m.RxPadrCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxPppCnt() uint64 {
	if m != nil && m.RxPppCnt != nil {
		return *m.RxPppCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxNoIfCnt() uint64 {
	if m != nil && m.RxNoIfCnt != nil {
		return *m.RxNoIfCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxUnsupported() uint64 {
	if m != nil && m.RxUnsupported != nil {
		return *m.RxUnsupported
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetRxPadiEraDiscards() uint64 {
	if m != nil && m.RxPadiEraDiscards != nil {
		return *m.RxPadiEraDiscards
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) GetTxSendFailed() uint64 {
	if m != nil && m.TxSendFailed != nil {
		return *m.TxSendFailed
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType struct {
	RxPacketCnt          *uint64  `protobuf:"varint,51,opt,name=rx_packet_cnt,json=rxPacketCnt" json:"rx_packet_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 4}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) GetRxPacketCnt() uint64 {
	if m != nil && m.RxPacketCnt != nil {
		return *m.RxPacketCnt
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType struct {
	RxCnt                   *uint64  `protobuf:"varint,51,opt,name=rx_cnt,json=rxCnt" json:"rx_cnt,omitempty"`
	RxPktCnt                *uint64  `protobuf:"varint,52,opt,name=rx_pkt_cnt,json=rxPktCnt" json:"rx_pkt_cnt,omitempty"`
	PppRxPktCnt             *uint64  `protobuf:"varint,53,opt,name=ppp_rx_pkt_cnt,json=pppRxPktCnt" json:"ppp_rx_pkt_cnt,omitempty"`
	TxPktCnt                *uint64  `protobuf:"varint,54,opt,name=tx_pkt_cnt,json=txPktCnt" json:"tx_pkt_cnt,omitempty"`
	PppRxLcpConfReqCount    *uint64  `protobuf:"varint,55,opt,name=ppp_rx_lcp_conf_req_count,json=pppRxLcpConfReqCount" json:"ppp_rx_lcp_conf_req_count,omitempty"`
	PppRxLcpConfAckCount    *uint64  `protobuf:"varint,56,opt,name=ppp_rx_lcp_conf_ack_count,json=pppRxLcpConfAckCount" json:"ppp_rx_lcp_conf_ack_count,omitempty"`
	PppRxLcpConfNackCount   *uint64  `protobuf:"varint,57,opt,name=ppp_rx_lcp_conf_nack_count,json=pppRxLcpConfNackCount" json:"ppp_rx_lcp_conf_nack_count,omitempty"`
	PppRxLcpTermReqCount    *uint64  `protobuf:"varint,58,opt,name=ppp_rx_lcp_term_req_count,json=pppRxLcpTermReqCount" json:"ppp_rx_lcp_term_req_count,omitempty"`
	PppRxLcpTermAckCount    *uint64  `protobuf:"varint,59,opt,name=ppp_rx_lcp_term_ack_count,json=pppRxLcpTermAckCount" json:"ppp_rx_lcp_term_ack_count,omitempty"`
	PppRxLcpEchoReqCount    *uint64  `protobuf:"varint,60,opt,name=ppp_rx_lcp_echo_req_count,json=pppRxLcpEchoReqCount" json:"ppp_rx_lcp_echo_req_count,omitempty"`
	PppRxLcpEchoRespCount   *uint64  `protobuf:"varint,61,opt,name=ppp_rx_lcp_echo_resp_count,json=pppRxLcpEchoRespCount" json:"ppp_rx_lcp_echo_resp_count,omitempty"`
	PppRxPapReqCount        *uint64  `protobuf:"varint,62,opt,name=ppp_rx_pap_req_count,json=pppRxPapReqCount" json:"ppp_rx_pap_req_count,omitempty"`
	PppRxPapAckCount        *uint64  `protobuf:"varint,63,opt,name=ppp_rx_pap_ack_count,json=pppRxPapAckCount" json:"ppp_rx_pap_ack_count,omitempty"`
	PppRxPapNackCount       *uint64  `protobuf:"varint,64,opt,name=ppp_rx_pap_nack_count,json=pppRxPapNackCount" json:"ppp_rx_pap_nack_count,omitempty"`
	PppRxChapChallengeCount *uint64  `protobuf:"varint,65,opt,name=ppp_rx_chap_challenge_count,json=pppRxChapChallengeCount" json:"ppp_rx_chap_challenge_count,omitempty"`
	PppRxChapRespCount      *uint64  `protobuf:"varint,66,opt,name=ppp_rx_chap_resp_count,json=pppRxChapRespCount" json:"ppp_rx_chap_resp_count,omitempty"`
	PppRxChapSuccessCount   *uint64  `protobuf:"varint,67,opt,name=ppp_rx_chap_success_count,json=pppRxChapSuccessCount" json:"ppp_rx_chap_success_count,omitempty"`
	PppRxChapFailCount      *uint64  `protobuf:"varint,68,opt,name=ppp_rx_chap_fail_count,json=pppRxChapFailCount" json:"ppp_rx_chap_fail_count,omitempty"`
	PppRxIpcpConfReqCount   *uint64  `protobuf:"varint,69,opt,name=ppp_rx_ipcp_conf_req_count,json=pppRxIpcpConfReqCount" json:"ppp_rx_ipcp_conf_req_count,omitempty"`
	PppRxIpcpConfAckCount   *uint64  `protobuf:"varint,70,opt,name=ppp_rx_ipcp_conf_ack_count,json=pppRxIpcpConfAckCount" json:"ppp_rx_ipcp_conf_ack_count,omitempty"`
	PppRxIpcpConfNackCount  *uint64  `protobuf:"varint,71,opt,name=ppp_rx_ipcp_conf_nack_count,json=pppRxIpcpConfNackCount" json:"ppp_rx_ipcp_conf_nack_count,omitempty"`
	RxMalformedCnt          *uint64  `protobuf:"varint,72,opt,name=rx_malformed_cnt,json=rxMalformedCnt" json:"rx_malformed_cnt,omitempty"`
	PppRxUnknownProtocol    *uint64  `protobuf:"varint,73,opt,name=ppp_rx_unknown_protocol,json=pppRxUnknownProtocol" json:"ppp_rx_unknown_protocol,omitempty"`
	RxMsgCnt                *uint64  `protobuf:"varint,74,opt,name=rx_msg_cnt,json=rxMsgCnt" json:"rx_msg_cnt,omitempty"`
	RxMsgProcessdCnt        *uint64  `protobuf:"varint,75,opt,name=rx_msg_processd_cnt,json=rxMsgProcessdCnt" json:"rx_msg_processd_cnt,omitempty"`
	RxMsgErr                *uint64  `protobuf:"varint,76,opt,name=rx_msg_err,json=rxMsgErr" json:"rx_msg_err,omitempty"`
	RxInvalidMsgCnt         *uint64  `protobuf:"varint,77,opt,name=rx_invalid_msg_cnt,json=rxInvalidMsgCnt" json:"rx_invalid_msg_cnt,omitempty"`
	TxCnt                   *uint64  `protobuf:"varint,78,opt,name=tx_cnt,json=txCnt" json:"tx_cnt,omitempty"`
	PppTxLcpConfReqCount    *uint64  `protobuf:"varint,79,opt,name=ppp_tx_lcp_conf_req_count,json=pppTxLcpConfReqCount" json:"ppp_tx_lcp_conf_req_count,omitempty"`
	PppTxLcpConfAckCount    *uint64  `protobuf:"varint,80,opt,name=ppp_tx_lcp_conf_ack_count,json=pppTxLcpConfAckCount" json:"ppp_tx_lcp_conf_ack_count,omitempty"`
	PppTxLcpConfNackCount   *uint64  `protobuf:"varint,81,opt,name=ppp_tx_lcp_conf_nack_count,json=pppTxLcpConfNackCount" json:"ppp_tx_lcp_conf_nack_count,omitempty"`
	PppTxLcpEchoReqCount    *uint64  `protobuf:"varint,82,opt,name=ppp_tx_lcp_echo_req_count,json=pppTxLcpEchoReqCount" json:"ppp_tx_lcp_echo_req_count,omitempty"`
	PppTxLcpEchoRespCount   *uint64  `protobuf:"varint,83,opt,name=ppp_tx_lcp_echo_resp_count,json=pppTxLcpEchoRespCount" json:"ppp_tx_lcp_echo_resp_count,omitempty"`
	PppTxLcpTermReqCount    *uint64  `protobuf:"varint,84,opt,name=ppp_tx_lcp_term_req_count,json=pppTxLcpTermReqCount" json:"ppp_tx_lcp_term_req_count,omitempty"`
	PppTxLcpTermAckCount    *uint64  `protobuf:"varint,85,opt,name=ppp_tx_lcp_term_ack_count,json=pppTxLcpTermAckCount" json:"ppp_tx_lcp_term_ack_count,omitempty"`
	PppTxPapReqCount        *uint64  `protobuf:"varint,86,opt,name=ppp_tx_pap_req_count,json=pppTxPapReqCount" json:"ppp_tx_pap_req_count,omitempty"`
	PppTxPapAckCount        *uint64  `protobuf:"varint,87,opt,name=ppp_tx_pap_ack_count,json=pppTxPapAckCount" json:"ppp_tx_pap_ack_count,omitempty"`
	PppTxPapNackCount       *uint64  `protobuf:"varint,88,opt,name=ppp_tx_pap_nack_count,json=pppTxPapNackCount" json:"ppp_tx_pap_nack_count,omitempty"`
	PppTxChapChallengeCount *uint64  `protobuf:"varint,89,opt,name=ppp_tx_chap_challenge_count,json=pppTxChapChallengeCount" json:"ppp_tx_chap_challenge_count,omitempty"`
	PppTxChapRespCount      *uint64  `protobuf:"varint,90,opt,name=ppp_tx_chap_resp_count,json=pppTxChapRespCount" json:"ppp_tx_chap_resp_count,omitempty"`
	PppTxChapSuccessCount   *uint64  `protobuf:"varint,91,opt,name=ppp_tx_chap_success_count,json=pppTxChapSuccessCount" json:"ppp_tx_chap_success_count,omitempty"`
	PppTxChapFailCount      *uint64  `protobuf:"varint,92,opt,name=ppp_tx_chap_fail_count,json=pppTxChapFailCount" json:"ppp_tx_chap_fail_count,omitempty"`
	PppTxIpcpConfReqCount   *uint64  `protobuf:"varint,93,opt,name=ppp_tx_ipcp_conf_req_count,json=pppTxIpcpConfReqCount" json:"ppp_tx_ipcp_conf_req_count,omitempty"`
	PppTxIpcpConfAckCount   *uint64  `protobuf:"varint,94,opt,name=ppp_tx_ipcp_conf_ack_count,json=pppTxIpcpConfAckCount" json:"ppp_tx_ipcp_conf_ack_count,omitempty"`
	PppTxIpcpConfNackCount  *uint64  `protobuf:"varint,95,opt,name=ppp_tx_ipcp_conf_nack_count,json=pppTxIpcpConfNackCount" json:"ppp_tx_ipcp_conf_nack_count,omitempty"`
	PppTxUnknownProtocol    *uint64  `protobuf:"varint,96,opt,name=ppp_tx_unknown_protocol,json=pppTxUnknownProtocol" json:"ppp_tx_unknown_protocol,omitempty"`
	TxPktSendFailed         *uint64  `protobuf:"varint,97,opt,name=tx_pkt_send_failed,json=txPktSendFailed" json:"tx_pkt_send_failed,omitempty"`
	TxPktErr                *uint64  `protobuf:"varint,98,opt,name=tx_pkt_err,json=txPktErr" json:"tx_pkt_err,omitempty"`
	TxMsgCnt                *uint64  `protobuf:"varint,99,opt,name=tx_msg_cnt,json=txMsgCnt" json:"tx_msg_cnt,omitempty"`
	TxMsgErr                *uint64  `protobuf:"varint,100,opt,name=tx_msg_err,json=txMsgErr" json:"tx_msg_err,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 5}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxCnt() uint64 {
	if m != nil && m.RxCnt != nil {
		return *m.RxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxPktCnt() uint64 {
	if m != nil && m.RxPktCnt != nil {
		return *m.RxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxPktCnt() uint64 {
	if m != nil && m.PppRxPktCnt != nil {
		return *m.PppRxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxPktCnt() uint64 {
	if m != nil && m.TxPktCnt != nil {
		return *m.TxPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfReqCount() uint64 {
	if m != nil && m.PppRxLcpConfReqCount != nil {
		return *m.PppRxLcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfAckCount() uint64 {
	if m != nil && m.PppRxLcpConfAckCount != nil {
		return *m.PppRxLcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpConfNackCount() uint64 {
	if m != nil && m.PppRxLcpConfNackCount != nil {
		return *m.PppRxLcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpTermReqCount() uint64 {
	if m != nil && m.PppRxLcpTermReqCount != nil {
		return *m.PppRxLcpTermReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpTermAckCount() uint64 {
	if m != nil && m.PppRxLcpTermAckCount != nil {
		return *m.PppRxLcpTermAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpEchoReqCount() uint64 {
	if m != nil && m.PppRxLcpEchoReqCount != nil {
		return *m.PppRxLcpEchoReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxLcpEchoRespCount() uint64 {
	if m != nil && m.PppRxLcpEchoRespCount != nil {
		return *m.PppRxLcpEchoRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxPapReqCount() uint64 {
	if m != nil && m.PppRxPapReqCount != nil {
		return *m.PppRxPapReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxPapAckCount() uint64 {
	if m != nil && m.PppRxPapAckCount != nil {
		return *m.PppRxPapAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxPapNackCount() uint64 {
	if m != nil && m.PppRxPapNackCount != nil {
		return *m.PppRxPapNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxChapChallengeCount() uint64 {
	if m != nil && m.PppRxChapChallengeCount != nil {
		return *m.PppRxChapChallengeCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxChapRespCount() uint64 {
	if m != nil && m.PppRxChapRespCount != nil {
		return *m.PppRxChapRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxChapSuccessCount() uint64 {
	if m != nil && m.PppRxChapSuccessCount != nil {
		return *m.PppRxChapSuccessCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxChapFailCount() uint64 {
	if m != nil && m.PppRxChapFailCount != nil {
		return *m.PppRxChapFailCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfReqCount() uint64 {
	if m != nil && m.PppRxIpcpConfReqCount != nil {
		return *m.PppRxIpcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfAckCount() uint64 {
	if m != nil && m.PppRxIpcpConfAckCount != nil {
		return *m.PppRxIpcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxIpcpConfNackCount() uint64 {
	if m != nil && m.PppRxIpcpConfNackCount != nil {
		return *m.PppRxIpcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxMalformedCnt() uint64 {
	if m != nil && m.RxMalformedCnt != nil {
		return *m.RxMalformedCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppRxUnknownProtocol() uint64 {
	if m != nil && m.PppRxUnknownProtocol != nil {
		return *m.PppRxUnknownProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxMsgCnt() uint64 {
	if m != nil && m.RxMsgCnt != nil {
		return *m.RxMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxMsgProcessdCnt() uint64 {
	if m != nil && m.RxMsgProcessdCnt != nil {
		return *m.RxMsgProcessdCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxMsgErr() uint64 {
	if m != nil && m.RxMsgErr != nil {
		return *m.RxMsgErr
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetRxInvalidMsgCnt() uint64 {
	if m != nil && m.RxInvalidMsgCnt != nil {
		return *m.RxInvalidMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxCnt() uint64 {
	if m != nil && m.TxCnt != nil {
		return *m.TxCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfReqCount() uint64 {
	if m != nil && m.PppTxLcpConfReqCount != nil {
		return *m.PppTxLcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfAckCount() uint64 {
	if m != nil && m.PppTxLcpConfAckCount != nil {
		return *m.PppTxLcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpConfNackCount() uint64 {
	if m != nil && m.PppTxLcpConfNackCount != nil {
		return *m.PppTxLcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpEchoReqCount() uint64 {
	if m != nil && m.PppTxLcpEchoReqCount != nil {
		return *m.PppTxLcpEchoReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpEchoRespCount() uint64 {
	if m != nil && m.PppTxLcpEchoRespCount != nil {
		return *m.PppTxLcpEchoRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpTermReqCount() uint64 {
	if m != nil && m.PppTxLcpTermReqCount != nil {
		return *m.PppTxLcpTermReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxLcpTermAckCount() uint64 {
	if m != nil && m.PppTxLcpTermAckCount != nil {
		return *m.PppTxLcpTermAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxPapReqCount() uint64 {
	if m != nil && m.PppTxPapReqCount != nil {
		return *m.PppTxPapReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxPapAckCount() uint64 {
	if m != nil && m.PppTxPapAckCount != nil {
		return *m.PppTxPapAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxPapNackCount() uint64 {
	if m != nil && m.PppTxPapNackCount != nil {
		return *m.PppTxPapNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxChapChallengeCount() uint64 {
	if m != nil && m.PppTxChapChallengeCount != nil {
		return *m.PppTxChapChallengeCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxChapRespCount() uint64 {
	if m != nil && m.PppTxChapRespCount != nil {
		return *m.PppTxChapRespCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxChapSuccessCount() uint64 {
	if m != nil && m.PppTxChapSuccessCount != nil {
		return *m.PppTxChapSuccessCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxChapFailCount() uint64 {
	if m != nil && m.PppTxChapFailCount != nil {
		return *m.PppTxChapFailCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfReqCount() uint64 {
	if m != nil && m.PppTxIpcpConfReqCount != nil {
		return *m.PppTxIpcpConfReqCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfAckCount() uint64 {
	if m != nil && m.PppTxIpcpConfAckCount != nil {
		return *m.PppTxIpcpConfAckCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxIpcpConfNackCount() uint64 {
	if m != nil && m.PppTxIpcpConfNackCount != nil {
		return *m.PppTxIpcpConfNackCount
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetPppTxUnknownProtocol() uint64 {
	if m != nil && m.PppTxUnknownProtocol != nil {
		return *m.PppTxUnknownProtocol
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxPktSendFailed() uint64 {
	if m != nil && m.TxPktSendFailed != nil {
		return *m.TxPktSendFailed
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxPktErr() uint64 {
	if m != nil && m.TxPktErr != nil {
		return *m.TxPktErr
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxMsgCnt() uint64 {
	if m != nil && m.TxMsgCnt != nil {
		return *m.TxMsgCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) GetTxMsgErr() uint64 {
	if m != nil && m.TxMsgErr != nil {
		return *m.TxMsgErr
	}
	return 0
}

type JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType struct {
	RxNetworkPktCnt          *uint64  `protobuf:"varint,51,opt,name=rx_network_pkt_cnt,json=rxNetworkPktCnt" json:"rx_network_pkt_cnt,omitempty"`
	RxMalformedPktCnt        *uint64  `protobuf:"varint,52,opt,name=rx_malformed_pkt_cnt,json=rxMalformedPktCnt" json:"rx_malformed_pkt_cnt,omitempty"`
	RxNoIfPktCnt             *uint64  `protobuf:"varint,53,opt,name=rx_no_if_pkt_cnt,json=rxNoIfPktCnt" json:"rx_no_if_pkt_cnt,omitempty"`
	RxSendSucceededPktCnt    *uint64  `protobuf:"varint,54,opt,name=rx_send_succeeded_pkt_cnt,json=rxSendSucceededPktCnt" json:"rx_send_succeeded_pkt_cnt,omitempty"`
	RxSendFailedPktCnt       *uint64  `protobuf:"varint,55,opt,name=rx_send_failed_pkt_cnt,json=rxSendFailedPktCnt" json:"rx_send_failed_pkt_cnt,omitempty"`
	RxUnsupportedPktCnt      *uint64  `protobuf:"varint,56,opt,name=rx_unsupported_pkt_cnt,json=rxUnsupportedPktCnt" json:"rx_unsupported_pkt_cnt,omitempty"`
	RxSetupRequestCnt        *uint64  `protobuf:"varint,57,opt,name=rx_setup_request_cnt,json=rxSetupRequestCnt" json:"rx_setup_request_cnt,omitempty"`
	RxHelloPktCnt            *uint64  `protobuf:"varint,58,opt,name=rx_hello_pkt_cnt,json=rxHelloPktCnt" json:"rx_hello_pkt_cnt,omitempty"`
	RxTearDownPktCnt         *uint64  `protobuf:"varint,59,opt,name=rx_tear_down_pkt_cnt,json=rxTearDownPktCnt" json:"rx_tear_down_pkt_cnt,omitempty"`
	RxNotifyPktCnt           *uint64  `protobuf:"varint,60,opt,name=rx_notify_pkt_cnt,json=rxNotifyPktCnt" json:"rx_notify_pkt_cnt,omitempty"`
	TxNetworkPktCnt          *uint64  `protobuf:"varint,61,opt,name=tx_network_pkt_cnt,json=txNetworkPktCnt" json:"tx_network_pkt_cnt,omitempty"`
	TxNullPktCnt             *uint64  `protobuf:"varint,62,opt,name=tx_null_pkt_cnt,json=txNullPktCnt" json:"tx_null_pkt_cnt,omitempty"`
	TxNoIfPktCnt             *uint64  `protobuf:"varint,63,opt,name=tx_no_if_pkt_cnt,json=txNoIfPktCnt" json:"tx_no_if_pkt_cnt,omitempty"`
	TxSendSucceededPktCnt    *uint64  `protobuf:"varint,64,opt,name=tx_send_succeeded_pkt_cnt,json=txSendSucceededPktCnt" json:"tx_send_succeeded_pkt_cnt,omitempty"`
	TxSendFailedPktCnt       *uint64  `protobuf:"varint,65,opt,name=tx_send_failed_pkt_cnt,json=txSendFailedPktCnt" json:"tx_send_failed_pkt_cnt,omitempty"`
	TxSetupRequestPktCnt     *uint64  `protobuf:"varint,66,opt,name=tx_setup_request_pkt_cnt,json=txSetupRequestPktCnt" json:"tx_setup_request_pkt_cnt,omitempty"`
	TxSetupAcceptPktCnt      *uint64  `protobuf:"varint,67,opt,name=tx_setup_accept_pkt_cnt,json=txSetupAcceptPktCnt" json:"tx_setup_accept_pkt_cnt,omitempty"`
	TxSetupDenyPktCnt        *uint64  `protobuf:"varint,68,opt,name=tx_setup_deny_pkt_cnt,json=txSetupDenyPktCnt" json:"tx_setup_deny_pkt_cnt,omitempty"`
	TxHelloPktCnt            *uint64  `protobuf:"varint,69,opt,name=tx_hello_pkt_cnt,json=txHelloPktCnt" json:"tx_hello_pkt_cnt,omitempty"`
	TxTearDownPktCnt         *uint64  `protobuf:"varint,70,opt,name=tx_tear_down_pkt_cnt,json=txTearDownPktCnt" json:"tx_tear_down_pkt_cnt,omitempty"`
	TxNotifyPktCnt           *uint64  `protobuf:"varint,71,opt,name=tx_notify_pkt_cnt,json=txNotifyPktCnt" json:"tx_notify_pkt_cnt,omitempty"`
	InflightHagSessionsCnt   *uint64  `protobuf:"varint,72,opt,name=inflight_hag_sessions_cnt,json=inflightHagSessionsCnt" json:"inflight_hag_sessions_cnt,omitempty"`
	SuccessfulHagSessionsCnt *uint64  `protobuf:"varint,73,opt,name=successful_hag_sessions_cnt,json=successfulHagSessionsCnt" json:"successful_hag_sessions_cnt,omitempty"`
	FailedHagSessionsCnt     *uint64  `protobuf:"varint,74,opt,name=failed_hag_sessions_cnt,json=failedHagSessionsCnt" json:"failed_hag_sessions_cnt,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) Reset() {
	*m = JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType{}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) ProtoMessage() {
}
func (*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcec3dee7e0b9012, []int{0, 0, 0, 0, 0, 0, 0, 6}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType.Merge(m, src)
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) XXX_Size() int {
	return m.Size()
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType proto.InternalMessageInfo

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxNetworkPktCnt() uint64 {
	if m != nil && m.RxNetworkPktCnt != nil {
		return *m.RxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxMalformedPktCnt() uint64 {
	if m != nil && m.RxMalformedPktCnt != nil {
		return *m.RxMalformedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxNoIfPktCnt() uint64 {
	if m != nil && m.RxNoIfPktCnt != nil {
		return *m.RxNoIfPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxSendSucceededPktCnt() uint64 {
	if m != nil && m.RxSendSucceededPktCnt != nil {
		return *m.RxSendSucceededPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxSendFailedPktCnt() uint64 {
	if m != nil && m.RxSendFailedPktCnt != nil {
		return *m.RxSendFailedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxUnsupportedPktCnt() uint64 {
	if m != nil && m.RxUnsupportedPktCnt != nil {
		return *m.RxUnsupportedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxSetupRequestCnt() uint64 {
	if m != nil && m.RxSetupRequestCnt != nil {
		return *m.RxSetupRequestCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxHelloPktCnt() uint64 {
	if m != nil && m.RxHelloPktCnt != nil {
		return *m.RxHelloPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxTearDownPktCnt() uint64 {
	if m != nil && m.RxTearDownPktCnt != nil {
		return *m.RxTearDownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetRxNotifyPktCnt() uint64 {
	if m != nil && m.RxNotifyPktCnt != nil {
		return *m.RxNotifyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxNetworkPktCnt() uint64 {
	if m != nil && m.TxNetworkPktCnt != nil {
		return *m.TxNetworkPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxNullPktCnt() uint64 {
	if m != nil && m.TxNullPktCnt != nil {
		return *m.TxNullPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxNoIfPktCnt() uint64 {
	if m != nil && m.TxNoIfPktCnt != nil {
		return *m.TxNoIfPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxSendSucceededPktCnt() uint64 {
	if m != nil && m.TxSendSucceededPktCnt != nil {
		return *m.TxSendSucceededPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxSendFailedPktCnt() uint64 {
	if m != nil && m.TxSendFailedPktCnt != nil {
		return *m.TxSendFailedPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxSetupRequestPktCnt() uint64 {
	if m != nil && m.TxSetupRequestPktCnt != nil {
		return *m.TxSetupRequestPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxSetupAcceptPktCnt() uint64 {
	if m != nil && m.TxSetupAcceptPktCnt != nil {
		return *m.TxSetupAcceptPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxSetupDenyPktCnt() uint64 {
	if m != nil && m.TxSetupDenyPktCnt != nil {
		return *m.TxSetupDenyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxHelloPktCnt() uint64 {
	if m != nil && m.TxHelloPktCnt != nil {
		return *m.TxHelloPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxTearDownPktCnt() uint64 {
	if m != nil && m.TxTearDownPktCnt != nil {
		return *m.TxTearDownPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetTxNotifyPktCnt() uint64 {
	if m != nil && m.TxNotifyPktCnt != nil {
		return *m.TxNotifyPktCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetInflightHagSessionsCnt() uint64 {
	if m != nil && m.InflightHagSessionsCnt != nil {
		return *m.InflightHagSessionsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetSuccessfulHagSessionsCnt() uint64 {
	if m != nil && m.SuccessfulHagSessionsCnt != nil {
		return *m.SuccessfulHagSessionsCnt
	}
	return 0
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) GetFailedHagSessionsCnt() uint64 {
	if m != nil && m.FailedHagSessionsCnt != nil {
		return *m.FailedHagSessionsCnt
	}
	return 0
}

var E_JnprJunosNetworkStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosNetworkStats)(nil),
	Field:         39,
	Name:          "jnpr_junos_network_stats_ext",
	Tag:           "bytes,39,opt,name=jnpr_junos_network_stats_ext",
	Filename:      "bbe-smgd_sub_mgmt_network_stats_oc.proto",
}

func init() {
	proto.RegisterType((*JunosNetworkStats)(nil), "junos_network_stats")
	proto.RegisterType((*JunosNetworkStatsSystemType)(nil), "junos_network_stats.system_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementType)(nil), "junos_network_stats.system_type.subscriber_management_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.io_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.dhcp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.ppp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.pppoe_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.dvlan_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.l2tp_type")
	proto.RegisterType((*JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType)(nil), "junos_network_stats.system_type.subscriber_management_type.uplanes_type.uplane_list.infra_type.network_type.hag_type")
	proto.RegisterExtension(E_JnprJunosNetworkStatsExt)
}

func init() {
	proto.RegisterFile("bbe-smgd_sub_mgmt_network_stats_oc.proto", fileDescriptor_dcec3dee7e0b9012)
}

var fileDescriptor_dcec3dee7e0b9012 = []byte{
	// 3183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5a, 0xcb, 0x53, 0x1c, 0xc7,
	0x19, 0x2f, 0x64, 0xcb, 0x86, 0x06, 0x24, 0x18, 0x40, 0xac, 0x56, 0xb2, 0xac, 0xc8, 0xb1, 0xa5,
	0x54, 0x22, 0x70, 0x00, 0xad, 0x40, 0x48, 0x96, 0x78, 0x5a, 0xc8, 0x02, 0xad, 0x96, 0x95, 0xfc,
	0xf6, 0x78, 0x98, 0xe9, 0xdd, 0x1d, 0x98, 0x9d, 0x69, 0xf7, 0x7c, 0x8b, 0x96, 0x6b, 0xaa, 0x52,
	0x49, 0x55, 0xaa, 0x52, 0xb9, 0xe5, 0x7d, 0x4e, 0xe5, 0x94, 0x5b, 0xee, 0xb9, 0xe5, 0x98, 0x8b,
	0x0f, 0xa9, 0xca, 0x21, 0xf1, 0x31, 0xff, 0x41, 0x6e, 0xa9, 0x7e, 0xcd, 0x74, 0xcf, 0xf4, 0xc6,
	0x4e, 0x25, 0x96, 0x2f, 0x2a, 0x31, 0xfd, 0xfb, 0xf5, 0xf7, 0xcd, 0xf7, 0xf8, 0xf5, 0x37, 0x0d,
	0xe8, 0xda, 0xc1, 0x01, 0xbe, 0x9e, 0x76, 0xdb, 0x81, 0x9b, 0xf6, 0x0e, 0xdc, 0x6e, 0xbb, 0x0b,
	0x6e, 0x8c, 0xe1, 0x59, 0x42, 0x8f, 0xdc, 0x14, 0x3c, 0x48, 0xdd, 0xc4, 0x9f, 0x23, 0x34, 0x81,
	0xa4, 0x3a, 0x05, 0x38, 0xc2, 0x5d, 0x0c, 0xf4, 0xc4, 0x85, 0x84, 0x88, 0x87, 0x57, 0xfe, 0xd0,
	0x44, 0x53, 0x87, 0xbd, 0x38, 0x49, 0x4d, 0x96, 0xb3, 0x82, 0x5e, 0x4a, 0x4f, 0x52, 0xc0, 0xdd,
	0xca, 0xcf, 0x87, 0x2e, 0x0f, 0x5d, 0x1b, 0x5d, 0xb8, 0x3c, 0x67, 0x81, 0xcd, 0x09, 0x8c, 0x0b,
	0x27, 0x04, 0x37, 0x24, 0xa1, 0xfa, 0xb7, 0x7d, 0x34, 0xaa, 0x3d, 0x77, 0x3e, 0x43, 0x33, 0x69,
	0xef, 0x20, 0xf5, 0x69, 0x78, 0x80, 0xa9, 0xdb, 0xf5, 0x62, 0xaf, 0x8d, 0xbb, 0x38, 0x06, 0xb5,
	0xf3, 0xea, 0x97, 0xed, 0x3c, 0x67, 0xa5, 0x0b, 0xa3, 0xd3, 0xf9, 0xda, 0x6e, 0xb6, 0x54, 0xfd,
	0x6b, 0x03, 0x55, 0x07, 0x93, 0x1c, 0x1f, 0xbd, 0xdc, 0x23, 0x91, 0x17, 0xe3, 0x54, 0xf9, 0x70,
	0xff, 0x7f, 0xf0, 0x61, 0x4e, 0xee, 0x25, 0x1c, 0x52, 0x3b, 0x57, 0x3f, 0x7f, 0x8c, 0xc6, 0xf4,
	0x15, 0xa7, 0x8b, 0x5e, 0x12, 0x3f, 0x33, 0xa3, 0x2f, 0x5c, 0x1b, 0x5d, 0x68, 0xfe, 0xbf, 0x8c,
	0xca, 0x1f, 0xdc, 0x28, 0x4c, 0xa1, 0x21, 0x8d, 0x54, 0x3f, 0xaf, 0xa3, 0x51, 0xed, 0xb9, 0x73,
	0x05, 0x8d, 0xc8, 0x1f, 0xc3, 0xa0, 0xb2, 0x78, 0x79, 0xe8, 0xda, 0xf8, 0xfa, 0xe9, 0x1f, 0xdc,
	0x3b, 0x35, 0x3c, 0xd4, 0x18, 0x16, 0xcf, 0x77, 0x02, 0xe7, 0x18, 0x9d, 0x0e, 0xe3, 0x16, 0xf5,
	0x54, 0x58, 0xdc, 0xaf, 0xc3, 0xc3, 0x39, 0x6e, 0x42, 0x44, 0x4b, 0x98, 0xab, 0xfe, 0xfe, 0x11,
	0x42, 0xf9, 0x53, 0xe7, 0x47, 0x43, 0xe8, 0x65, 0x69, 0x52, 0x79, 0x12, 0x7d, 0xcd, 0x9e, 0xcc,
	0xa9, 0x8d, 0x45, 0x12, 0xe5, 0x4f, 0xd5, 0x9f, 0xed, 0xa1, 0x31, 0x7d, 0xc5, 0xf9, 0xe1, 0x10,
	0x3a, 0x15, 0x26, 0xca, 0x2b, 0x78, 0x9e, 0x5e, 0xcd, 0x85, 0x89, 0xf0, 0xee, 0x54, 0x98, 0x38,
	0x3f, 0x19, 0x42, 0x2f, 0x06, 0x1d, 0x9f, 0x54, 0x7e, 0x21, 0x3c, 0x39, 0x7e, 0xae, 0x9e, 0x30,
	0xcb, 0xc2, 0x17, 0xee, 0x84, 0xf3, 0xe3, 0x21, 0xf4, 0x02, 0x21, 0xa4, 0xf2, 0x4b, 0xe1, 0x4c,
	0xef, 0xb9, 0x3a, 0x43, 0x88, 0xf4, 0x85, 0xb9, 0xe0, 0xfc, 0x74, 0x08, 0x9d, 0x26, 0x84, 0x24,
	0xb8, 0xf2, 0x2b, 0xe1, 0xcc, 0xb3, 0xe7, 0xed, 0x4c, 0x82, 0x65, 0x6d, 0xf3, 0xff, 0x73, 0x87,
	0x82, 0xe3, 0xc8, 0x8b, 0x2b, 0xbf, 0xf9, 0x26, 0x1c, 0xe2, 0xa6, 0xa5, 0x43, 0xfc, 0xff, 0xbc,
	0x74, 0xa2, 0x05, 0x20, 0x95, 0x5f, 0x7f, 0x13, 0xa5, 0xc3, 0x2c, 0xcb, 0xd2, 0x61, 0xff, 0xe5,
	0xa5, 0xd3, 0xf1, 0xda, 0x95, 0xdf, 0x7e, 0x13, 0xa5, 0xd3, 0xf1, 0xda, 0xb2, 0x74, 0x3a, 0x5e,
	0xbb, 0xfa, 0xaf, 0x71, 0xf4, 0xb2, 0xec, 0x31, 0xe7, 0x3b, 0x68, 0x32, 0x5a, 0x70, 0x69, 0xdf,
	0x25, 0x9e, 0x7f, 0x84, 0x21, 0x75, 0xfd, 0x18, 0xb8, 0x6a, 0xbe, 0xd8, 0x38, 0x13, 0x2d, 0x34,
	0xfa, 0x75, 0xf1, 0x78, 0x23, 0x06, 0x67, 0x1e, 0x4d, 0x9b, 0xd0, 0x96, 0x17, 0x46, 0x38, 0xa8,
	0x2c, 0x71, 0xf4, 0xa4, 0x86, 0xde, 0xe6, 0x0b, 0xce, 0x75, 0x34, 0x25, 0x08, 0x5d, 0x2f, 0x6a,
	0x25, 0xb4, 0x8b, 0x03, 0xbe, 0xfb, 0x0d, 0x8e, 0x9f, 0x60, 0xf8, 0x5d, 0xb5, 0xc0, 0xf6, 0xcf,
	0x5c, 0x09, 0x5b, 0x81, 0x1b, 0xc6, 0xc7, 0x5e, 0x14, 0x06, 0x95, 0x5a, 0xee, 0xca, 0x4e, 0x2b,
	0xd8, 0x11, 0x4f, 0x75, 0x68, 0x94, 0x41, 0x6f, 0xea, 0xd0, 0x48, 0x41, 0xdf, 0x40, 0x13, 0x02,
	0x1a, 0x27, 0x6e, 0xd8, 0x6a, 0x71, 0x0f, 0x96, 0x39, 0x72, 0x8c, 0x21, 0xf7, 0x92, 0x9d, 0x56,
	0x8b, 0x59, 0x5f, 0x40, 0xe7, 0xd4, 0x96, 0xae, 0x4f, 0xb1, 0x07, 0x58, 0xbd, 0xdf, 0x0a, 0x47,
	0x3b, 0x62, 0xdf, 0x0d, 0xbe, 0x24, 0x5f, 0xf0, 0x31, 0xba, 0x1a, 0x2d, 0xb8, 0x07, 0x07, 0xd8,
	0x0d, 0x13, 0x97, 0xfa, 0xc7, 0x6e, 0xb4, 0xe8, 0xf6, 0xe2, 0xa3, 0x38, 0x79, 0x16, 0xbb, 0x5e,
	0x10, 0x50, 0x9c, 0xb2, 0x20, 0x75, 0xc3, 0xe8, 0xa4, 0x72, 0x8b, 0x6f, 0x72, 0x39, 0x5a, 0x58,
	0x3f, 0xc0, 0x3b, 0x49, 0xc3, 0x3f, 0x7e, 0xb8, 0xf8, 0x44, 0x20, 0xd7, 0x04, 0x70, 0x9b, 0xe3,
	0x9c, 0x4d, 0xf4, 0xaa, 0x70, 0xa3, 0x17, 0xa7, 0x3d, 0x42, 0x12, 0x0a, 0x98, 0x05, 0x03, 0x83,
	0xcb, 0xe7, 0x18, 0x3f, 0x89, 0x2a, 0xab, 0x7c, 0xab, 0x0b, 0xcc, 0x9f, 0x27, 0x39, 0x68, 0x27,
	0xc6, 0x50, 0x97, 0x10, 0x67, 0x1b, 0x5d, 0xb6, 0xef, 0x52, 0xcb, 0xb7, 0xb9, 0xcd, 0xb7, 0xb9,
	0x68, 0xd9, 0xa6, 0x96, 0xed, 0xb3, 0x8e, 0x2e, 0x95, 0xf7, 0xe9, 0x05, 0x24, 0xdf, 0xe5, 0x0e,
	0xdf, 0xa5, 0x5a, 0xd8, 0xe5, 0x49, 0x40, 0xb2, 0x3d, 0x96, 0xd1, 0xf9, 0xf2, 0x1e, 0xa4, 0x17,
	0x83, 0xeb, 0xb5, 0x2a, 0x6f, 0x71, 0xfa, 0x4c, 0x81, 0x5e, 0xef, 0xc5, 0xb0, 0xd6, 0x72, 0x6e,
	0xa1, 0x0b, 0x82, 0x79, 0xbc, 0xe4, 0x06, 0x1e, 0x78, 0x2e, 0xf1, 0xa0, 0x23, 0xa8, 0xe4, 0x08,
	0x2a, 0x77, 0x73, 0xee, 0xd3, 0xa5, 0x4d, 0x0f, 0xbc, 0xba, 0x07, 0x1d, 0x46, 0xad, 0x1f, 0x81,
	0xb3, 0xa1, 0x22, 0x60, 0xe5, 0xba, 0x01, 0x4d, 0x48, 0xe5, 0x1e, 0xdf, 0xe0, 0xbc, 0x75, 0x83,
	0x4d, 0x9a, 0x10, 0xcd, 0x81, 0x9a, 0xcd, 0x81, 0x35, 0xcd, 0x81, 0xda, 0x60, 0x07, 0x6a, 0x03,
	0x1d, 0x58, 0xd7, 0x1c, 0xa8, 0xd9, 0x1c, 0x10, 0x75, 0x0e, 0x66, 0x77, 0x6e, 0xa8, 0x3a, 0x6f,
	0xea, 0xdd, 0x29, 0x9a, 0x0d, 0x8a, 0xcd, 0xb6, 0xa9, 0x9a, 0xad, 0x69, 0x36, 0x9b, 0x68, 0x0b,
	0x90, 0x6d, 0x21, 0xb0, 0x5b, 0xaa, 0x2d, 0x9a, 0xbc, 0x2d, 0xb4, 0xa6, 0x04, 0xb3, 0xd3, 0xb6,
	0x73, 0x0f, 0xb4, 0x4e, 0xbb, 0x81, 0x2a, 0x79, 0x37, 0xa4, 0x38, 0x0e, 0x18, 0x4d, 0xf6, 0xd0,
	0xdb, 0x9c, 0x31, 0x25, 0xcb, 0x7f, 0x1f, 0xc7, 0x41, 0xb3, 0x2f, 0x9b, 0x68, 0x93, 0x07, 0xca,
	0x4a, 0x73, 0x89, 0x47, 0x21, 0xf4, 0xa2, 0xca, 0x7d, 0x55, 0x65, 0x25, 0x7a, 0x5d, 0x20, 0x9c,
	0xb7, 0xd0, 0x2b, 0xc2, 0xcf, 0xe3, 0x25, 0x37, 0xe9, 0x81, 0x8b, 0x29, 0x4d, 0xa8, 0x1b, 0x25,
	0xbe, 0xc7, 0xdc, 0x86, 0x56, 0x65, 0x87, 0x6f, 0x31, 0xcb, 0x7c, 0x7e, 0xba, 0xf4, 0xa8, 0x07,
	0x5b, 0x0c, 0xf0, 0x90, 0xad, 0xef, 0xc4, 0xd0, 0xd2, 0xf8, 0x35, 0x3b, 0xff, 0x81, 0xc6, 0xaf,
	0x95, 0xf9, 0x57, 0xd1, 0x44, 0xb4, 0x98, 0x8b, 0x23, 0x8f, 0xe7, 0x3b, 0x9c, 0x32, 0x1e, 0x2d,
	0x2a, 0x61, 0x64, 0x01, 0x5d, 0x45, 0x55, 0x01, 0x34, 0xda, 0x41, 0xb5, 0xd3, 0x43, 0x69, 0x65,
	0xd1, 0xec, 0x07, 0xd5, 0x4b, 0xc2, 0x0a, 0x18, 0x56, 0x76, 0x95, 0x95, 0xa6, 0x66, 0x85, 0xa5,
	0x8d, 0x03, 0x79, 0x40, 0x65, 0x12, 0xf6, 0x64, 0xda, 0x16, 0x9b, 0x7d, 0x16, 0x42, 0x19, 0xff,
	0x25, 0x34, 0x2b, 0xa0, 0xc7, 0x4b, 0xee, 0x11, 0xa6, 0x31, 0x8e, 0xdc, 0x56, 0x42, 0x9f, 0x79,
	0x34, 0xa8, 0x3c, 0x92, 0x59, 0x5b, 0x64, 0x31, 0x7b, 0x87, 0xaf, 0x6d, 0x8b, 0x25, 0xe7, 0x2e,
	0x7a, 0x65, 0x00, 0x8b, 0x97, 0x76, 0x5a, 0xa9, 0x73, 0x6e, 0xc5, 0xc2, 0x65, 0x95, 0x9d, 0x6a,
	0x66, 0x6b, 0x45, 0xb3, 0x8f, 0x35, 0xb3, 0xb5, 0x41, 0x66, 0x6b, 0x76, 0xb3, 0x0d, 0xcd, 0x6c,
	0xad, 0x6c, 0xb6, 0xfa, 0xc7, 0xd3, 0x68, 0x24, 0x9b, 0xea, 0x9c, 0x2b, 0x68, 0xdc, 0x4c, 0x99,
	0x38, 0xf9, 0x46, 0xa9, 0x16, 0xca, 0x0b, 0x68, 0x04, 0x53, 0x4f, 0x6e, 0x2f, 0xce, 0xba, 0x61,
	0x4c, 0x3d, 0xf1, 0x16, 0xd7, 0xd0, 0x84, 0x38, 0x5a, 0xfc, 0x24, 0x8e, 0xb1, 0x0f, 0x61, 0x12,
	0xcb, 0xf3, 0xed, 0x0c, 0xed, 0xef, 0x25, 0x1b, 0xd9, 0x53, 0x89, 0x34, 0x9b, 0xb3, 0xa6, 0x90,
	0x46, 0x6b, 0xbe, 0x8a, 0xc6, 0xd4, 0x71, 0xc5, 0x51, 0xe2, 0x5c, 0x1b, 0xa1, 0xbc, 0x29, 0x19,
	0xe0, 0xdb, 0xe8, 0x4c, 0xe1, 0xe8, 0x93, 0x07, 0x1a, 0xd5, 0xdb, 0x51, 0xa0, 0xf4, 0xfc, 0xaf,
	0x28, 0x94, 0x96, 0xfd, 0x2b, 0x68, 0xdc, 0x2c, 0x27, 0x71, 0x50, 0x8d, 0x82, 0x16, 0x81, 0x79,
	0x34, 0xa5, 0xf4, 0x07, 0xa8, 0x17, 0xa7, 0xdd, 0x10, 0x00, 0x07, 0xf2, 0x1c, 0x72, 0xe4, 0x52,
	0x33, 0x5f, 0x61, 0xef, 0x5a, 0x12, 0x22, 0x71, 0xdc, 0x9c, 0x01, 0xf3, 0x5d, 0x2f, 0xa1, 0x51,
	0xa6, 0x41, 0xbd, 0x28, 0xe2, 0x8a, 0x2a, 0x4e, 0x93, 0x11, 0xe8, 0xef, 0xf5, 0xa2, 0x88, 0xa9,
	0xe8, 0xab, 0x68, 0x0c, 0xf4, 0x58, 0xbc, 0x95, 0x01, 0x64, 0x2c, 0xbe, 0xc5, 0xfd, 0xd7, 0xce,
	0x76, 0x71, 0x2a, 0x20, 0xc8, 0x4f, 0xf6, 0x0c, 0x42, 0x41, 0xbc, 0xe2, 0xbd, 0x1c, 0xd2, 0x00,
	0xfe, 0x86, 0x22, 0x0a, 0x1e, 0x25, 0x2a, 0x54, 0x6b, 0x2a, 0x0a, 0x6b, 0x94, 0x18, 0x91, 0x0a,
	0x5b, 0x59, 0xd0, 0xd7, 0x15, 0x66, 0xa7, 0xa5, 0xc5, 0xbc, 0xd0, 0x73, 0x42, 0xac, 0xc7, 0x40,
	0x8f, 0xf9, 0x22, 0x3a, 0x47, 0xfb, 0xee, 0xb3, 0x4e, 0x18, 0x61, 0x37, 0x4e, 0x40, 0xd5, 0x0e,
	0x0e, 0xa4, 0x5a, 0x4f, 0xd1, 0xfe, 0xbb, 0x6c, 0x71, 0x2f, 0x81, 0x0d, 0xb5, 0x54, 0xfd, 0xa7,
	0x83, 0x86, 0xd5, 0x17, 0x80, 0xf3, 0x5d, 0xe4, 0xb0, 0x12, 0x91, 0x23, 0x1e, 0x3b, 0x4f, 0xf2,
	0xe2, 0x3d, 0x4b, 0xfb, 0x7b, 0x62, 0xa1, 0x7e, 0xa4, 0xb4, 0x80, 0x15, 0x79, 0xd4, 0x6b, 0x87,
	0x71, 0x86, 0x5d, 0x52, 0xa5, 0x57, 0xe7, 0xcf, 0x25, 0xf4, 0x7b, 0x68, 0x8a, 0xf6, 0xdd, 0xc8,
	0x27, 0xcc, 0xa7, 0x96, 0x4b, 0xf1, 0x67, 0xda, 0xc4, 0x76, 0x96, 0xf6, 0x1f, 0xfa, 0x64, 0x23,
	0x89, 0x5b, 0x0d, 0xfc, 0x99, 0x05, 0xed, 0xf9, 0x47, 0x5a, 0x55, 0xe7, 0xe8, 0x35, 0xff, 0x88,
	0xa1, 0xe7, 0xd0, 0xb4, 0x8e, 0x8e, 0x15, 0x5c, 0x94, 0xf7, 0x44, 0x06, 0xdf, 0xf3, 0x04, 0xbe,
	0xe4, 0xcb, 0xa1, 0x36, 0xbb, 0xe9, 0xbe, 0x1c, 0x9a, 0x68, 0xc0, 0xb4, 0x9b, 0x79, 0xbe, 0xa2,
	0xa1, 0x9b, 0x98, 0x76, 0x4b, 0x9e, 0x73, 0xb4, 0x72, 0xe5, 0x56, 0x01, 0xbd, 0x56, 0xf6, 0x24,
	0xc0, 0x99, 0x27, 0xab, 0x86, 0x27, 0x01, 0x96, 0x9e, 0x2c, 0xa1, 0x59, 0x89, 0x56, 0xaa, 0x9e,
	0x31, 0x6e, 0xab, 0xf4, 0x3e, 0xf4, 0xb3, 0xf9, 0xa8, 0xe4, 0x3f, 0xf6, 0x3b, 0x49, 0xe6, 0xff,
	0x1d, 0xcd, 0xc6, 0x96, 0xdf, 0x49, 0xa4, 0xff, 0x6f, 0xa2, 0x19, 0x13, 0x4d, 0xa2, 0x13, 0xad,
	0x3f, 0x26, 0x35, 0x3c, 0x89, 0x4e, 0xe4, 0x78, 0x2b, 0x19, 0x41, 0x98, 0xfa, 0x4c, 0x2f, 0x95,
	0x09, 0xd1, 0x30, 0x0e, 0xa7, 0x6c, 0x8a, 0x35, 0x69, 0xe5, 0x35, 0xae, 0x20, 0xc4, 0x23, 0x19,
	0xf6, 0x5e, 0x2e, 0x8f, 0xa4, 0x04, 0x52, 0x51, 0x5c, 0xd3, 0x40, 0x32, 0x82, 0xaf, 0xa3, 0xb3,
	0x12, 0x94, 0xa5, 0x7d, 0x5d, 0x89, 0x51, 0xdd, 0x23, 0x2a, 0xe5, 0xdf, 0xe7, 0xaf, 0xe5, 0x77,
	0x3c, 0xc2, 0xfe, 0x89, 0x22, 0x1c, 0xb7, 0xb1, 0x36, 0xf2, 0x38, 0xb4, 0xbf, 0xd1, 0xf1, 0xc8,
	0x86, 0x5a, 0x62, 0x94, 0xab, 0x5c, 0x56, 0x39, 0x85, 0xe2, 0x94, 0x68, 0x33, 0xcf, 0xb8, 0x40,
	0x37, 0x70, 0x4a, 0xe4, 0x7c, 0xa4, 0x80, 0x69, 0xcf, 0xf7, 0xd9, 0x68, 0x9e, 0xcf, 0x3c, 0x13,
	0x02, 0xbb, 0x2f, 0x16, 0x0a, 0x70, 0xd6, 0xc9, 0x3d, 0x2a, 0x1c, 0xd9, 0xd6, 0xe1, 0xdb, 0x62,
	0x21, 0x7f, 0xc1, 0x90, 0xf8, 0x79, 0xac, 0xde, 0xce, 0x34, 0x99, 0xf8, 0x2a, 0x58, 0x1a, 0x4c,
	0xc5, 0xe1, 0xbe, 0x0e, 0x93, 0xe1, 0x12, 0x2f, 0xc5, 0x61, 0x59, 0xbc, 0x76, 0xd4, 0x4b, 0x31,
	0x9c, 0x0a, 0x98, 0x68, 0xed, 0x90, 0x1c, 0xd7, 0x34, 0xc3, 0x0f, 0x54, 0x6b, 0xef, 0xf0, 0xe7,
	0xd2, 0xb4, 0x01, 0x55, 0x9b, 0xbe, 0x63, 0x42, 0xa5, 0x79, 0xa1, 0x2e, 0x12, 0x9a, 0x39, 0xf0,
	0x50, 0x95, 0xa2, 0xc0, 0x2a, 0x17, 0x6c, 0xe7, 0xda, 0xee, 0x57, 0x3a, 0xd7, 0xf6, 0x8a, 0xe7,
	0xda, 0xeb, 0xbc, 0x94, 0xb4, 0xb9, 0x48, 0x0e, 0x20, 0xe3, 0x54, 0x1f, 0x86, 0x9c, 0x19, 0xf4,
	0x12, 0xf4, 0xf9, 0x0e, 0x62, 0xc6, 0x38, 0x0d, 0x7d, 0xd9, 0x41, 0x60, 0xd1, 0x2e, 0x31, 0x4c,
	0x9c, 0x85, 0xb2, 0x76, 0x81, 0x45, 0xbb, 0x1a, 0x05, 0x74, 0xae, 0x5d, 0x60, 0xd3, 0xae, 0x7d,
	0x51, 0x0e, 0x60, 0xd1, 0x2e, 0xb0, 0x68, 0x57, 0xb3, 0xe4, 0xcb, 0xa1, 0x89, 0x36, 0x7a, 0xff,
	0x89, 0x86, 0x36, 0x7b, 0x1f, 0xac, 0xbd, 0xff, 0x54, 0xf4, 0x3e, 0xd8, 0x7a, 0x1f, 0xec, 0xbd,
	0xff, 0xae, 0xe8, 0x2b, 0x28, 0xf7, 0x7e, 0xee, 0x93, 0xa1, 0xa7, 0xef, 0x69, 0x3e, 0x99, 0x7a,
	0x0a, 0x16, 0x3d, 0x7d, 0xbf, 0x80, 0x96, 0xd1, 0x7c, 0x8d, 0x9f, 0x92, 0xba, 0xae, 0x7c, 0x90,
	0x0f, 0x1d, 0x9a, 0xae, 0x80, 0xa9, 0x2b, 0x1f, 0x6a, 0xa0, 0x5c, 0x57, 0xa0, 0xa0, 0x2b, 0x1f,
	0xa9, 0x03, 0xd7, 0xd4, 0x15, 0xb0, 0xea, 0xca, 0xc7, 0xea, 0xfd, 0x6d, 0xba, 0x02, 0x45, 0x5d,
	0xf9, 0x44, 0x54, 0x23, 0x14, 0x75, 0x05, 0x2c, 0xba, 0xe2, 0xaa, 0xca, 0x28, 0xeb, 0x0a, 0x58,
	0x74, 0xe5, 0x53, 0x1d, 0x6e, 0xea, 0x0a, 0x14, 0x74, 0xc5, 0x53, 0x2f, 0x68, 0xea, 0x0a, 0x14,
	0x74, 0xe5, 0x40, 0x87, 0xe5, 0xba, 0x02, 0x45, 0x5d, 0xf1, 0xd5, 0x4b, 0x15, 0x74, 0x05, 0x4a,
	0xba, 0x12, 0xa8, 0x09, 0xae, 0xa8, 0x2b, 0x50, 0xd2, 0x15, 0x6c, 0x42, 0x73, 0x5d, 0x81, 0xb2,
	0xae, 0xb4, 0x54, 0x91, 0x98, 0xba, 0x22, 0xc0, 0xea, 0x36, 0x45, 0x8d, 0x2d, 0x6d, 0x05, 0x96,
	0x97, 0x27, 0x72, 0x6e, 0x29, 0xcf, 0x5d, 0x1d, 0xcb, 0xdc, 0x65, 0x1b, 0x4b, 0x43, 0xdb, 0x58,
	0x5a, 0xfd, 0xc7, 0x29, 0x84, 0xf2, 0x1b, 0x4e, 0xa6, 0x38, 0xb4, 0xaf, 0x8d, 0x58, 0xa7, 0x69,
	0x5f, 0x0e, 0xaf, 0xfc, 0x54, 0x0b, 0x42, 0x6d, 0xa4, 0x1a, 0x61, 0x27, 0x5a, 0x10, 0x1a, 0xeb,
	0x54, 0x9b, 0xa2, 0xc4, 0x3a, 0x65, 0xeb, 0x17, 0x11, 0x62, 0xeb, 0x84, 0x68, 0x63, 0xd3, 0x30,
	0xed, 0xd7, 0x09, 0x19, 0x24, 0xac, 0x37, 0xbf, 0x92, 0xb0, 0x2e, 0x7f, 0xb9, 0xb0, 0xae, 0xd8,
	0x84, 0x75, 0x9e, 0x4f, 0x68, 0xfc, 0x7d, 0xf8, 0x17, 0x8f, 0x10, 0x84, 0x54, 0x8e, 0x45, 0x93,
	0xe2, 0xc5, 0xb6, 0xa8, 0x27, 0x95, 0x22, 0xd5, 0x94, 0x78, 0x55, 0x57, 0xe2, 0x72, 0x36, 0x6e,
	0x97, 0xb3, 0x51, 0x7d, 0x13, 0xa1, 0xfc, 0xce, 0xf6, 0xab, 0x7c, 0x89, 0x55, 0xff, 0x34, 0x85,
	0x46, 0xb2, 0x6b, 0xd5, 0x41, 0x49, 0x91, 0x41, 0x35, 0xc6, 0x5c, 0x16, 0x54, 0x51, 0x28, 0xaf,
	0xa1, 0x33, 0x2c, 0xde, 0x1a, 0x42, 0x64, 0x65, 0x94, 0x10, 0xd2, 0x50, 0xa0, 0x8b, 0x08, 0x41,
	0x0e, 0x90, 0x79, 0x01, 0xb5, 0x7a, 0x13, 0x9d, 0x97, 0x5b, 0x98, 0x67, 0x4d, 0xd2, 0xcb, 0x12,
	0x34, 0xcd, 0x77, 0xd3, 0x0e, 0x1c, 0xb6, 0x66, 0x23, 0xf2, 0x1e, 0xe0, 0xc4, 0xe5, 0x32, 0x91,
	0x75, 0x0d, 0x27, 0xae, 0xa0, 0x6a, 0x91, 0x18, 0xe7, 0x4c, 0x91, 0xca, 0x19, 0x9d, 0xc9, 0x7b,
	0xc8, 0x62, 0x33, 0x97, 0x72, 0xce, 0xbc, 0x65, 0xda, 0x54, 0x7a, 0x3e, 0x88, 0x98, 0x9b, 0x5c,
	0x2d, 0x13, 0xd7, 0xec, 0x16, 0xf3, 0x03, 0x8d, 0x13, 0x6f, 0x9b, 0x44, 0x75, 0xaa, 0x59, 0xde,
	0x52, 0x12, 0x99, 0xf2, 0x72, 0xe6, 0x1d, 0xf3, 0x2d, 0x05, 0x33, 0x25, 0x82, 0x3a, 0x87, 0xa6,
	0x55, 0x56, 0xd5, 0xa1, 0xc2, 0x49, 0x62, 0x1a, 0x9e, 0x10, 0xb9, 0x15, 0x27, 0x8b, 0x05, 0x9f,
	0xbf, 0xd7, 0x5d, 0x13, 0x9f, 0xbd, 0xd3, 0x9b, 0x68, 0x46, 0xc3, 0x6b, 0xb1, 0x17, 0xf3, 0xf0,
	0xa4, 0x22, 0xe4, 0x71, 0xbf, 0x8d, 0x2e, 0x48, 0x46, 0xf1, 0xd4, 0xe1, 0x3c, 0x31, 0x22, 0xcf,
	0x72, 0x9e, 0x79, 0xf4, 0x70, 0xf6, 0x02, 0x3a, 0xa7, 0xb3, 0xb5, 0x30, 0xac, 0xcb, 0x6f, 0x6e,
	0x45, 0xcc, 0x63, 0xb0, 0x9c, 0xc5, 0xdd, 0x3c, 0x8b, 0x38, 0x6d, 0x43, 0x8b, 0x9e, 0x7e, 0x20,
	0xd9, 0xac, 0xb1, 0x96, 0x95, 0xb4, 0xcd, 0x82, 0x35, 0xd6, 0xb9, 0xc5, 0x64, 0xf1, 0xd3, 0xa4,
	0xd0, 0x05, 0x5b, 0x9a, 0x39, 0x76, 0xac, 0x18, 0x6d, 0x60, 0xa3, 0xe6, 0x11, 0xdd, 0xb6, 0x50,
	0xb3, 0x3c, 0xac, 0x66, 0x51, 0xcd, 0xa9, 0x5a, 0x36, 0xc4, 0xc4, 0x7d, 0xce, 0xe0, 0xe6, 0x29,
	0xb1, 0xe9, 0xe9, 0x7d, 0xab, 0x9e, 0xde, 0x40, 0xb3, 0xd2, 0x4c, 0x76, 0xfc, 0xa8, 0xfb, 0xb9,
	0x1d, 0xad, 0x80, 0xd5, 0x11, 0xa4, 0x2e, 0xe7, 0x84, 0xf2, 0x74, 0xd3, 0xb6, 0x36, 0x85, 0x0f,
	0xd3, 0xfe, 0x6e, 0xda, 0xce, 0x3f, 0x28, 0xd8, 0x2a, 0xa1, 0x09, 0x0b, 0x7e, 0xa0, 0x4d, 0xe0,
	0x13, 0x1c, 0x56, 0x97, 0x0b, 0xb9, 0x8c, 0x31, 0x38, 0xa6, 0x54, 0xce, 0xde, 0x62, 0xb3, 0x2d,
	0x4a, 0xd5, 0x84, 0x2e, 0x6e, 0x1d, 0x32, 0x93, 0xbb, 0xd9, 0x84, 0x2e, 0x16, 0xa4, 0xe5, 0x5c,
	0xa5, 0xf7, 0x74, 0x95, 0x96, 0x8d, 0x0a, 0x56, 0x1d, 0x7b, 0x94, 0xbd, 0x67, 0x73, 0x90, 0x8e,
	0x81, 0x55, 0xc7, 0xea, 0x65, 0x62, 0x51, 0xc7, 0xc0, 0xae, 0x63, 0x8f, 0xb3, 0xcc, 0x37, 0x07,
	0xea, 0x18, 0x58, 0x55, 0xa5, 0x61, 0xda, 0xb4, 0xa9, 0x0a, 0xd8, 0x55, 0x65, 0xdf, 0xb4, 0x69,
	0xaa, 0x8a, 0x69, 0xb3, 0xa0, 0x9d, 0x4d, 0xd3, 0xa6, 0x4d, 0x3b, 0xc1, 0xaa, 0x9d, 0x4f, 0xca,
	0xc4, 0x2c, 0x40, 0x52, 0x97, 0xa0, 0xa8, 0x63, 0x4f, 0x33, 0x5d, 0x6a, 0xda, 0x74, 0x0c, 0x8a,
	0x3a, 0xf6, 0xae, 0x89, 0x2f, 0xea, 0x18, 0x94, 0x74, 0xec, 0xbd, 0x4c, 0xc7, 0x9a, 0x56, 0x1d,
	0x83, 0x01, 0x3a, 0xf6, 0x7e, 0xa6, 0x63, 0xcd, 0xff, 0xa0, 0x63, 0x50, 0xd6, 0xb1, 0x0f, 0x32,
	0x65, 0x69, 0xda, 0x75, 0x0c, 0xac, 0x3a, 0xf6, 0xa1, 0x96, 0xaf, 0x41, 0x3a, 0x06, 0x65, 0x1d,
	0xfb, 0xa8, 0x60, 0xad, 0xa4, 0x63, 0x60, 0xd7, 0xb1, 0x8f, 0x35, 0x73, 0x83, 0x74, 0x0c, 0xec,
	0x3a, 0xf6, 0x89, 0x85, 0x5a, 0xd4, 0x31, 0x18, 0xa0, 0x63, 0x6e, 0xa6, 0x63, 0x4d, 0x8b, 0x8e,
	0x49, 0x75, 0x02, 0x8b, 0x3a, 0x7d, 0xaa, 0xd5, 0x56, 0x51, 0x9d, 0xc4, 0x3c, 0xcd, 0x86, 0x1a,
	0x7d, 0x30, 0xf3, 0xd4, 0x3c, 0x5d, 0x3f, 0x02, 0x6d, 0x52, 0xce, 0x27, 0x20, 0xa6, 0x3e, 0x07,
	0xda, 0x04, 0xc4, 0xd4, 0x47, 0xac, 0x2a, 0xd5, 0xf1, 0xd5, 0xaa, 0x94, 0x9b, 0x7c, 0x95, 0x71,
	0x03, 0x6d, 0x75, 0x8b, 0xd2, 0xea, 0xef, 0x46, 0xd0, 0xb0, 0xfa, 0x6d, 0xf4, 0x7f, 0x77, 0x8d,
	0x29, 0xa6, 0xd3, 0x5c, 0xbf, 0xcd, 0x11, 0x6f, 0x52, 0xd3, 0x70, 0x49, 0x78, 0x43, 0xdd, 0xcd,
	0x87, 0xad, 0xc2, 0xb4, 0x37, 0x26, 0x46, 0x63, 0x89, 0x5b, 0x46, 0xe7, 0xd5, 0x45, 0x39, 0xaf,
	0x36, 0x1c, 0x68, 0xbb, 0x8b, 0xe9, 0x6f, 0x46, 0xdc, 0x99, 0xef, 0xab, 0x65, 0xc9, 0x14, 0x97,
	0x6a, 0x5a, 0x3c, 0x33, 0xda, 0x4d, 0x75, 0x61, 0x95, 0x07, 0x55, 0x72, 0xc4, 0xe5, 0xaf, 0xf1,
	0xcb, 0x1f, 0xc9, 0x59, 0x56, 0xb7, 0x83, 0xfa, 0x6f, 0x7e, 0xf4, 0x77, 0x4f, 0x31, 0xf4, 0xb8,
	0x2c, 0xf4, 0x70, 0x0a, 0xda, 0xf5, 0xe6, 0x24, 0x33, 0x03, 0x3d, 0xa6, 0x0b, 0x6c, 0x25, 0xbf,
	0x41, 0xea, 0xe0, 0x28, 0x4a, 0xb2, 0xfd, 0x6f, 0xa9, 0x99, 0xff, 0x3e, 0x7b, 0x2c, 0x77, 0x16,
	0xb7, 0xb2, 0x80, 0x3d, 0xea, 0x06, 0xfa, 0x87, 0xd6, 0xaa, 0x3a, 0x97, 0x9a, 0xd8, 0xa3, 0x9b,
	0xf9, 0x97, 0x96, 0xb8, 0x46, 0x8a, 0x13, 0x08, 0x5b, 0x27, 0x19, 0xf8, 0x76, 0xfe, 0x1b, 0x0f,
	0xf6, 0x5c, 0x42, 0x45, 0xc5, 0x15, 0xb3, 0x7b, 0x47, 0x55, 0x9c, 0x99, 0x5d, 0xf1, 0x05, 0xab,
	0x7e, 0x11, 0xa0, 0xdd, 0x65, 0x8e, 0x65, 0xbf, 0x0c, 0x90, 0x39, 0x85, 0x62, 0x4e, 0xef, 0x66,
	0x38, 0x23, 0xa7, 0x30, 0x30, 0xa7, 0x62, 0x6a, 0x9b, 0x81, 0x41, 0x39, 0x05, 0x7b, 0x4e, 0xd7,
	0xd4, 0x65, 0x41, 0x29, 0xa7, 0x35, 0x54, 0x81, 0x62, 0x7a, 0x14, 0x4b, 0x4c, 0x6c, 0xd3, 0x60,
	0xa4, 0x48, 0xf2, 0x96, 0xd0, 0x6c, 0xc6, 0xf3, 0x7c, 0x1f, 0x93, 0x9c, 0x26, 0x26, 0xb6, 0x29,
	0x49, 0x5b, 0xe3, 0x8b, 0x92, 0x25, 0x2e, 0x80, 0x04, 0x2b, 0xc0, 0x71, 0x9e, 0x86, 0x4d, 0x75,
	0x01, 0xc4, 0x39, 0x9b, 0x38, 0x56, 0x99, 0x10, 0xdf, 0xfd, 0x66, 0x35, 0x6c, 0xa9, 0xef, 0xfe,
	0x42, 0x35, 0x80, 0xad, 0x1a, 0xb6, 0xd5, 0xf5, 0x44, 0xb9, 0x1a, 0xa0, 0x54, 0x0d, 0x6f, 0xab,
	0x4f, 0x6a, 0xa3, 0x1a, 0x56, 0xd0, 0xf9, 0x30, 0x6e, 0x45, 0x61, 0xbb, 0x03, 0x2e, 0x13, 0x80,
	0x14, 0xa7, 0x69, 0x98, 0xc4, 0xa9, 0x36, 0x87, 0x9d, 0x53, 0x80, 0xfb, 0x5e, 0x7b, 0x5f, 0x2e,
	0x33, 0xea, 0x1d, 0x74, 0x41, 0x1e, 0x03, 0xad, 0x5e, 0x54, 0x26, 0x8b, 0x99, 0xac, 0x92, 0x43,
	0x0a, 0xf4, 0x1b, 0x68, 0x56, 0x66, 0xb2, 0x44, 0x15, 0x43, 0xda, 0xb4, 0x58, 0x36, 0x69, 0xb7,
	0xba, 0xe8, 0xe2, 0x61, 0x4c, 0xa8, 0x6b, 0xf9, 0x3b, 0x1d, 0x17, 0xf7, 0xc1, 0x99, 0x9d, 0x7b,
	0xd0, 0x8b, 0x43, 0x82, 0xa9, 0x2c, 0xe4, 0x74, 0x1f, 0xc7, 0x69, 0x42, 0xd3, 0xca, 0x55, 0xfe,
	0x07, 0x3e, 0xd3, 0xb6, 0x3f, 0xf0, 0x69, 0x54, 0xd8, 0x96, 0x0f, 0xd8, 0x82, 0x64, 0xed, 0xb3,
	0xc7, 0x5b, 0x7d, 0x58, 0xff, 0xf4, 0xcf, 0x5f, 0x5c, 0x1a, 0xfa, 0xcb, 0x17, 0x97, 0x86, 0xfe,
	0xfe, 0xc5, 0xa5, 0xa1, 0x0f, 0x1a, 0xed, 0x90, 0xff, 0xcd, 0x1d, 0xdb, 0x7f, 0x2e, 0xc6, 0x30,
	0x1f, 0xfa, 0xf8, 0x00, 0xd3, 0xf6, 0x7c, 0x07, 0x7b, 0x11, 0x74, 0x0e, 0x12, 0xb8, 0x1e, 0xc6,
	0x6d, 0x9c, 0xc2, 0xf5, 0x43, 0x08, 0xaf, 0xc7, 0x1e, 0x84, 0xc7, 0x78, 0x9e, 0x1c, 0xb5, 0xe7,
	0x0f, 0x21, 0x9c, 0xf7, 0x02, 0x8f, 0x00, 0xa6, 0xe9, 0xbc, 0xf0, 0x7d, 0x3e, 0xf5, 0x3b, 0xb8,
	0xeb, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x0c, 0xb3, 0xec, 0x42, 0x2b, 0x00, 0x00,
}

func (m *JunosNetworkStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Uplanes != nil {
		{
			size, err := m.Uplanes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Uplane) > 0 {
		for iNdEx := len(m.Uplane) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Uplane[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Infra != nil {
		{
			size, err := m.Infra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.UplaneId != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.UplaneId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Network != nil {
		{
			size, err := m.Network.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hag != nil {
		{
			size, err := m.Hag.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xea
	}
	if m.Dvlan != nil {
		{
			size, err := m.Dvlan.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
	}
	if m.L2Tp != nil {
		{
			size, err := m.L2Tp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.Pppoe != nil {
		{
			size, err := m.Pppoe.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Ppp != nil {
		{
			size, err := m.Ppp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Dhcp != nil {
		{
			size, err := m.Dhcp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Io != nil {
		{
			size, err := m.Io.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.L3TxV6KernelForwardDrops != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxV6KernelForwardDrops))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x90
	}
	if m.L3TxV6KernelForward != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxV6KernelForward))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.L3TxV4KernelForwardDrops != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxV4KernelForwardDrops))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x80
	}
	if m.L3TxV4KernelForward != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxV4KernelForward))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf8
	}
	if m.L3TxSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxSendFailed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf0
	}
	if m.L3TxPacketCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3TxPacketCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe8
	}
	if m.L3RxUnsupportedProtocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3RxUnsupportedProtocol))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe0
	}
	if m.L3RxPacketCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L3RxPacketCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.L2TxV6OutErrorLocalIntf != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxV6OutErrorLocalIntf))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.L2TxV4OutErrorLocalIntf != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxV4OutErrorLocalIntf))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.L2BbeIoSendTxFailedPartial != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2BbeIoSendTxFailedPartial))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.L2BbeIoSendTxFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2BbeIoSendTxFailed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.L2TxIflInvalid != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxIflInvalid))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.L2TxNoIfdCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxNoIfdCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.L2TxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxMalformedCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.L2TxPacketsCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2TxPacketsCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.L2RxV6DataPathPuntPktDrop != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxV6DataPathPuntPktDrop))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.L2RxV6DataPathPuntPkt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxV6DataPathPuntPkt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.L2RxV4DataPathPuntPktDrop != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxV4DataPathPuntPktDrop))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.L2RxV4DataPathPuntPkt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxV4DataPathPuntPkt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.L2RxUnsupportedPuntAf != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxUnsupportedPuntAf))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.L2RxUnsupportedUdpProtocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxUnsupportedUdpProtocol))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.L2RxUnsupportedInet6Protocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxUnsupportedInet6Protocol))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.L2RxUnsupportedInetProtocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxUnsupportedInetProtocol))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.L2BbeIoRcvL3UnknownAddressFamily != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2BbeIoRcvL3UnknownAddressFamily))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.L2RxIfCreateFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxIfCreateFailed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.L2RxNoIffCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxNoIffCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.L2RxIflInvalid != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxIflInvalid))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.L2RxIfdInvalid != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxIfdInvalid))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.L2RxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxMalformedCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.L2RxPacketsFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxPacketsFailed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.L2RxPacketsCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.L2RxPacketsCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RxWhileNotConnected != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxWhileNotConnected))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.TxSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSendFailed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.TxIfInvalid != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIfInvalid))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.TxArpFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxArpFailed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.TxNoRttCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNoRttCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.TxNoIffCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNoIffCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.TxNoIfCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNoIfCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.TxNullPkt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNullPkt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.TxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxMalformedCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.PacketsTransmitted != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PacketsTransmitted))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.TxPacketCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPacketCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.RxSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxSendFailed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RxIflInvalid != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIflInvalid))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.RxNoIfCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNoIfCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.RxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMalformedCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RxNoConnection != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNoConnection))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.EraDrops != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.EraDrops))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.RxPacketCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPacketCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxMalformedCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc8
	}
	if m.TxSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSendFailed))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc0
	}
	if m.TxUnknownPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxUnknownPktCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb8
	}
	if m.TxIpv6CpNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpv6CpNackCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb0
	}
	if m.TxIpv6CpAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpv6CpAckCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa8
	}
	if m.TxIpv6CpReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpv6CpReqCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa0
	}
	if m.TxIpcpNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpcpNackCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x98
	}
	if m.TxIpcpAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpcpAckCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x90
	}
	if m.TxIpcpReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxIpcpReqCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x88
	}
	if m.TxChapFailureCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxChapFailureCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x80
	}
	if m.TxChapSuccessCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxChapSuccessCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf8
	}
	if m.TxChapRespCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxChapRespCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf0
	}
	if m.TxChapChallengeCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxChapChallengeCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe8
	}
	if m.TxPapNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPapNackCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.TxPapAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPapAckCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.TxPapReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPapReqCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd0
	}
	if m.TxLcpTermAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpTermAckCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc8
	}
	if m.TxLcpTermReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpTermReqCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc0
	}
	if m.TxLcpDiscardReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpDiscardReqCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb8
	}
	if m.TxLcpEchoReplyCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpEchoReplyCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb0
	}
	if m.TxLcpEchoReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpEchoReqCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa8
	}
	if m.TxLcpConfRejCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpConfRejCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa0
	}
	if m.TxLcpConfNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpConfNackCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x98
	}
	if m.TxLcpConfAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpConfAckCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x90
	}
	if m.TxLcpConfReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxLcpConfReqCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.TxCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxCnt))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x80
	}
	if m.RxUnsupported != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxUnsupported))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf8
	}
	if m.RxNoIfCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNoIfCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf0
	}
	if m.RxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMalformedCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe8
	}
	if m.RxIpv6CpNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpv6CpNackCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe0
	}
	if m.RxIpv6CpAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpv6CpAckCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.RxIpv6CpReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpv6CpReqCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.RxIpcpNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpcpNackCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.RxIpcpAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpcpAckCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.RxIpcpReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxIpcpReqCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.RxChapFailureCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxChapFailureCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.RxChapSuccessCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxChapSuccessCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.RxChapRespCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxChapRespCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.RxChapChallengeCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxChapChallengeCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.RxPapNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPapNackCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.RxPapAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPapAckCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.RxPapReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPapReqCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.RxLcpDiscardReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpDiscardReqCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.RxLcpEchoReplyCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpEchoReplyCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.RxLcpEchoReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpEchoReqCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.RxLcpProtocolRejCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpProtocolRejCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.RxLcpCodeRejCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpCodeRejCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.RxLcpTermAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpTermAckCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.RxLcpTermReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpTermReqCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RxLcpConfRejCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpConfRejCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.RxLcpConfNackCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpConfNackCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.RxLcpConfAckCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpConfAckCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RxLcpConfReqCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxLcpConfReqCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.RxPluginPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPluginPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.RxNetworkPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNetworkPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TxSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSendFailed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.TxCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.RxPadiEraDiscards != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPadiEraDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.RxUnsupported != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxUnsupported))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RxNoIfCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNoIfCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.RxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMalformedCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.RxPppCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPppCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RxPadrCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPadrCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.RxPadiCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPadiCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.RxCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RxPacketCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPacketCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TxMsgErr != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxMsgErr))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa0
	}
	if m.TxMsgCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxMsgCnt))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x98
	}
	if m.TxPktErr != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPktErr))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x90
	}
	if m.TxPktSendFailed != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPktSendFailed))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x88
	}
	if m.PppTxUnknownProtocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxUnknownProtocol))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0x80
	}
	if m.PppTxIpcpConfNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxIpcpConfNackCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf8
	}
	if m.PppTxIpcpConfAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxIpcpConfAckCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf0
	}
	if m.PppTxIpcpConfReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxIpcpConfReqCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe8
	}
	if m.PppTxChapFailCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxChapFailCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.PppTxChapSuccessCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxChapSuccessCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.PppTxChapRespCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxChapRespCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd0
	}
	if m.PppTxChapChallengeCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxChapChallengeCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc8
	}
	if m.PppTxPapNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxPapNackCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc0
	}
	if m.PppTxPapAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxPapAckCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb8
	}
	if m.PppTxPapReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxPapReqCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb0
	}
	if m.PppTxLcpTermAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpTermAckCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa8
	}
	if m.PppTxLcpTermReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpTermReqCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa0
	}
	if m.PppTxLcpEchoRespCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpEchoRespCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x98
	}
	if m.PppTxLcpEchoReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpEchoReqCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x90
	}
	if m.PppTxLcpConfNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpConfNackCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.PppTxLcpConfAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpConfAckCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x80
	}
	if m.PppTxLcpConfReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppTxLcpConfReqCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf8
	}
	if m.TxCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf0
	}
	if m.RxInvalidMsgCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxInvalidMsgCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe8
	}
	if m.RxMsgErr != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMsgErr))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe0
	}
	if m.RxMsgProcessdCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMsgProcessdCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.RxMsgCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMsgCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.PppRxUnknownProtocol != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxUnknownProtocol))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.RxMalformedCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMalformedCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.PppRxIpcpConfNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxIpcpConfNackCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.PppRxIpcpConfAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxIpcpConfAckCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.PppRxIpcpConfReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxIpcpConfReqCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.PppRxChapFailCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxChapFailCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.PppRxChapSuccessCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxChapSuccessCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.PppRxChapRespCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxChapRespCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.PppRxChapChallengeCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxChapChallengeCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.PppRxPapNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxPapNackCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.PppRxPapAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxPapAckCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.PppRxPapReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxPapReqCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.PppRxLcpEchoRespCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpEchoRespCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.PppRxLcpEchoReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpEchoReqCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.PppRxLcpTermAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpTermAckCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.PppRxLcpTermReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpTermReqCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.PppRxLcpConfNackCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpConfNackCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.PppRxLcpConfAckCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpConfAckCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.PppRxLcpConfReqCount != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxLcpConfReqCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TxPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.PppRxPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.PppRxPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.RxPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.RxCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FailedHagSessionsCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.FailedHagSessionsCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.SuccessfulHagSessionsCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.SuccessfulHagSessionsCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.InflightHagSessionsCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.InflightHagSessionsCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.TxNotifyPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNotifyPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.TxTearDownPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxTearDownPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.TxHelloPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxHelloPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.TxSetupDenyPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSetupDenyPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.TxSetupAcceptPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSetupAcceptPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.TxSetupRequestPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSetupRequestPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.TxSendFailedPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSendFailedPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.TxSendSucceededPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxSendSucceededPktCnt))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.TxNoIfPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNoIfPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.TxNullPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNullPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.TxNetworkPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.TxNetworkPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.RxNotifyPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNotifyPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.RxTearDownPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxTearDownPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.RxHelloPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxHelloPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.RxSetupRequestCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxSetupRequestCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RxUnsupportedPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxUnsupportedPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.RxSendFailedPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxSendFailedPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.RxSendSucceededPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxSendSucceededPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RxNoIfPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNoIfPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.RxMalformedPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxMalformedPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.RxNetworkPktCnt != nil {
		i = encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA, i, uint64(*m.RxNetworkPktCnt))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintBbeSmgdSubMgmtNetworkStatsOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovBbeSmgdSubMgmtNetworkStatsOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosNetworkStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uplanes != nil {
		l = m.Uplanes.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Uplane) > 0 {
		for _, e := range m.Uplane {
			l = e.Size()
			n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UplaneId != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.UplaneId))
	}
	if m.Infra != nil {
		l = m.Infra.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Network != nil {
		l = m.Network.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Io != nil {
		l = m.Io.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.Dhcp != nil {
		l = m.Dhcp.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.Ppp != nil {
		l = m.Ppp.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.Pppoe != nil {
		l = m.Pppoe.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.L2Tp != nil {
		l = m.L2Tp.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.Dvlan != nil {
		l = m.Dvlan.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.Hag != nil {
		l = m.Hag.Size()
		n += 2 + l + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.L2RxPacketsCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxPacketsCnt))
	}
	if m.L2RxPacketsFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxPacketsFailed))
	}
	if m.L2RxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxMalformedCnt))
	}
	if m.L2RxIfdInvalid != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxIfdInvalid))
	}
	if m.L2RxIflInvalid != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxIflInvalid))
	}
	if m.L2RxNoIffCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxNoIffCnt))
	}
	if m.L2RxIfCreateFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxIfCreateFailed))
	}
	if m.L2BbeIoRcvL3UnknownAddressFamily != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2BbeIoRcvL3UnknownAddressFamily))
	}
	if m.L2RxUnsupportedInetProtocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxUnsupportedInetProtocol))
	}
	if m.L2RxUnsupportedInet6Protocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxUnsupportedInet6Protocol))
	}
	if m.L2RxUnsupportedUdpProtocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxUnsupportedUdpProtocol))
	}
	if m.L2RxUnsupportedPuntAf != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxUnsupportedPuntAf))
	}
	if m.L2RxV4DataPathPuntPkt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxV4DataPathPuntPkt))
	}
	if m.L2RxV4DataPathPuntPktDrop != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxV4DataPathPuntPktDrop))
	}
	if m.L2RxV6DataPathPuntPkt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxV6DataPathPuntPkt))
	}
	if m.L2RxV6DataPathPuntPktDrop != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2RxV6DataPathPuntPktDrop))
	}
	if m.L2TxPacketsCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxPacketsCnt))
	}
	if m.L2TxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxMalformedCnt))
	}
	if m.L2TxNoIfdCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxNoIfdCnt))
	}
	if m.L2TxIflInvalid != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxIflInvalid))
	}
	if m.L2BbeIoSendTxFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2BbeIoSendTxFailed))
	}
	if m.L2BbeIoSendTxFailedPartial != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2BbeIoSendTxFailedPartial))
	}
	if m.L2TxV4OutErrorLocalIntf != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxV4OutErrorLocalIntf))
	}
	if m.L2TxV6OutErrorLocalIntf != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L2TxV6OutErrorLocalIntf))
	}
	if m.L3RxPacketCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3RxPacketCnt))
	}
	if m.L3RxUnsupportedProtocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3RxUnsupportedProtocol))
	}
	if m.L3TxPacketCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxPacketCnt))
	}
	if m.L3TxSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxSendFailed))
	}
	if m.L3TxV4KernelForward != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxV4KernelForward))
	}
	if m.L3TxV4KernelForwardDrops != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxV4KernelForwardDrops))
	}
	if m.L3TxV6KernelForward != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxV6KernelForward))
	}
	if m.L3TxV6KernelForwardDrops != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.L3TxV6KernelForwardDrops))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxPacketCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPacketCnt))
	}
	if m.EraDrops != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.EraDrops))
	}
	if m.RxNoConnection != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNoConnection))
	}
	if m.RxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMalformedCnt))
	}
	if m.RxNoIfCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNoIfCnt))
	}
	if m.RxIflInvalid != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIflInvalid))
	}
	if m.RxSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxSendFailed))
	}
	if m.TxPacketCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPacketCnt))
	}
	if m.PacketsTransmitted != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PacketsTransmitted))
	}
	if m.TxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxMalformedCnt))
	}
	if m.TxNullPkt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNullPkt))
	}
	if m.TxNoIfCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNoIfCnt))
	}
	if m.TxNoIffCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNoIffCnt))
	}
	if m.TxNoRttCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNoRttCnt))
	}
	if m.TxArpFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxArpFailed))
	}
	if m.TxIfInvalid != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIfInvalid))
	}
	if m.TxSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSendFailed))
	}
	if m.RxWhileNotConnected != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxWhileNotConnected))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxNetworkPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNetworkPktCnt))
	}
	if m.RxPluginPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPluginPktCnt))
	}
	if m.RxLcpConfReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpConfReqCnt))
	}
	if m.RxLcpConfAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpConfAckCnt))
	}
	if m.RxLcpConfNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpConfNackCnt))
	}
	if m.RxLcpConfRejCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpConfRejCnt))
	}
	if m.RxLcpTermReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpTermReqCnt))
	}
	if m.RxLcpTermAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpTermAckCnt))
	}
	if m.RxLcpCodeRejCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpCodeRejCnt))
	}
	if m.RxLcpProtocolRejCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpProtocolRejCnt))
	}
	if m.RxLcpEchoReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpEchoReqCnt))
	}
	if m.RxLcpEchoReplyCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpEchoReplyCnt))
	}
	if m.RxLcpDiscardReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxLcpDiscardReqCnt))
	}
	if m.RxPapReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPapReqCnt))
	}
	if m.RxPapAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPapAckCnt))
	}
	if m.RxPapNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPapNackCnt))
	}
	if m.RxChapChallengeCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxChapChallengeCnt))
	}
	if m.RxChapRespCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxChapRespCnt))
	}
	if m.RxChapSuccessCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxChapSuccessCnt))
	}
	if m.RxChapFailureCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxChapFailureCnt))
	}
	if m.RxIpcpReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpcpReqCnt))
	}
	if m.RxIpcpAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpcpAckCnt))
	}
	if m.RxIpcpNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpcpNackCnt))
	}
	if m.RxIpv6CpReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpv6CpReqCnt))
	}
	if m.RxIpv6CpAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpv6CpAckCnt))
	}
	if m.RxIpv6CpNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxIpv6CpNackCnt))
	}
	if m.RxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMalformedCnt))
	}
	if m.RxNoIfCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNoIfCnt))
	}
	if m.RxUnsupported != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxUnsupported))
	}
	if m.TxCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxCnt))
	}
	if m.TxLcpConfReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpConfReqCnt))
	}
	if m.TxLcpConfAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpConfAckCnt))
	}
	if m.TxLcpConfNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpConfNackCnt))
	}
	if m.TxLcpConfRejCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpConfRejCnt))
	}
	if m.TxLcpEchoReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpEchoReqCnt))
	}
	if m.TxLcpEchoReplyCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpEchoReplyCnt))
	}
	if m.TxLcpDiscardReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpDiscardReqCnt))
	}
	if m.TxLcpTermReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpTermReqCnt))
	}
	if m.TxLcpTermAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxLcpTermAckCnt))
	}
	if m.TxPapReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPapReqCnt))
	}
	if m.TxPapAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPapAckCnt))
	}
	if m.TxPapNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPapNackCnt))
	}
	if m.TxChapChallengeCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxChapChallengeCnt))
	}
	if m.TxChapRespCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxChapRespCnt))
	}
	if m.TxChapSuccessCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxChapSuccessCnt))
	}
	if m.TxChapFailureCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxChapFailureCnt))
	}
	if m.TxIpcpReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpcpReqCnt))
	}
	if m.TxIpcpAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpcpAckCnt))
	}
	if m.TxIpcpNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpcpNackCnt))
	}
	if m.TxIpv6CpReqCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpv6CpReqCnt))
	}
	if m.TxIpv6CpAckCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpv6CpAckCnt))
	}
	if m.TxIpv6CpNackCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxIpv6CpNackCnt))
	}
	if m.TxUnknownPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxUnknownPktCnt))
	}
	if m.TxSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSendFailed))
	}
	if m.TxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxMalformedCnt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxCnt))
	}
	if m.RxPadiCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPadiCnt))
	}
	if m.RxPadrCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPadrCnt))
	}
	if m.RxPppCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPppCnt))
	}
	if m.RxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMalformedCnt))
	}
	if m.RxNoIfCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNoIfCnt))
	}
	if m.RxUnsupported != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxUnsupported))
	}
	if m.RxPadiEraDiscards != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPadiEraDiscards))
	}
	if m.TxCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxCnt))
	}
	if m.TxSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSendFailed))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxPacketCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPacketCnt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxCnt))
	}
	if m.RxPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxPktCnt))
	}
	if m.PppRxPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxPktCnt))
	}
	if m.TxPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPktCnt))
	}
	if m.PppRxLcpConfReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpConfReqCount))
	}
	if m.PppRxLcpConfAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpConfAckCount))
	}
	if m.PppRxLcpConfNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpConfNackCount))
	}
	if m.PppRxLcpTermReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpTermReqCount))
	}
	if m.PppRxLcpTermAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpTermAckCount))
	}
	if m.PppRxLcpEchoReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpEchoReqCount))
	}
	if m.PppRxLcpEchoRespCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxLcpEchoRespCount))
	}
	if m.PppRxPapReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxPapReqCount))
	}
	if m.PppRxPapAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxPapAckCount))
	}
	if m.PppRxPapNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxPapNackCount))
	}
	if m.PppRxChapChallengeCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxChapChallengeCount))
	}
	if m.PppRxChapRespCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxChapRespCount))
	}
	if m.PppRxChapSuccessCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxChapSuccessCount))
	}
	if m.PppRxChapFailCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxChapFailCount))
	}
	if m.PppRxIpcpConfReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxIpcpConfReqCount))
	}
	if m.PppRxIpcpConfAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxIpcpConfAckCount))
	}
	if m.PppRxIpcpConfNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxIpcpConfNackCount))
	}
	if m.RxMalformedCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMalformedCnt))
	}
	if m.PppRxUnknownProtocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppRxUnknownProtocol))
	}
	if m.RxMsgCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMsgCnt))
	}
	if m.RxMsgProcessdCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMsgProcessdCnt))
	}
	if m.RxMsgErr != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMsgErr))
	}
	if m.RxInvalidMsgCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxInvalidMsgCnt))
	}
	if m.TxCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxCnt))
	}
	if m.PppTxLcpConfReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpConfReqCount))
	}
	if m.PppTxLcpConfAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpConfAckCount))
	}
	if m.PppTxLcpConfNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpConfNackCount))
	}
	if m.PppTxLcpEchoReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpEchoReqCount))
	}
	if m.PppTxLcpEchoRespCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpEchoRespCount))
	}
	if m.PppTxLcpTermReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpTermReqCount))
	}
	if m.PppTxLcpTermAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxLcpTermAckCount))
	}
	if m.PppTxPapReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxPapReqCount))
	}
	if m.PppTxPapAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxPapAckCount))
	}
	if m.PppTxPapNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxPapNackCount))
	}
	if m.PppTxChapChallengeCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxChapChallengeCount))
	}
	if m.PppTxChapRespCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxChapRespCount))
	}
	if m.PppTxChapSuccessCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxChapSuccessCount))
	}
	if m.PppTxChapFailCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxChapFailCount))
	}
	if m.PppTxIpcpConfReqCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxIpcpConfReqCount))
	}
	if m.PppTxIpcpConfAckCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxIpcpConfAckCount))
	}
	if m.PppTxIpcpConfNackCount != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxIpcpConfNackCount))
	}
	if m.PppTxUnknownProtocol != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.PppTxUnknownProtocol))
	}
	if m.TxPktSendFailed != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPktSendFailed))
	}
	if m.TxPktErr != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxPktErr))
	}
	if m.TxMsgCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxMsgCnt))
	}
	if m.TxMsgErr != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxMsgErr))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RxNetworkPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNetworkPktCnt))
	}
	if m.RxMalformedPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxMalformedPktCnt))
	}
	if m.RxNoIfPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNoIfPktCnt))
	}
	if m.RxSendSucceededPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxSendSucceededPktCnt))
	}
	if m.RxSendFailedPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxSendFailedPktCnt))
	}
	if m.RxUnsupportedPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxUnsupportedPktCnt))
	}
	if m.RxSetupRequestCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxSetupRequestCnt))
	}
	if m.RxHelloPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxHelloPktCnt))
	}
	if m.RxTearDownPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxTearDownPktCnt))
	}
	if m.RxNotifyPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.RxNotifyPktCnt))
	}
	if m.TxNetworkPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNetworkPktCnt))
	}
	if m.TxNullPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNullPktCnt))
	}
	if m.TxNoIfPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNoIfPktCnt))
	}
	if m.TxSendSucceededPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSendSucceededPktCnt))
	}
	if m.TxSendFailedPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSendFailedPktCnt))
	}
	if m.TxSetupRequestPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSetupRequestPktCnt))
	}
	if m.TxSetupAcceptPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSetupAcceptPktCnt))
	}
	if m.TxSetupDenyPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxSetupDenyPktCnt))
	}
	if m.TxHelloPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxHelloPktCnt))
	}
	if m.TxTearDownPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxTearDownPktCnt))
	}
	if m.TxNotifyPktCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.TxNotifyPktCnt))
	}
	if m.InflightHagSessionsCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.InflightHagSessionsCnt))
	}
	if m.SuccessfulHagSessionsCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.SuccessfulHagSessionsCnt))
	}
	if m.FailedHagSessionsCnt != nil {
		n += 2 + sovBbeSmgdSubMgmtNetworkStatsOc(uint64(*m.FailedHagSessionsCnt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBbeSmgdSubMgmtNetworkStatsOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBbeSmgdSubMgmtNetworkStatsOc(x uint64) (n int) {
	return sovBbeSmgdSubMgmtNetworkStatsOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosNetworkStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_network_stats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_network_stats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &JunosNetworkStatsSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &JunosNetworkStatsSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uplanes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Uplanes == nil {
				m.Uplanes = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType{}
			}
			if err := m.Uplanes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: uplanes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: uplanes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uplane", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uplane = append(m.Uplane, &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList{})
			if err := m.Uplane[len(m.Uplane)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: uplane_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: uplane_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UplaneId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UplaneId = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Infra == nil {
				m.Infra = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType{}
			}
			if err := m.Infra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: infra_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: infra_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Network == nil {
				m.Network = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType{}
			}
			if err := m.Network.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Io", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Io == nil {
				m.Io = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType{}
			}
			if err := m.Io.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dhcp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dhcp == nil {
				m.Dhcp = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType{}
			}
			if err := m.Dhcp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ppp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ppp == nil {
				m.Ppp = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType{}
			}
			if err := m.Ppp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pppoe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pppoe == nil {
				m.Pppoe = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType{}
			}
			if err := m.Pppoe.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2Tp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.L2Tp == nil {
				m.L2Tp = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType{}
			}
			if err := m.L2Tp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 156:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dvlan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dvlan == nil {
				m.Dvlan = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType{}
			}
			if err := m.Dvlan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 157:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hag == nil {
				m.Hag = &JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType{}
			}
			if err := m.Hag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeIoType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: io_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: io_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxPacketsCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxPacketsCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxPacketsFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxPacketsFailed = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxMalformedCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxIfdInvalid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxIfdInvalid = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxIflInvalid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxIflInvalid = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxNoIffCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxNoIffCnt = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxIfCreateFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxIfCreateFailed = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2BbeIoRcvL3UnknownAddressFamily", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2BbeIoRcvL3UnknownAddressFamily = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxUnsupportedInetProtocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxUnsupportedInetProtocol = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxUnsupportedInet6Protocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxUnsupportedInet6Protocol = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxUnsupportedUdpProtocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxUnsupportedUdpProtocol = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxUnsupportedPuntAf", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxUnsupportedPuntAf = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxV4DataPathPuntPkt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxV4DataPathPuntPkt = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxV4DataPathPuntPktDrop", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxV4DataPathPuntPktDrop = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxV6DataPathPuntPkt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxV6DataPathPuntPkt = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2RxV6DataPathPuntPktDrop", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2RxV6DataPathPuntPktDrop = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxPacketsCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxPacketsCnt = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxMalformedCnt = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxNoIfdCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxNoIfdCnt = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxIflInvalid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxIflInvalid = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2BbeIoSendTxFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2BbeIoSendTxFailed = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2BbeIoSendTxFailedPartial", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2BbeIoSendTxFailedPartial = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxV4OutErrorLocalIntf", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxV4OutErrorLocalIntf = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TxV6OutErrorLocalIntf", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TxV6OutErrorLocalIntf = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3RxPacketCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3RxPacketCnt = &v
		case 76:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3RxUnsupportedProtocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3RxUnsupportedProtocol = &v
		case 77:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxPacketCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxPacketCnt = &v
		case 78:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxSendFailed = &v
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxV4KernelForward", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxV4KernelForward = &v
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxV4KernelForwardDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxV4KernelForwardDrops = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxV6KernelForward", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxV6KernelForward = &v
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L3TxV6KernelForwardDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L3TxV6KernelForwardDrops = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDhcpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: dhcp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: dhcp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPacketCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPacketCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EraDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EraDrops = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNoConnection", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNoConnection = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMalformedCnt = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNoIfCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNoIfCnt = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIflInvalid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIflInvalid = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxSendFailed = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPacketCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPacketCnt = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketsTransmitted", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PacketsTransmitted = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxMalformedCnt = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNullPkt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNullPkt = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNoIfCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNoIfCnt = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNoIffCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNoIffCnt = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNoRttCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNoRttCnt = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxArpFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxArpFailed = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIfInvalid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIfInvalid = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSendFailed = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxWhileNotConnected", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxWhileNotConnected = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ppp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ppp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNetworkPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNetworkPktCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPluginPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPluginPktCnt = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpConfReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpConfReqCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpConfAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpConfAckCnt = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpConfNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpConfNackCnt = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpConfRejCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpConfRejCnt = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpTermReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpTermReqCnt = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpTermAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpTermAckCnt = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpCodeRejCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpCodeRejCnt = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpProtocolRejCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpProtocolRejCnt = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpEchoReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpEchoReqCnt = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpEchoReplyCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpEchoReplyCnt = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxLcpDiscardReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxLcpDiscardReqCnt = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPapReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPapReqCnt = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPapAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPapAckCnt = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPapNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPapNackCnt = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxChapChallengeCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxChapChallengeCnt = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxChapRespCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxChapRespCnt = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxChapSuccessCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxChapSuccessCnt = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxChapFailureCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxChapFailureCnt = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpcpReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpcpReqCnt = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpcpAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpcpAckCnt = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpcpNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpcpNackCnt = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpv6CpReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpv6CpReqCnt = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpv6CpAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpv6CpAckCnt = &v
		case 76:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxIpv6CpNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxIpv6CpNackCnt = &v
		case 77:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMalformedCnt = &v
		case 78:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNoIfCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNoIfCnt = &v
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxUnsupported", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxUnsupported = &v
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxCnt = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpConfReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpConfReqCnt = &v
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpConfAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpConfAckCnt = &v
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpConfNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpConfNackCnt = &v
		case 84:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpConfRejCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpConfRejCnt = &v
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpEchoReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpEchoReqCnt = &v
		case 86:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpEchoReplyCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpEchoReplyCnt = &v
		case 87:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpDiscardReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpDiscardReqCnt = &v
		case 88:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpTermReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpTermReqCnt = &v
		case 89:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxLcpTermAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxLcpTermAckCnt = &v
		case 90:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPapReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPapReqCnt = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPapAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPapAckCnt = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPapNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPapNackCnt = &v
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxChapChallengeCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxChapChallengeCnt = &v
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxChapRespCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxChapRespCnt = &v
		case 95:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxChapSuccessCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxChapSuccessCnt = &v
		case 96:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxChapFailureCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxChapFailureCnt = &v
		case 97:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpcpReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpcpReqCnt = &v
		case 98:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpcpAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpcpAckCnt = &v
		case 99:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpcpNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpcpNackCnt = &v
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpv6CpReqCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpv6CpReqCnt = &v
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpv6CpAckCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpv6CpAckCnt = &v
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxIpv6CpNackCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxIpv6CpNackCnt = &v
		case 103:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxUnknownPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxUnknownPktCnt = &v
		case 104:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSendFailed = &v
		case 105:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxMalformedCnt = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypePppoeType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: pppoe_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: pppoe_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPadiCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPadiCnt = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPadrCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPadrCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPppCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPppCnt = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMalformedCnt = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNoIfCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNoIfCnt = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxUnsupported", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxUnsupported = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPadiEraDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPadiEraDiscards = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxCnt = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSendFailed = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeDvlanType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: dvlan_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: dvlan_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPacketCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPacketCnt = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeL2TpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: l2tp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: l2tp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxPktCnt = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxPktCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPktCnt = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpConfReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpConfReqCount = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpConfAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpConfAckCount = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpConfNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpConfNackCount = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpTermReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpTermReqCount = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpTermAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpTermAckCount = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpEchoReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpEchoReqCount = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxLcpEchoRespCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxLcpEchoRespCount = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxPapReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxPapReqCount = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxPapAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxPapAckCount = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxPapNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxPapNackCount = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxChapChallengeCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxChapChallengeCount = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxChapRespCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxChapRespCount = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxChapSuccessCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxChapSuccessCount = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxChapFailCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxChapFailCount = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxIpcpConfReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxIpcpConfReqCount = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxIpcpConfAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxIpcpConfAckCount = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxIpcpConfNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxIpcpConfNackCount = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMalformedCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMalformedCnt = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppRxUnknownProtocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppRxUnknownProtocol = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMsgCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMsgCnt = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMsgProcessdCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMsgProcessdCnt = &v
		case 76:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMsgErr", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMsgErr = &v
		case 77:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxInvalidMsgCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxInvalidMsgCnt = &v
		case 78:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxCnt = &v
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpConfReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpConfReqCount = &v
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpConfAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpConfAckCount = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpConfNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpConfNackCount = &v
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpEchoReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpEchoReqCount = &v
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpEchoRespCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpEchoRespCount = &v
		case 84:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpTermReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpTermReqCount = &v
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxLcpTermAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxLcpTermAckCount = &v
		case 86:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxPapReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxPapReqCount = &v
		case 87:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxPapAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxPapAckCount = &v
		case 88:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxPapNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxPapNackCount = &v
		case 89:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxChapChallengeCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxChapChallengeCount = &v
		case 90:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxChapRespCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxChapRespCount = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxChapSuccessCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxChapSuccessCount = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxChapFailCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxChapFailCount = &v
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxIpcpConfReqCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxIpcpConfReqCount = &v
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxIpcpConfAckCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxIpcpConfAckCount = &v
		case 95:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxIpcpConfNackCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxIpcpConfNackCount = &v
		case 96:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppTxUnknownProtocol", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppTxUnknownProtocol = &v
		case 97:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPktSendFailed", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPktSendFailed = &v
		case 98:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxPktErr", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxPktErr = &v
		case 99:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxMsgCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxMsgCnt = &v
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxMsgErr", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxMsgErr = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosNetworkStatsSystemTypeSubscriberManagementTypeUplanesTypeUplaneListInfraTypeNetworkTypeHagType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: hag_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: hag_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNetworkPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNetworkPktCnt = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxMalformedPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxMalformedPktCnt = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNoIfPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNoIfPktCnt = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxSendSucceededPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxSendSucceededPktCnt = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxSendFailedPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxSendFailedPktCnt = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxUnsupportedPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxUnsupportedPktCnt = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxSetupRequestCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxSetupRequestCnt = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxHelloPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxHelloPktCnt = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxTearDownPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxTearDownPktCnt = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RxNotifyPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RxNotifyPktCnt = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNetworkPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNetworkPktCnt = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNullPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNullPktCnt = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNoIfPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNoIfPktCnt = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSendSucceededPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSendSucceededPktCnt = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSendFailedPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSendFailedPktCnt = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSetupRequestPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSetupRequestPktCnt = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSetupAcceptPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSetupAcceptPktCnt = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxSetupDenyPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxSetupDenyPktCnt = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHelloPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxHelloPktCnt = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxTearDownPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxTearDownPktCnt = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxNotifyPktCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxNotifyPktCnt = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflightHagSessionsCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InflightHagSessionsCnt = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuccessfulHagSessionsCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SuccessfulHagSessionsCnt = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailedHagSessionsCnt", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FailedHagSessionsCnt = &v
		default:
			iNdEx = preIndex
			skippy, err := skipBbeSmgdSubMgmtNetworkStatsOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBbeSmgdSubMgmtNetworkStatsOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBbeSmgdSubMgmtNetworkStatsOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBbeSmgdSubMgmtNetworkStatsOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBbeSmgdSubMgmtNetworkStatsOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBbeSmgdSubMgmtNetworkStatsOc = fmt.Errorf("proto: unexpected end of group")
)
