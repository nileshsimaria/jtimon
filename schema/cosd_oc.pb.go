// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosd_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Qos struct {
	Interfaces           *QosInterfacesType       `protobuf:"bytes,151,opt,name=interfaces" json:"interfaces,omitempty"`
	ForwardingGroups     *QosForwardingGroupsType `protobuf:"bytes,152,opt,name=forwarding_groups,json=forwardingGroups" json:"forwarding_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Qos) Reset()         { *m = Qos{} }
func (m *Qos) String() string { return proto.CompactTextString(m) }
func (*Qos) ProtoMessage()    {}
func (*Qos) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0}
}
func (m *Qos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Qos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Qos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Qos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qos.Merge(m, src)
}
func (m *Qos) XXX_Size() int {
	return m.Size()
}
func (m *Qos) XXX_DiscardUnknown() {
	xxx_messageInfo_Qos.DiscardUnknown(m)
}

var xxx_messageInfo_Qos proto.InternalMessageInfo

func (m *Qos) GetInterfaces() *QosInterfacesType {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *Qos) GetForwardingGroups() *QosForwardingGroupsType {
	if m != nil {
		return m.ForwardingGroups
	}
	return nil
}

type QosInterfacesType struct {
	Interface            []*QosInterfacesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *QosInterfacesType) Reset()         { *m = QosInterfacesType{} }
func (m *QosInterfacesType) String() string { return proto.CompactTextString(m) }
func (*QosInterfacesType) ProtoMessage()    {}
func (*QosInterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 0}
}
func (m *QosInterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosInterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosInterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosInterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInterfacesType.Merge(m, src)
}
func (m *QosInterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *QosInterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_QosInterfacesType proto.InternalMessageInfo

func (m *QosInterfacesType) GetInterface() []*QosInterfacesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type QosInterfacesTypeInterfaceList struct {
	InterfaceId          *string                                         `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	State                *QosInterfacesTypeInterfaceListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	InterfaceRef         *QosInterfacesTypeInterfaceListInterfaceRefType `protobuf:"bytes,152,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *QosInterfacesTypeInterfaceList) Reset()         { *m = QosInterfacesTypeInterfaceList{} }
func (m *QosInterfacesTypeInterfaceList) String() string { return proto.CompactTextString(m) }
func (*QosInterfacesTypeInterfaceList) ProtoMessage()    {}
func (*QosInterfacesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 0, 0}
}
func (m *QosInterfacesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosInterfacesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosInterfacesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosInterfacesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInterfacesTypeInterfaceList.Merge(m, src)
}
func (m *QosInterfacesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *QosInterfacesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInterfacesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_QosInterfacesTypeInterfaceList proto.InternalMessageInfo

func (m *QosInterfacesTypeInterfaceList) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *QosInterfacesTypeInterfaceList) GetState() *QosInterfacesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *QosInterfacesTypeInterfaceList) GetInterfaceRef() *QosInterfacesTypeInterfaceListInterfaceRefType {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

type QosInterfacesTypeInterfaceListStateType struct {
	InterfaceId          *string  `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QosInterfacesTypeInterfaceListStateType) Reset() {
	*m = QosInterfacesTypeInterfaceListStateType{}
}
func (m *QosInterfacesTypeInterfaceListStateType) String() string { return proto.CompactTextString(m) }
func (*QosInterfacesTypeInterfaceListStateType) ProtoMessage()    {}
func (*QosInterfacesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 0, 0, 0}
}
func (m *QosInterfacesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosInterfacesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosInterfacesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosInterfacesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInterfacesTypeInterfaceListStateType.Merge(m, src)
}
func (m *QosInterfacesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *QosInterfacesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInterfacesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_QosInterfacesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *QosInterfacesTypeInterfaceListStateType) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

type QosInterfacesTypeInterfaceListInterfaceRefType struct {
	State                *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) Reset() {
	*m = QosInterfacesTypeInterfaceListInterfaceRefType{}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) String() string {
	return proto.CompactTextString(m)
}
func (*QosInterfacesTypeInterfaceListInterfaceRefType) ProtoMessage() {}
func (*QosInterfacesTypeInterfaceListInterfaceRefType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 0, 0, 1}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefType.Merge(m, src)
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) XXX_Size() int {
	return m.Size()
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefType.DiscardUnknown(m)
}

var xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefType proto.InternalMessageInfo

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) GetState() *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type QosInterfacesTypeInterfaceListInterfaceRefTypeStateType struct {
	Interface            *string  `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	JnxIflsetinterface   *string  `protobuf:"bytes,52,opt,name=jnx_iflsetinterface,json=jnxIflsetinterface" json:"jnx_iflsetinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) Reset() {
	*m = QosInterfacesTypeInterfaceListInterfaceRefTypeStateType{}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) ProtoMessage() {}
func (*QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 0, 0, 1, 0}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefTypeStateType.Merge(m, src)
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_QosInterfacesTypeInterfaceListInterfaceRefTypeStateType proto.InternalMessageInfo

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) GetJnxIflsetinterface() string {
	if m != nil && m.JnxIflsetinterface != nil {
		return *m.JnxIflsetinterface
	}
	return ""
}

type QosForwardingGroupsType struct {
	ForwardingGroup      []*QosForwardingGroupsTypeForwardingGroupList `protobuf:"bytes,151,rep,name=forwarding_group,json=forwardingGroup" json:"forwarding_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *QosForwardingGroupsType) Reset()         { *m = QosForwardingGroupsType{} }
func (m *QosForwardingGroupsType) String() string { return proto.CompactTextString(m) }
func (*QosForwardingGroupsType) ProtoMessage()    {}
func (*QosForwardingGroupsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 1}
}
func (m *QosForwardingGroupsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosForwardingGroupsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosForwardingGroupsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosForwardingGroupsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosForwardingGroupsType.Merge(m, src)
}
func (m *QosForwardingGroupsType) XXX_Size() int {
	return m.Size()
}
func (m *QosForwardingGroupsType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosForwardingGroupsType.DiscardUnknown(m)
}

var xxx_messageInfo_QosForwardingGroupsType proto.InternalMessageInfo

func (m *QosForwardingGroupsType) GetForwardingGroup() []*QosForwardingGroupsTypeForwardingGroupList {
	if m != nil {
		return m.ForwardingGroup
	}
	return nil
}

type QosForwardingGroupsTypeForwardingGroupList struct {
	Name                 *string                                              `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State                *QosForwardingGroupsTypeForwardingGroupListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *QosForwardingGroupsTypeForwardingGroupList) Reset() {
	*m = QosForwardingGroupsTypeForwardingGroupList{}
}
func (m *QosForwardingGroupsTypeForwardingGroupList) String() string {
	return proto.CompactTextString(m)
}
func (*QosForwardingGroupsTypeForwardingGroupList) ProtoMessage() {}
func (*QosForwardingGroupsTypeForwardingGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 1, 0}
}
func (m *QosForwardingGroupsTypeForwardingGroupList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosForwardingGroupsTypeForwardingGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosForwardingGroupsTypeForwardingGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupList.Merge(m, src)
}
func (m *QosForwardingGroupsTypeForwardingGroupList) XXX_Size() int {
	return m.Size()
}
func (m *QosForwardingGroupsTypeForwardingGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupList proto.InternalMessageInfo

func (m *QosForwardingGroupsTypeForwardingGroupList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QosForwardingGroupsTypeForwardingGroupList) GetState() *QosForwardingGroupsTypeForwardingGroupListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type QosForwardingGroupsTypeForwardingGroupListStateType struct {
	Name                 *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	OutputQueue          *string  `protobuf:"bytes,52,opt,name=output_queue,json=outputQueue" json:"output_queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) Reset() {
	*m = QosForwardingGroupsTypeForwardingGroupListStateType{}
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*QosForwardingGroupsTypeForwardingGroupListStateType) ProtoMessage() {}
func (*QosForwardingGroupsTypeForwardingGroupListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6caf35228bc78289, []int{0, 1, 0, 0}
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupListStateType.Merge(m, src)
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) XXX_Size() int {
	return m.Size()
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_QosForwardingGroupsTypeForwardingGroupListStateType proto.InternalMessageInfo

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) GetOutputQueue() string {
	if m != nil && m.OutputQueue != nil {
		return *m.OutputQueue
	}
	return ""
}

var E_JnprQosExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*Qos)(nil),
	Field:         134,
	Name:          "jnpr_qos_ext",
	Tag:           "bytes,134,opt,name=jnpr_qos_ext",
	Filename:      "cosd_oc.proto",
}

func init() {
	proto.RegisterType((*Qos)(nil), "qos")
	proto.RegisterType((*QosInterfacesType)(nil), "qos.interfaces_type")
	proto.RegisterType((*QosInterfacesTypeInterfaceList)(nil), "qos.interfaces_type.interface_list")
	proto.RegisterType((*QosInterfacesTypeInterfaceListStateType)(nil), "qos.interfaces_type.interface_list.state_type")
	proto.RegisterType((*QosInterfacesTypeInterfaceListInterfaceRefType)(nil), "qos.interfaces_type.interface_list.interface_ref_type")
	proto.RegisterType((*QosInterfacesTypeInterfaceListInterfaceRefTypeStateType)(nil), "qos.interfaces_type.interface_list.interface_ref_type.state_type")
	proto.RegisterType((*QosForwardingGroupsType)(nil), "qos.forwarding_groups_type")
	proto.RegisterType((*QosForwardingGroupsTypeForwardingGroupList)(nil), "qos.forwarding_groups_type.forwarding_group_list")
	proto.RegisterType((*QosForwardingGroupsTypeForwardingGroupListStateType)(nil), "qos.forwarding_groups_type.forwarding_group_list.state_type")
	proto.RegisterExtension(E_JnprQosExt)
}

func init() { proto.RegisterFile("cosd_oc.proto", fileDescriptor_6caf35228bc78289) }

var fileDescriptor_6caf35228bc78289 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4b, 0x6e, 0x13, 0x41,
	0x10, 0xd5, 0x24, 0x8e, 0x94, 0x94, 0x1d, 0x12, 0x3a, 0x7c, 0xcc, 0x80, 0xac, 0x04, 0x36, 0xde,
	0x78, 0x46, 0x84, 0xcf, 0x02, 0xb1, 0x08, 0x46, 0x11, 0x32, 0x0b, 0xa4, 0x4c, 0x36, 0x88, 0x8f,
	0x86, 0x89, 0x5d, 0x1e, 0xf7, 0xc4, 0xee, 0x1e, 0x77, 0xd7, 0x10, 0x67, 0xcb, 0x02, 0x89, 0x13,
	0xc0, 0x49, 0x38, 0x02, 0x42, 0x82, 0x05, 0x27, 0x40, 0xc8, 0x27, 0x41, 0x76, 0xe3, 0xb4, 0xc7,
	0xb6, 0x50, 0x60, 0xd9, 0xaf, 0xea, 0x55, 0xbd, 0x7a, 0xfd, 0x60, 0xbd, 0x29, 0x75, 0x2b, 0x94,
	0x4d, 0x2f, 0x55, 0x92, 0xa4, 0xbb, 0x45, 0xd8, 0xc5, 0x1e, 0x92, 0x3a, 0x0d, 0x49, 0xa6, 0x06,
	0xbc, 0xf9, 0x61, 0x15, 0x96, 0xfb, 0x52, 0xb3, 0x7b, 0x00, 0x5c, 0x10, 0xaa, 0x76, 0xd4, 0x44,
	0x5d, 0xfe, 0xe8, 0x6c, 0x3b, 0xd5, 0xe2, 0xee, 0x25, 0xaf, 0x2f, 0xb5, 0x67, 0xf1, 0x90, 0x4e,
	0x53, 0x0c, 0xa6, 0x1a, 0x59, 0x03, 0x2e, 0xb6, 0xa5, 0x3a, 0x89, 0x54, 0x8b, 0x8b, 0x38, 0x8c,
	0x95, 0xcc, 0x52, 0x5d, 0xfe, 0x64, 0xd8, 0xd7, 0xc7, 0xec, 0xb9, 0xb2, 0x19, 0xb2, 0x69, 0xf1,
	0x27, 0x63, 0xd8, 0xfd, 0x5c, 0x80, 0x8d, 0x99, 0x55, 0xac, 0x0e, 0x6b, 0x67, 0xd0, 0x48, 0xd4,
	0x72, 0xb5, 0xb8, 0x7b, 0x6b, 0x91, 0x28, 0xfb, 0x0e, 0xbb, 0x5c, 0x53, 0x60, 0x69, 0xee, 0xcf,
	0x65, 0xb8, 0x90, 0xaf, 0xb2, 0x2a, 0x94, 0x2c, 0xc2, 0x5b, 0xe5, 0x3b, 0xdb, 0x4e, 0x75, 0xad,
	0xbe, 0xf2, 0x6e, 0x6f, 0x69, 0xd5, 0x09, 0x8a, 0x67, 0xa5, 0x46, 0x8b, 0xed, 0xc3, 0x8a, 0xa6,
	0x88, 0x70, 0xe2, 0x88, 0x77, 0x8e, 0xe5, 0xde, 0x98, 0x61, 0xce, 0x34, 0x6c, 0xf6, 0x0a, 0xd6,
	0x6d, 0x8f, 0xc2, 0xf6, 0xc4, 0xa2, 0xfb, 0xe7, 0x19, 0x97, 0x63, 0x9a, 0xb1, 0x56, 0x7e, 0x80,
	0x6d, 0xd7, 0x07, 0xb0, 0x2b, 0xd9, 0xce, 0xa2, 0xe3, 0x72, 0x57, 0xb9, 0xdf, 0x1c, 0x60, 0xf3,
	0x53, 0xd9, 0xf3, 0x99, 0x63, 0x1f, 0xfd, 0x9f, 0xba, 0xf9, 0xfb, 0xdd, 0x97, 0x39, 0x85, 0x37,
	0xa6, 0x7f, 0xd5, 0xc8, 0xb3, 0x00, 0xf3, 0x61, 0x2b, 0x11, 0x83, 0x90, 0xb7, 0xbb, 0x1a, 0xc9,
	0xf6, 0xdd, 0x1d, 0xf7, 0xb1, 0x44, 0x0c, 0x1a, 0xf9, 0x8a, 0xfb, 0x65, 0x09, 0xae, 0x2c, 0x4e,
	0x19, 0x7b, 0x0d, 0x9b, 0xb3, 0x95, 0x49, 0x8c, 0x6e, 0xff, 0x25, 0x9d, 0x73, 0xb0, 0x09, 0xd5,
	0xc6, 0x4c, 0x66, 0xdd, 0xef, 0x0e, 0x5c, 0x5e, 0xd8, 0xca, 0xae, 0x41, 0x41, 0x44, 0x3d, 0xcc,
	0x27, 0x6b, 0x0c, 0xb1, 0xc3, 0x19, 0x97, 0x1f, 0xfe, 0xb3, 0x90, 0x05, 0x06, 0x3f, 0xce, 0x19,
	0xcc, 0xa6, 0xb7, 0xff, 0x59, 0xbb, 0x03, 0x25, 0x99, 0x51, 0x9a, 0x51, 0xd8, 0xcf, 0x30, 0x9b,
	0xf8, 0x59, 0x34, 0xd8, 0xc1, 0x08, 0x7a, 0xb0, 0x07, 0xa5, 0x44, 0xa4, 0x2a, 0xec, 0x4b, 0x1d,
	0xe2, 0x80, 0xd8, 0x55, 0xef, 0x69, 0x26, 0x78, 0x8a, 0xea, 0x19, 0xd2, 0x89, 0x54, 0xc7, 0xfa,
	0x10, 0x85, 0x96, 0x4a, 0x97, 0xdf, 0x1b, 0xe5, 0x85, 0x91, 0xf2, 0x00, 0x46, 0x9c, 0x03, 0xa9,
	0xf7, 0x07, 0x54, 0x7f, 0xf3, 0x75, 0x58, 0x71, 0x7e, 0x0c, 0x2b, 0xce, 0xaf, 0x61, 0xc5, 0x79,
	0x11, 0xc4, 0x9c, 0xbc, 0xc4, 0x8c, 0xf0, 0x04, 0x92, 0xcf, 0x9b, 0x78, 0x84, 0x2a, 0xf6, 0x3b,
	0x18, 0x75, 0xa9, 0x73, 0x24, 0xa9, 0xc6, 0x45, 0x8c, 0x9a, 0x6a, 0x09, 0xf1, 0x9a, 0x88, 0x88,
	0xbf, 0x45, 0x3f, 0x3d, 0x8e, 0xfd, 0x84, 0xb8, 0x1f, 0xb5, 0xa2, 0x94, 0x50, 0x69, 0x3f, 0x4c,
	0x32, 0x21, 0xb5, 0xaf, 0x9b, 0x1d, 0xec, 0x45, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x91,
	0xdf, 0x7f, 0xd4, 0x04, 0x00, 0x00,
}

func (m *Qos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Qos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Qos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ForwardingGroups != nil {
		{
			size, err := m.ForwardingGroups.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Interfaces != nil {
		{
			size, err := m.Interfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *QosInterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosInterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosInterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCosdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *QosInterfacesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosInterfacesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosInterfacesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceRef != nil {
		{
			size, err := m.InterfaceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *QosInterfacesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosInterfacesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosInterfacesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JnxIflsetinterface != nil {
		i -= len(*m.JnxIflsetinterface)
		copy(dAtA[i:], *m.JnxIflsetinterface)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.JnxIflsetinterface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *QosForwardingGroupsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosForwardingGroupsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosForwardingGroupsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ForwardingGroup) > 0 {
		for iNdEx := len(m.ForwardingGroup) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ForwardingGroup[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCosdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *QosForwardingGroupsTypeForwardingGroupList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosForwardingGroupsTypeForwardingGroupList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosForwardingGroupsTypeForwardingGroupList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCosdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OutputQueue != nil {
		i -= len(*m.OutputQueue)
		copy(dAtA[i:], *m.OutputQueue)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.OutputQueue)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintCosdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintCosdOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovCosdOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Qos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interfaces != nil {
		l = m.Interfaces.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.ForwardingGroups != nil {
		l = m.ForwardingGroups.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosInterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovCosdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosInterfacesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.InterfaceRef != nil {
		l = m.InterfaceRef.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosInterfacesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.JnxIflsetinterface != nil {
		l = len(*m.JnxIflsetinterface)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosForwardingGroupsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ForwardingGroup) > 0 {
		for _, e := range m.ForwardingGroup {
			l = e.Size()
			n += 2 + l + sovCosdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosForwardingGroupsTypeForwardingGroupList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QosForwardingGroupsTypeForwardingGroupListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.OutputQueue != nil {
		l = len(*m.OutputQueue)
		n += 2 + l + sovCosdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCosdOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCosdOc(x uint64) (n int) {
	return sovCosdOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Qos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: qos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: qos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interfaces == nil {
				m.Interfaces = &QosInterfacesType{}
			}
			if err := m.Interfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardingGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ForwardingGroups == nil {
				m.ForwardingGroups = &QosForwardingGroupsType{}
			}
			if err := m.ForwardingGroups.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosInterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &QosInterfacesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosInterfacesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &QosInterfacesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceRef == nil {
				m.InterfaceRef = &QosInterfacesTypeInterfaceListInterfaceRefType{}
			}
			if err := m.InterfaceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosInterfacesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_ref_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_ref_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &QosInterfacesTypeInterfaceListInterfaceRefTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosInterfacesTypeInterfaceListInterfaceRefTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JnxIflsetinterface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.JnxIflsetinterface = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosForwardingGroupsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: forwarding_groups_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: forwarding_groups_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardingGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardingGroup = append(m.ForwardingGroup, &QosForwardingGroupsTypeForwardingGroupList{})
			if err := m.ForwardingGroup[len(m.ForwardingGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosForwardingGroupsTypeForwardingGroupList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: forwarding_group_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: forwarding_group_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &QosForwardingGroupsTypeForwardingGroupListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QosForwardingGroupsTypeForwardingGroupListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputQueue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCosdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCosdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OutputQueue = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCosdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCosdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCosdOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCosdOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCosdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCosdOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCosdOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCosdOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCosdOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCosdOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCosdOc = fmt.Errorf("proto: unexpected end of group")
)
