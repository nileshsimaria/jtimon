// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eventd.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosEvents struct {
	Events               *JunosEventsEventsType `protobuf:"bytes,151,opt,name=events" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *JunosEvents) Reset()         { *m = JunosEvents{} }
func (m *JunosEvents) String() string { return proto.CompactTextString(m) }
func (*JunosEvents) ProtoMessage()    {}
func (*JunosEvents) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5807bd979efd0cf, []int{0}
}
func (m *JunosEvents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosEvents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosEvents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosEvents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosEvents.Merge(m, src)
}
func (m *JunosEvents) XXX_Size() int {
	return m.Size()
}
func (m *JunosEvents) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosEvents.DiscardUnknown(m)
}

var xxx_messageInfo_JunosEvents proto.InternalMessageInfo

func (m *JunosEvents) GetEvents() *JunosEventsEventsType {
	if m != nil {
		return m.Events
	}
	return nil
}

type JunosEventsEventsType struct {
	Event                []*JunosEventsEventsTypeEventList `protobuf:"bytes,151,rep,name=event" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *JunosEventsEventsType) Reset()         { *m = JunosEventsEventsType{} }
func (m *JunosEventsEventsType) String() string { return proto.CompactTextString(m) }
func (*JunosEventsEventsType) ProtoMessage()    {}
func (*JunosEventsEventsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5807bd979efd0cf, []int{0, 0}
}
func (m *JunosEventsEventsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosEventsEventsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosEventsEventsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosEventsEventsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosEventsEventsType.Merge(m, src)
}
func (m *JunosEventsEventsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosEventsEventsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosEventsEventsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosEventsEventsType proto.InternalMessageInfo

func (m *JunosEventsEventsType) GetEvent() []*JunosEventsEventsTypeEventList {
	if m != nil {
		return m.Event
	}
	return nil
}

type JunosEventsEventsTypeEventList struct {
	Id                   *string                                         `protobuf:"bytes,51,opt,name=id" json:"id,omitempty"`
	Type                 *string                                         `protobuf:"bytes,52,opt,name=type" json:"type,omitempty"`
	Timestamp            *JunosEventsEventsTypeEventListTimestampType    `protobuf:"bytes,151,opt,name=timestamp" json:"timestamp,omitempty"`
	Priority             *string                                         `protobuf:"bytes,53,opt,name=priority" json:"priority,omitempty"`
	Facility             *string                                         `protobuf:"bytes,54,opt,name=facility" json:"facility,omitempty"`
	Pid                  *uint32                                         `protobuf:"varint,55,opt,name=pid" json:"pid,omitempty"`
	Message              *string                                         `protobuf:"bytes,56,opt,name=message" json:"message,omitempty"`
	Daemon               *string                                         `protobuf:"bytes,57,opt,name=daemon" json:"daemon,omitempty"`
	Hostname             *string                                         `protobuf:"bytes,58,opt,name=hostname" json:"hostname,omitempty"`
	Lsname               *string                                         `protobuf:"bytes,59,opt,name=lsname" json:"lsname,omitempty"`
	Attributes           []*JunosEventsEventsTypeEventListAttributesList `protobuf:"bytes,152,rep,name=attributes" json:"attributes,omitempty"`
	Logoptions           *int32                                          `protobuf:"varint,60,opt,name=logoptions" json:"logoptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *JunosEventsEventsTypeEventList) Reset()         { *m = JunosEventsEventsTypeEventList{} }
func (m *JunosEventsEventsTypeEventList) String() string { return proto.CompactTextString(m) }
func (*JunosEventsEventsTypeEventList) ProtoMessage()    {}
func (*JunosEventsEventsTypeEventList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5807bd979efd0cf, []int{0, 0, 0}
}
func (m *JunosEventsEventsTypeEventList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosEventsEventsTypeEventList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosEventsEventsTypeEventList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosEventsEventsTypeEventList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosEventsEventsTypeEventList.Merge(m, src)
}
func (m *JunosEventsEventsTypeEventList) XXX_Size() int {
	return m.Size()
}
func (m *JunosEventsEventsTypeEventList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosEventsEventsTypeEventList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosEventsEventsTypeEventList proto.InternalMessageInfo

func (m *JunosEventsEventsTypeEventList) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetTimestamp() *JunosEventsEventsTypeEventListTimestampType {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *JunosEventsEventsTypeEventList) GetPriority() string {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetFacility() string {
	if m != nil && m.Facility != nil {
		return *m.Facility
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetPid() uint32 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *JunosEventsEventsTypeEventList) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetDaemon() string {
	if m != nil && m.Daemon != nil {
		return *m.Daemon
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetLsname() string {
	if m != nil && m.Lsname != nil {
		return *m.Lsname
	}
	return ""
}

func (m *JunosEventsEventsTypeEventList) GetAttributes() []*JunosEventsEventsTypeEventListAttributesList {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *JunosEventsEventsTypeEventList) GetLogoptions() int32 {
	if m != nil && m.Logoptions != nil {
		return *m.Logoptions
	}
	return 0
}

type JunosEventsEventsTypeEventListTimestampType struct {
	Seconds              *uint32  `protobuf:"varint,51,opt,name=seconds" json:"seconds,omitempty"`
	Microseconds         *uint32  `protobuf:"varint,52,opt,name=microseconds" json:"microseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosEventsEventsTypeEventListTimestampType) Reset() {
	*m = JunosEventsEventsTypeEventListTimestampType{}
}
func (m *JunosEventsEventsTypeEventListTimestampType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosEventsEventsTypeEventListTimestampType) ProtoMessage() {}
func (*JunosEventsEventsTypeEventListTimestampType) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5807bd979efd0cf, []int{0, 0, 0, 0}
}
func (m *JunosEventsEventsTypeEventListTimestampType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosEventsEventsTypeEventListTimestampType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosEventsEventsTypeEventListTimestampType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosEventsEventsTypeEventListTimestampType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosEventsEventsTypeEventListTimestampType.Merge(m, src)
}
func (m *JunosEventsEventsTypeEventListTimestampType) XXX_Size() int {
	return m.Size()
}
func (m *JunosEventsEventsTypeEventListTimestampType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosEventsEventsTypeEventListTimestampType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosEventsEventsTypeEventListTimestampType proto.InternalMessageInfo

func (m *JunosEventsEventsTypeEventListTimestampType) GetSeconds() uint32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *JunosEventsEventsTypeEventListTimestampType) GetMicroseconds() uint32 {
	if m != nil && m.Microseconds != nil {
		return *m.Microseconds
	}
	return 0
}

type JunosEventsEventsTypeEventListAttributesList struct {
	Key                  *string  `protobuf:"bytes,51,opt,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,52,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosEventsEventsTypeEventListAttributesList) Reset() {
	*m = JunosEventsEventsTypeEventListAttributesList{}
}
func (m *JunosEventsEventsTypeEventListAttributesList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosEventsEventsTypeEventListAttributesList) ProtoMessage() {}
func (*JunosEventsEventsTypeEventListAttributesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5807bd979efd0cf, []int{0, 0, 0, 1}
}
func (m *JunosEventsEventsTypeEventListAttributesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosEventsEventsTypeEventListAttributesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosEventsEventsTypeEventListAttributesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosEventsEventsTypeEventListAttributesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosEventsEventsTypeEventListAttributesList.Merge(m, src)
}
func (m *JunosEventsEventsTypeEventListAttributesList) XXX_Size() int {
	return m.Size()
}
func (m *JunosEventsEventsTypeEventListAttributesList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosEventsEventsTypeEventListAttributesList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosEventsEventsTypeEventListAttributesList proto.InternalMessageInfo

func (m *JunosEventsEventsTypeEventListAttributesList) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *JunosEventsEventsTypeEventListAttributesList) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

var E_JnprJunosEventsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosEvents)(nil),
	Field:         42,
	Name:          "jnpr_junos_events_ext",
	Tag:           "bytes,42,opt,name=jnpr_junos_events_ext",
	Filename:      "eventd.proto",
}

func init() {
	proto.RegisterType((*JunosEvents)(nil), "junos_events")
	proto.RegisterType((*JunosEventsEventsType)(nil), "junos_events.events_type")
	proto.RegisterType((*JunosEventsEventsTypeEventList)(nil), "junos_events.events_type.event_list")
	proto.RegisterType((*JunosEventsEventsTypeEventListTimestampType)(nil), "junos_events.events_type.event_list.timestamp_type")
	proto.RegisterType((*JunosEventsEventsTypeEventListAttributesList)(nil), "junos_events.events_type.event_list.attributes_list")
	proto.RegisterExtension(E_JnprJunosEventsExt)
}

func init() { proto.RegisterFile("eventd.proto", fileDescriptor_d5807bd979efd0cf) }

var fileDescriptor_d5807bd979efd0cf = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xdc, 0x3c,
	0x14, 0x55, 0x80, 0xf0, 0xc1, 0xe5, 0xe7, 0xab, 0xdc, 0x1f, 0xdc, 0x2c, 0x46, 0x23, 0xd4, 0xc5,
	0xa8, 0x12, 0x89, 0x04, 0xf4, 0x0f, 0xba, 0x40, 0x48, 0x6c, 0x58, 0xb0, 0x48, 0xd5, 0x45, 0xbb,
	0x49, 0xcd, 0xe4, 0x36, 0xe3, 0x21, 0xb1, 0x23, 0xfb, 0x0e, 0x65, 0xb6, 0x5d, 0xf6, 0x05, 0xda,
	0x97, 0xe9, 0xbe, 0xbb, 0xf6, 0x11, 0x2a, 0x9e, 0xa4, 0xb2, 0x4d, 0x60, 0xa8, 0x54, 0x89, 0x55,
	0xee, 0x39, 0xc7, 0xe7, 0xc4, 0xf7, 0xfa, 0xc2, 0x2a, 0x9e, 0xa3, 0xa2, 0x32, 0x6d, 0x8d, 0x26,
	0x9d, 0xdc, 0x27, 0xac, 0xb1, 0x41, 0x32, 0xd3, 0x82, 0x74, 0x1b, 0xc8, 0xcd, 0x9f, 0x31, 0xac,
	0x8e, 0x27, 0x4a, 0xdb, 0xc2, 0x9f, 0xb5, 0x6c, 0x1b, 0x16, 0x43, 0xc5, 0xbf, 0x46, 0xfd, 0x68,
	0xb0, 0xb2, 0xfd, 0x38, 0x9d, 0xd5, 0xd3, 0xf0, 0x29, 0x68, 0xda, 0x62, 0x7e, 0x75, 0x32, 0xf9,
	0x12, 0xc3, 0xca, 0x0c, 0xcf, 0xf6, 0x21, 0xf6, 0xd0, 0x45, 0xcc, 0x0f, 0x56, 0xb6, 0x9f, 0xfc,
	0x33, 0x22, 0xd4, 0x45, 0x2d, 0x2d, 0xe5, 0xc1, 0x93, 0x7c, 0x5f, 0x00, 0xb8, 0x61, 0xd9, 0x3a,
	0xcc, 0xc9, 0x92, 0xef, 0xf4, 0xa3, 0xc1, 0x72, 0x3e, 0x27, 0x4b, 0xc6, 0x60, 0xc1, 0x19, 0xf9,
	0xae, 0x67, 0x7c, 0xcd, 0x72, 0x58, 0x26, 0xd9, 0xa0, 0x25, 0xd1, 0xb4, 0xdd, 0xb5, 0x77, 0xee,
	0xf2, 0xcf, 0xf4, 0xda, 0x16, 0x1a, 0xba, 0x89, 0x61, 0x09, 0x2c, 0xb5, 0x46, 0x6a, 0x23, 0x69,
	0xca, 0x9f, 0xf9, 0x7f, 0x5d, 0x63, 0xa7, 0x7d, 0x14, 0x43, 0x59, 0x3b, 0xed, 0x79, 0xd0, 0x3a,
	0xcc, 0xee, 0xc1, 0x7c, 0x2b, 0x4b, 0xfe, 0xa2, 0x1f, 0x0d, 0xd6, 0x72, 0x57, 0x32, 0x0e, 0xff,
	0x35, 0x68, 0xad, 0xa8, 0x90, 0xbf, 0xf4, 0x87, 0x3b, 0xc8, 0x1e, 0xc1, 0x62, 0x29, 0xb0, 0xd1,
	0x8a, 0xbf, 0xf2, 0xc2, 0x15, 0x72, 0xf9, 0x23, 0x6d, 0x49, 0x89, 0x06, 0xf9, 0x5e, 0xc8, 0xef,
	0xb0, 0xf3, 0xd4, 0xd6, 0x2b, 0xfb, 0xc1, 0x13, 0x10, 0x7b, 0x0b, 0x20, 0x88, 0x8c, 0x3c, 0x9d,
	0x10, 0x5a, 0xfe, 0x2d, 0x0c, 0x7e, 0xf7, 0x4e, 0x43, 0xb8, 0xf1, 0x85, 0x87, 0x98, 0x09, 0x62,
	0x3d, 0x80, 0x5a, 0x57, 0xba, 0x25, 0xa9, 0x95, 0xe5, 0xaf, 0xfb, 0xd1, 0x20, 0xce, 0x67, 0x98,
	0xe4, 0x04, 0xd6, 0x6f, 0xcf, 0xd0, 0xb5, 0x6b, 0x71, 0xa8, 0x55, 0x69, 0xfd, 0xab, 0xad, 0xe5,
	0x1d, 0x64, 0x9b, 0xb0, 0xda, 0xc8, 0xa1, 0xd1, 0x9d, 0xbc, 0xeb, 0xe5, 0x5b, 0x5c, 0x72, 0x00,
	0xff, 0xff, 0x75, 0x1d, 0xb6, 0x01, 0xf3, 0x67, 0x38, 0x0d, 0x2b, 0x70, 0x18, 0x7f, 0x3e, 0x98,
	0x5b, 0x8a, 0x72, 0xc7, 0xb0, 0x07, 0x10, 0x9f, 0x8b, 0x7a, 0xd2, 0xed, 0x42, 0x00, 0x7b, 0xef,
	0xe0, 0xe1, 0x58, 0xb5, 0xa6, 0x98, 0xed, 0xbc, 0xc0, 0x0b, 0x62, 0x1b, 0xe9, 0xf1, 0x44, 0xc9,
	0x16, 0xcd, 0x09, 0xd2, 0x27, 0x6d, 0xce, 0xec, 0x1b, 0x54, 0x56, 0x1b, 0xcb, 0x9f, 0xfa, 0x85,
	0x59, 0xbb, 0x35, 0xab, 0x9c, 0xb9, 0x90, 0x63, 0xc7, 0x1c, 0x79, 0xe2, 0xe8, 0x82, 0x0e, 0x3f,
	0xfc, 0xb8, 0xec, 0x45, 0xbf, 0x2e, 0x7b, 0xd1, 0xef, 0xcb, 0x5e, 0xf4, 0x3e, 0xaf, 0x24, 0x39,
	0x8f, 0x8b, 0x4c, 0x15, 0x52, 0x26, 0x87, 0x78, 0x8a, 0xa6, 0xca, 0x46, 0x28, 0x6a, 0x1a, 0x9d,
	0x6a, 0xda, 0x92, 0xaa, 0x42, 0x4b, 0x5b, 0x63, 0x92, 0x5b, 0x4a, 0x90, 0x3c, 0xc7, 0xac, 0x3d,
	0xab, 0xb2, 0x31, 0xc9, 0x4c, 0x94, 0xa2, 0x25, 0x34, 0x36, 0x0b, 0xf7, 0xcc, 0xec, 0x70, 0x84,
	0x8d, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x51, 0xe2, 0x96, 0xb2, 0x03, 0x00, 0x00,
}

func (m *JunosEvents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosEvents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosEvents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Events != nil {
		{
			size, err := m.Events.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEventd(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosEventsEventsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosEventsEventsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosEventsEventsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Event) > 0 {
		for iNdEx := len(m.Event) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Event[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintEventd(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosEventsEventsTypeEventList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosEventsEventsTypeEventList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosEventsEventsTypeEventList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Attributes) > 0 {
		for iNdEx := len(m.Attributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintEventd(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xc2
		}
	}
	if m.Timestamp != nil {
		{
			size, err := m.Timestamp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEventd(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Logoptions != nil {
		i = encodeVarintEventd(dAtA, i, uint64(*m.Logoptions))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.Lsname != nil {
		i -= len(*m.Lsname)
		copy(dAtA[i:], *m.Lsname)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Lsname)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xda
	}
	if m.Hostname != nil {
		i -= len(*m.Hostname)
		copy(dAtA[i:], *m.Hostname)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Hostname)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd2
	}
	if m.Daemon != nil {
		i -= len(*m.Daemon)
		copy(dAtA[i:], *m.Daemon)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Daemon)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if m.Message != nil {
		i -= len(*m.Message)
		copy(dAtA[i:], *m.Message)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Message)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.Pid != nil {
		i = encodeVarintEventd(dAtA, i, uint64(*m.Pid))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Facility != nil {
		i -= len(*m.Facility)
		copy(dAtA[i:], *m.Facility)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Facility)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.Priority != nil {
		i -= len(*m.Priority)
		copy(dAtA[i:], *m.Priority)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Priority)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *JunosEventsEventsTypeEventListTimestampType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosEventsEventsTypeEventListTimestampType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosEventsEventsTypeEventListTimestampType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Microseconds != nil {
		i = encodeVarintEventd(dAtA, i, uint64(*m.Microseconds))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Seconds != nil {
		i = encodeVarintEventd(dAtA, i, uint64(*m.Seconds))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosEventsEventsTypeEventListAttributesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosEventsEventsTypeEventListAttributesList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosEventsEventsTypeEventListAttributesList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Key != nil {
		i -= len(*m.Key)
		copy(dAtA[i:], *m.Key)
		i = encodeVarintEventd(dAtA, i, uint64(len(*m.Key)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintEventd(dAtA []byte, offset int, v uint64) int {
	offset -= sovEventd(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosEvents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Events != nil {
		l = m.Events.Size()
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosEventsEventsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Event) > 0 {
		for _, e := range m.Event {
			l = e.Size()
			n += 2 + l + sovEventd(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosEventsEventsTypeEventList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Priority != nil {
		l = len(*m.Priority)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Facility != nil {
		l = len(*m.Facility)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Pid != nil {
		n += 2 + sovEventd(uint64(*m.Pid))
	}
	if m.Message != nil {
		l = len(*m.Message)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Daemon != nil {
		l = len(*m.Daemon)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Hostname != nil {
		l = len(*m.Hostname)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Lsname != nil {
		l = len(*m.Lsname)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Logoptions != nil {
		n += 2 + sovEventd(uint64(*m.Logoptions))
	}
	if m.Timestamp != nil {
		l = m.Timestamp.Size()
		n += 2 + l + sovEventd(uint64(l))
	}
	if len(m.Attributes) > 0 {
		for _, e := range m.Attributes {
			l = e.Size()
			n += 2 + l + sovEventd(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosEventsEventsTypeEventListTimestampType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Seconds != nil {
		n += 2 + sovEventd(uint64(*m.Seconds))
	}
	if m.Microseconds != nil {
		n += 2 + sovEventd(uint64(*m.Microseconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosEventsEventsTypeEventListAttributesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = len(*m.Key)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovEventd(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEventd(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEventd(x uint64) (n int) {
	return sovEventd(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosEvents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_events: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_events: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Events == nil {
				m.Events = &JunosEventsEventsType{}
			}
			if err := m.Events.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEventd(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosEventsEventsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: events_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: events_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Event", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Event = append(m.Event, &JunosEventsEventsTypeEventList{})
			if err := m.Event[len(m.Event)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEventd(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosEventsEventsTypeEventList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: event_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: event_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Priority = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Facility", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Facility = &s
			iNdEx = postIndex
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Pid = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Message = &s
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Daemon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Daemon = &s
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Hostname = &s
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lsname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Lsname = &s
			iNdEx = postIndex
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Logoptions", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Logoptions = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Timestamp == nil {
				m.Timestamp = &JunosEventsEventsTypeEventListTimestampType{}
			}
			if err := m.Timestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attributes = append(m.Attributes, &JunosEventsEventsTypeEventListAttributesList{})
			if err := m.Attributes[len(m.Attributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEventd(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosEventsEventsTypeEventListTimestampType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: timestamp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: timestamp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Seconds = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Microseconds", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Microseconds = &v
		default:
			iNdEx = preIndex
			skippy, err := skipEventd(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosEventsEventsTypeEventListAttributesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: attributes_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: attributes_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Key = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEventd
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEventd
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEventd(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEventd
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEventd(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEventd
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEventd
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEventd
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEventd
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEventd
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEventd        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEventd          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEventd = fmt.Errorf("proto: unexpected end of group")
)
