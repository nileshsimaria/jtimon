// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fibtd-telemetry_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstances struct {
	NetworkInstance      []*NetworkInstancesNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *NetworkInstances) Reset()         { *m = NetworkInstances{} }
func (m *NetworkInstances) String() string { return proto.CompactTextString(m) }
func (*NetworkInstances) ProtoMessage()    {}
func (*NetworkInstances) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0}
}
func (m *NetworkInstances) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances.Merge(m, src)
}
func (m *NetworkInstances) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances proto.InternalMessageInfo

func (m *NetworkInstances) GetNetworkInstance() []*NetworkInstancesNetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesNetworkInstanceList struct {
	Name                 *string                                      `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Afts                 *NetworkInstancesNetworkInstanceListAftsType `protobuf:"bytes,151,opt,name=afts" json:"afts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceList) Reset()         { *m = NetworkInstancesNetworkInstanceList{} }
func (m *NetworkInstancesNetworkInstanceList) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesNetworkInstanceList) ProtoMessage()    {}
func (*NetworkInstancesNetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0}
}
func (m *NetworkInstancesNetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceList) GetAfts() *NetworkInstancesNetworkInstanceListAftsType {
	if m != nil {
		return m.Afts
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsType struct {
	Ipv4Unicast          *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType   `protobuf:"bytes,151,opt,name=ipv4_unicast,json=ipv4Unicast" json:"ipv4_unicast,omitempty"`
	Ipv6Unicast          *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType   `protobuf:"bytes,152,opt,name=ipv6_unicast,json=ipv6Unicast" json:"ipv6_unicast,omitempty"`
	Mpls                 *NetworkInstancesNetworkInstanceListAftsTypeMplsType          `protobuf:"bytes,153,opt,name=mpls" json:"mpls,omitempty"`
	NextHopGroups        *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType `protobuf:"bytes,154,opt,name=next_hop_groups,json=nextHopGroups" json:"next_hop_groups,omitempty"`
	NextHops             *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType      `protobuf:"bytes,155,opt,name=next_hops,json=nextHops" json:"next_hops,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsType) GetIpv4Unicast() *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType {
	if m != nil {
		return m.Ipv4Unicast
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) GetIpv6Unicast() *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType {
	if m != nil {
		return m.Ipv6Unicast
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) GetMpls() *NetworkInstancesNetworkInstanceListAftsTypeMplsType {
	if m != nil {
		return m.Mpls
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) GetNextHopGroups() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType {
	if m != nil {
		return m.NextHopGroups
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) GetNextHops() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType {
	if m != nil {
		return m.NextHops
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType struct {
	Ipv4Entry            []*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList `protobuf:"bytes,151,rep,name=ipv4_entry,json=ipv4Entry" json:"ipv4_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                     `json:"-"`
	XXX_sizecache        int32                                                                      `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) GetIpv4Entry() []*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList {
	if m != nil {
		return m.Ipv4Entry
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList struct {
	Prefix               *string                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                            `json:"-"`
	XXX_sizecache        int32                                                                             `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType struct {
	Prefix               *string  `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	NextHopGroup         *uint64  `protobuf:"varint,52,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) GetNextHopGroup() uint64 {
	if m != nil && m.NextHopGroup != nil {
		return *m.NextHopGroup
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType struct {
	Ipv6Entry            []*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList `protobuf:"bytes,151,rep,name=ipv6_entry,json=ipv6Entry" json:"ipv6_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                     `json:"-"`
	XXX_sizecache        int32                                                                      `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 1}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) GetIpv6Entry() []*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList {
	if m != nil {
		return m.Ipv6Entry
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList struct {
	Prefix               *string                                                                           `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                            `json:"-"`
	XXX_sizecache        int32                                                                             `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 1, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType struct {
	Prefix               *string  `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	NextHopGroup         *uint64  `protobuf:"varint,52,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) GetNextHopGroup() uint64 {
	if m != nil && m.NextHopGroup != nil {
		return *m.NextHopGroup
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeMplsType struct {
	LabelEntry           []*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList `protobuf:"bytes,151,rep,name=label_entry,json=labelEntry" json:"label_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                             `json:"-"`
	XXX_unrecognized     []byte                                                               `json:"-"`
	XXX_sizecache        int32                                                                `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeMplsType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 2}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) GetLabelEntry() []*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList {
	if m != nil {
		return m.LabelEntry
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList struct {
	Label                *string                                                                     `protobuf:"bytes,51,opt,name=label" json:"label,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                      `json:"-"`
	XXX_sizecache        int32                                                                       `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 2, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType struct {
	Label                *string  `protobuf:"bytes,51,opt,name=label" json:"label,omitempty"`
	NextHopGroup         *uint64  `protobuf:"varint,52,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	PoppedMplsLabelStack []string `protobuf:"bytes,53,rep,name=popped_mpls_label_stack,json=poppedMplsLabelStack" json:"popped_mpls_label_stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) GetNextHopGroup() uint64 {
	if m != nil && m.NextHopGroup != nil {
		return *m.NextHopGroup
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) GetPoppedMplsLabelStack() []string {
	if m != nil {
		return m.PoppedMplsLabelStack
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType struct {
	NextHopGroup         []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList `protobuf:"bytes,151,rep,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                          `json:"-"`
	XXX_sizecache        int32                                                                           `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) GetNextHopGroup() []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList {
	if m != nil {
		return m.NextHopGroup
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList struct {
	Id                   *uint64                                                                                      `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType       `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	NextHops             *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType    `protobuf:"bytes,152,opt,name=next_hops,json=nextHops" json:"next_hops,omitempty"`
	Conditional          *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType `protobuf:"bytes,53,opt,name=conditional" json:"conditional,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                        `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) GetNextHops() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType {
	if m != nil {
		return m.NextHops
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) GetConditional() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType {
	if m != nil {
		return m.Conditional
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType struct {
	Id                   *uint64  `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType struct {
	NextHop              []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList `protobuf:"bytes,151,rep,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                  `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 1}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) GetNextHop() []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList struct {
	Index                *uint64                                                                                                       `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                         `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 1, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType struct {
	Index                *uint64  `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	Weight               *uint64  `protobuf:"varint,52,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 1, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) GetWeight() uint64 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType struct {
	Condition            []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList `protobuf:"bytes,54,rep,name=condition" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                       `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) GetCondition() []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList {
	if m != nil {
		return m.Condition
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList struct {
	Id                   *uint64                                                                                                                      `protobuf:"varint,55,opt,name=id" json:"id,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType           `protobuf:"bytes,56,opt,name=state" json:"state,omitempty"`
	InputInterfaces      *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType `protobuf:"bytes,60,opt,name=input_interfaces,json=inputInterfaces" json:"input_interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) GetInputInterfaces() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType {
	if m != nil {
		return m.InputInterfaces
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType struct {
	Id                   *uint64  `protobuf:"varint,57,opt,name=id" json:"id,omitempty"`
	Dscp                 []uint32 `protobuf:"varint,58,rep,name=dscp" json:"dscp,omitempty"`
	NextHopGroup         *uint64  `protobuf:"varint,59,opt,name=next_hop_group,json=nextHopGroup" json:"next_hop_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) GetDscp() []uint32 {
	if m != nil {
		return m.Dscp
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) GetNextHopGroup() uint64 {
	if m != nil && m.NextHopGroup != nil {
		return *m.NextHopGroup
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType struct {
	InputInterface       []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList `protobuf:"bytes,61,rep,name=input_interface,json=inputInterface" json:"input_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2, 0, 1}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) GetInputInterface() []*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList {
	if m != nil {
		return m.InputInterface
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList struct {
	Id                   *string                                                                                                                                                 `protobuf:"bytes,62,opt,name=id" json:"id,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType `protobuf:"bytes,63,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2, 0, 1, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType struct {
	Id                   *string  `protobuf:"bytes,64,opt,name=id" json:"id,omitempty"`
	Interface            *string  `protobuf:"bytes,65,opt,name=interface" json:"interface,omitempty"`
	Subinterface         *uint32  `protobuf:"varint,66,opt,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 3, 0, 2, 0, 1, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) GetSubinterface() uint32 {
	if m != nil && m.Subinterface != nil {
		return *m.Subinterface
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsType struct {
	NextHop              []*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList `protobuf:"bytes,151,rep,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                `json:"-"`
	XXX_sizecache        int32                                                                 `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) GetNextHop() []*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList struct {
	Index                *uint64                                                                             `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	InterfaceRef         *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType `protobuf:"bytes,153,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	Juniper              *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType      `protobuf:"bytes,152,opt,name=juniper" json:"juniper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                              `json:"-"`
	XXX_sizecache        int32                                                                               `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) GetInterfaceRef() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) GetJuniper() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType {
	if m != nil {
		return m.Juniper
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType struct {
	Index                *uint64  `protobuf:"varint,54,opt,name=index" json:"index,omitempty"`
	IpAddress            *string  `protobuf:"bytes,51,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	MacAddress           *string  `protobuf:"bytes,52,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	PushedMplsLabelStack []string `protobuf:"bytes,53,rep,name=pushed_mpls_label_stack,json=pushedMplsLabelStack" json:"pushed_mpls_label_stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) ProtoMessage() {}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) GetIpAddress() string {
	if m != nil && m.IpAddress != nil {
		return *m.IpAddress
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) GetMacAddress() string {
	if m != nil && m.MacAddress != nil {
		return *m.MacAddress
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) GetPushedMplsLabelStack() []string {
	if m != nil {
		return m.PushedMplsLabelStack
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType struct {
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                        `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0, 1}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType struct {
	Interface            *string  `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	Subinterface         *uint32  `protobuf:"varint,52,opt,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0, 1, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) GetSubinterface() uint32 {
	if m != nil && m.Subinterface != nil {
		return *m.Subinterface
	}
	return 0
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType struct {
	State                *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0, 2}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) GetState() *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType struct {
	UnmappedNexthop      *bool    `protobuf:"varint,51,opt,name=unmapped_nexthop,json=unmappedNexthop" json:"unmapped_nexthop,omitempty"`
	MappedNextHopIndex   []uint64 `protobuf:"varint,52,rep,name=mapped_next_hop_index,json=mappedNextHopIndex" json:"mapped_next_hop_index,omitempty"`
	LspId                *uint32  `protobuf:"varint,53,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) Reset() {
	*m = NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType{}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bef6d0266d7cc46, []int{0, 0, 0, 4, 0, 2, 0}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) GetUnmappedNexthop() bool {
	if m != nil && m.UnmappedNexthop != nil {
		return *m.UnmappedNexthop
	}
	return false
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) GetMappedNextHopIndex() []uint64 {
	if m != nil {
		return m.MappedNextHopIndex
	}
	return nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) GetLspId() uint32 {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return 0
}

var E_JnprNetworkInstancesExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstances)(nil),
	Field:         117,
	Name:          "jnpr_network_instances_ext",
	Tag:           "bytes,117,opt,name=jnpr_network_instances_ext",
	Filename:      "fibtd-telemetry_oc.proto",
}

func init() {
	proto.RegisterType((*NetworkInstances)(nil), "network_instances")
	proto.RegisterType((*NetworkInstancesNetworkInstanceList)(nil), "network_instances.network_instance_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsType)(nil), "network_instances.network_instance_list.afts_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType)(nil), "network_instances.network_instance_list.afts_type.ipv4_unicast_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList)(nil), "network_instances.network_instance_list.afts_type.ipv4_unicast_type.ipv4_entry_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType)(nil), "network_instances.network_instance_list.afts_type.ipv4_unicast_type.ipv4_entry_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType)(nil), "network_instances.network_instance_list.afts_type.ipv6_unicast_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList)(nil), "network_instances.network_instance_list.afts_type.ipv6_unicast_type.ipv6_entry_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType)(nil), "network_instances.network_instance_list.afts_type.ipv6_unicast_type.ipv6_entry_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeMplsType)(nil), "network_instances.network_instance_list.afts_type.mpls_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList)(nil), "network_instances.network_instance_list.afts_type.mpls_type.label_entry_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType)(nil), "network_instances.network_instance_list.afts_type.mpls_type.label_entry_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.next_hops_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.next_hops_type.next_hop_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.next_hops_type.next_hop_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type.condition_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type.condition_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type.condition_list.input_interfaces_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type.condition_list.input_interfaces_type.input_interface_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType)(nil), "network_instances.network_instance_list.afts_type.next_hop_groups_type.next_hop_group_list.conditional_type.condition_list.input_interfaces_type.input_interface_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list.interface_ref_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list.interface_ref_type.state_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list.juniper_type")
	proto.RegisterType((*NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType)(nil), "network_instances.network_instance_list.afts_type.next_hops_type.next_hop_list.juniper_type.state_type")
	proto.RegisterExtension(E_JnprNetworkInstancesExt)
}

func init() { proto.RegisterFile("fibtd-telemetry_oc.proto", fileDescriptor_5bef6d0266d7cc46) }

var fileDescriptor_5bef6d0266d7cc46 = []byte{
	// 1305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdf, 0x8f, 0x13, 0xd5,
	0x17, 0xcf, 0xb4, 0x5d, 0x68, 0x4f, 0xb7, 0xbb, 0xe5, 0xb2, 0x0b, 0xf3, 0x9d, 0x2f, 0x60, 0x43,
	0x7c, 0x28, 0x24, 0xdb, 0x46, 0x58, 0xaa, 0x22, 0x2a, 0x10, 0x09, 0x2c, 0x91, 0x35, 0x0e, 0x68,
	0x0c, 0x1a, 0xc7, 0x69, 0xe7, 0xb6, 0x9d, 0x6e, 0x3b, 0x73, 0x9d, 0x7b, 0x0b, 0x25, 0xc6, 0x5f,
	0xa8, 0xe8, 0x93, 0x09, 0xc6, 0x44, 0x91, 0x98, 0xe8, 0x8b, 0xbe, 0xea, 0x1f, 0xe0, 0x0b, 0x89,
	0x09, 0x8f, 0x3c, 0xf2, 0x68, 0xf6, 0xd5, 0x27, 0xa3, 0x7f, 0x80, 0x99, 0x7b, 0xe7, 0x47, 0xe7,
	0x07, 0x08, 0x6c, 0xbb, 0xab, 0x6f, 0xdb, 0xcf, 0xbd, 0x7b, 0x3e, 0xe7, 0x9c, 0xcf, 0xb9, 0xe7,
	0x9c, 0x16, 0xe4, 0xb6, 0xd9, 0x64, 0xc6, 0x12, 0xc3, 0x7d, 0x3c, 0xc0, 0xcc, 0xb9, 0xa2, 0xd9,
	0xad, 0x1a, 0x71, 0x6c, 0x66, 0x2b, 0x3b, 0x43, 0x8c, 0xd9, 0x44, 0x80, 0xfb, 0xff, 0x38, 0x08,
	0x3b, 0x2c, 0xcc, 0x2e, 0xdb, 0xce, 0x9a, 0x66, 0x5a, 0x94, 0xe9, 0x56, 0x0b, 0x53, 0x74, 0x01,
	0xca, 0x71, 0x50, 0xfe, 0x4a, 0xaa, 0x64, 0xab, 0xc5, 0x43, 0xd5, 0x5a, 0xe2, 0x7a, 0x02, 0xd1,
	0xfa, 0x26, 0x65, 0xea, 0xbc, 0x07, 0xaf, 0x78, 0xa8, 0xf2, 0xc9, 0x41, 0x58, 0x4c, 0xbd, 0x8a,
	0xfe, 0x07, 0x39, 0x4b, 0x1f, 0x60, 0xf9, 0x70, 0x45, 0xaa, 0x16, 0x4e, 0xce, 0x5c, 0x3d, 0x9e,
	0xc9, 0x4b, 0x2a, 0x87, 0xd0, 0x69, 0xc8, 0xe9, 0x6d, 0x46, 0x5d, 0x7a, 0xa9, 0x5a, 0x3c, 0x74,
	0xe8, 0x41, 0xe9, 0x6b, 0xee, 0x7f, 0x69, 0xec, 0x0a, 0xc1, 0x2a, 0x37, 0xa0, 0x7c, 0x7a, 0x00,
	0x0a, 0x01, 0x86, 0xba, 0x30, 0x6b, 0x92, 0x4b, 0xcb, 0xda, 0xd0, 0x32, 0x5b, 0x3a, 0x65, 0xbe,
	0xf9, 0x17, 0x1e, 0xde, 0x7c, 0x6d, 0xdc, 0x8e, 0x20, 0x2c, 0xba, 0xd0, 0x2b, 0x02, 0xf1, 0x98,
	0x1a, 0x01, 0xd3, 0xd7, 0x1b, 0x62, 0x6a, 0x24, 0x99, 0x1a, 0x3e, 0xd3, 0xcb, 0x90, 0x1b, 0x90,
	0x3e, 0x95, 0x6f, 0x08, 0x86, 0x63, 0x8f, 0xc0, 0xe0, 0xfe, 0xbf, 0x97, 0x34, 0xf7, 0x4f, 0x44,
	0x60, 0xde, 0xc2, 0x23, 0xa6, 0x75, 0x6d, 0xa2, 0x75, 0x1c, 0x7b, 0x48, 0xa8, 0xfc, 0x8d, 0xb0,
	0x7e, 0xfa, 0x11, 0xac, 0xc7, 0x4c, 0x09, 0xa2, 0x92, 0x8b, 0x9e, 0xb1, 0xc9, 0x69, 0x8e, 0x21,
	0x0d, 0x0a, 0xfe, 0x35, 0x2a, 0xdf, 0x14, 0x5c, 0x27, 0x36, 0xc0, 0xe5, 0xb1, 0xe4, 0x3d, 0x16,
	0xaa, 0x7c, 0x90, 0x85, 0x1d, 0x09, 0xc9, 0x10, 0x03, 0xe0, 0x20, 0xb6, 0x98, 0x73, 0xc5, 0xaf,
	0xf5, 0x0b, 0x93, 0xa8, 0x86, 0x5a, 0x68, 0x57, 0xbc, 0x8b, 0x82, 0x0b, 0x9c, 0x72, 0x3f, 0x2b,
	0x7f, 0x49, 0x30, 0x1f, 0x3b, 0x46, 0x7b, 0x61, 0x1b, 0x71, 0x70, 0xdb, 0x1c, 0x45, 0x5f, 0x83,
	0x07, 0xa2, 0x4b, 0x30, 0x43, 0x99, 0xce, 0xb0, 0x5f, 0xb1, 0xda, 0x34, 0x7c, 0xac, 0x71, 0x0a,
	0x91, 0x39, 0x41, 0xa7, 0x9c, 0x05, 0x08, 0x41, 0xb4, 0x2b, 0xea, 0x64, 0xe0, 0xdd, 0xe3, 0x30,
	0x17, 0x15, 0x59, 0x5e, 0xae, 0x48, 0xd5, 0x9c, 0x3a, 0x3b, 0x2e, 0xb2, 0x2f, 0x41, 0x23, 0x4d,
	0x82, 0xc6, 0x44, 0x24, 0x68, 0x24, 0xc2, 0x6b, 0xc4, 0x25, 0x68, 0x44, 0x24, 0x68, 0x6c, 0xbe,
	0x04, 0xf7, 0xf7, 0x71, 0xca, 0x12, 0x7c, 0x97, 0x85, 0x42, 0xf0, 0xd8, 0x91, 0x0d, 0xc5, 0xbe,
	0xde, 0xc4, 0xfd, 0x68, 0xee, 0xcf, 0x6d, 0xa4, 0x81, 0xd4, 0xc6, 0x0c, 0x8a, 0xa4, 0x03, 0x47,
	0x44, 0xd6, 0xbf, 0xcf, 0x40, 0x39, 0x7e, 0x01, 0xfd, 0x1f, 0x66, 0x38, 0x16, 0xcd, 0xba, 0xc0,
	0x90, 0x1d, 0x4b, 0xfa, 0x6b, 0x13, 0x75, 0x2e, 0x25, 0xdb, 0xef, 0x47, 0xb2, 0xbd, 0x10, 0xf1,
	0xcd, 0x77, 0xea, 0x81, 0x72, 0x8d, 0x8e, 0xc0, 0x6e, 0x62, 0x13, 0x82, 0x0d, 0x8d, 0x3b, 0x20,
	0xb8, 0x29, 0xd3, 0x5b, 0x6b, 0xf2, 0x91, 0x4a, 0xb6, 0x5a, 0x50, 0x17, 0xc4, 0xf1, 0x39, 0xd2,
	0xa7, 0x2f, 0xba, 0x87, 0xe7, 0xdd, 0x33, 0xe5, 0x3a, 0x82, 0x85, 0xb4, 0x8e, 0x89, 0xae, 0x4a,
	0x09, 0x5a, 0x4f, 0xb1, 0xd7, 0x27, 0xd4, 0x94, 0x63, 0xa0, 0xd0, 0x2f, 0x5a, 0x40, 0x7f, 0x96,
	0x61, 0x67, 0xca, 0x2d, 0xb4, 0x08, 0x19, 0xd3, 0xe0, 0x59, 0xca, 0xf9, 0x0a, 0x66, 0x4c, 0x03,
	0xbd, 0x1b, 0x93, 0xaf, 0x3d, 0x45, 0x4f, 0x93, 0x62, 0xa2, 0xcf, 0xa4, 0xf1, 0xb1, 0xe2, 0x8d,
	0xe0, 0xde, 0x34, 0x7d, 0xb8, 0xd7, 0xfc, 0x41, 0x9f, 0x4b, 0x50, 0x6c, 0xd9, 0x96, 0x61, 0x32,
	0xd3, 0xb6, 0xf4, 0xbe, 0x7c, 0x84, 0xfb, 0xd2, 0x9f, 0xa6, 0x2f, 0x63, 0x74, 0xde, 0xda, 0x30,
	0x86, 0x28, 0x7b, 0x22, 0x85, 0x3e, 0x17, 0xea, 0xe7, 0x0a, 0xa7, 0xfc, 0x94, 0x0d, 0x8b, 0xcd,
	0xab, 0xbf, 0x2f, 0x25, 0xc8, 0xfb, 0x90, 0x5f, 0x79, 0xa3, 0xcd, 0xcb, 0x65, 0x78, 0x85, 0x97,
	0xe5, 0x76, 0x2f, 0xb3, 0xca, 0xb5, 0x0c, 0x94, 0x22, 0x47, 0x6e, 0x43, 0x31, 0x2d, 0x03, 0x8f,
	0xa2, 0xe5, 0x28, 0x30, 0x74, 0x53, 0x8a, 0x95, 0xe4, 0x47, 0xd2, 0x56, 0xc5, 0x90, 0xd2, 0x7d,
	0x8e, 0xc6, 0xbb, 0xcf, 0x58, 0x20, 0x7e, 0x04, 0xbb, 0x60, 0xdb, 0x65, 0x6c, 0x76, 0xba, 0xcc,
	0xeb, 0x3a, 0xde, 0x27, 0xe5, 0x6e, 0x01, 0xca, 0x71, 0xc9, 0xd1, 0x0d, 0x09, 0x0a, 0x01, 0x28,
	0x37, 0xb8, 0x68, 0xef, 0x6c, 0x66, 0xd1, 0x85, 0x80, 0x37, 0x83, 0x83, 0xcf, 0xca, 0x8f, 0x79,
	0x98, 0x8b, 0x9e, 0x7a, 0x6d, 0xe4, 0xc9, 0x78, 0x1b, 0xf9, 0x36, 0x10, 0xed, 0x29, 0xae, 0xd9,
	0x35, 0x69, 0x0b, 0x43, 0x48, 0xe9, 0x33, 0xbf, 0x48, 0x50, 0x36, 0x2d, 0x32, 0x64, 0x9a, 0x69,
	0x31, 0xec, 0xb4, 0xf5, 0x16, 0xa6, 0xf2, 0x31, 0xee, 0xea, 0xf5, 0x2d, 0x75, 0x35, 0xee, 0x94,
	0xf0, 0x7a, 0x9e, 0xc3, 0x2b, 0x01, 0xaa, 0xbc, 0x9a, 0xd2, 0x0b, 0x9e, 0xf6, 0x7b, 0x01, 0x42,
	0x90, 0x33, 0x68, 0x8b, 0xc8, 0x47, 0x2b, 0xd9, 0x6a, 0x49, 0xe5, 0x7f, 0xa7, 0x8c, 0xc0, 0x67,
	0x52, 0xd6, 0x8d, 0x5f, 0x73, 0xb0, 0x98, 0xea, 0x02, 0xba, 0xe3, 0xee, 0x5f, 0xd1, 0x13, 0xf9,
	0x59, 0x5e, 0x9d, 0x3f, 0xfc, 0xfb, 0x12, 0x16, 0x47, 0x45, 0x25, 0xcf, 0x45, 0xb3, 0xa8, 0xdc,
	0xcd, 0xc0, 0x42, 0xda, 0x45, 0xaf, 0xa8, 0x9f, 0x1b, 0xdf, 0x6e, 0xdc, 0xb4, 0xde, 0x0e, 0x8a,
	0xfa, 0x79, 0x5e, 0x29, 0x3f, 0xff, 0x47, 0x02, 0x4f, 0x69, 0x5b, 0x6f, 0xa6, 0xd4, 0xcf, 0x71,
	0xbe, 0x31, 0xb9, 0x81, 0xee, 0x81, 0x42, 0x28, 0xf2, 0x09, 0x0e, 0x87, 0x00, 0xda, 0x0f, 0xb3,
	0x74, 0xd8, 0x0c, 0x2f, 0x9c, 0xac, 0x48, 0xd5, 0x92, 0x1a, 0xc1, 0x94, 0x5b, 0x85, 0xc4, 0x34,
	0x5a, 0x4b, 0x0e, 0xa3, 0x97, 0x36, 0xfc, 0x7d, 0xf1, 0x5e, 0x33, 0xe6, 0x56, 0xfe, 0xa1, 0x66,
	0xcc, 0xdb, 0xb1, 0x11, 0x73, 0x71, 0xc2, 0x8e, 0xa5, 0x6f, 0x3a, 0xa5, 0x50, 0x26, 0x07, 0xb7,
	0xfd, 0x9f, 0x03, 0x9a, 0x93, 0xe6, 0x8e, 0xb0, 0x08, 0x1f, 0x66, 0x03, 0x4c, 0xc5, 0x6d, 0x74,
	0x19, 0xb6, 0xf7, 0x86, 0x96, 0x49, 0xb0, 0xe3, 0x6f, 0x5c, 0x6f, 0x4c, 0xda, 0x07, 0xcf, 0xbe,
	0x60, 0xf7, 0xd9, 0x94, 0x1b, 0x52, 0xfa, 0xf4, 0x6c, 0x8c, 0x4f, 0xcf, 0xbd, 0xee, 0xd7, 0x4d,
	0x4d, 0x37, 0x0c, 0x07, 0x53, 0xea, 0xad, 0xf5, 0x05, 0x93, 0x9c, 0x10, 0x00, 0x7a, 0x0c, 0x8a,
	0x03, 0xbd, 0x15, 0x9c, 0x2f, 0xf3, 0x73, 0x18, 0xe8, 0x2d, 0xff, 0x82, 0xbb, 0xd5, 0x0f, 0x69,
	0xf7, 0x7e, 0x5b, 0x3d, 0x3f, 0x8e, 0x6d, 0xf5, 0xbf, 0x4b, 0x80, 0x92, 0x99, 0x43, 0x1f, 0xc7,
	0xb7, 0x91, 0xc1, 0xf4, 0xe5, 0x4a, 0x79, 0xbf, 0xab, 0x91, 0xc4, 0x45, 0xde, 0xeb, 0xe1, 0x7f,
	0x7a, 0xaf, 0xcb, 0x29, 0xef, 0xf5, 0x8b, 0x0c, 0xcc, 0x8e, 0x6b, 0x84, 0xde, 0x8b, 0x85, 0xd9,
	0x99, 0x66, 0x45, 0xa4, 0x04, 0xf8, 0x61, 0xb4, 0x34, 0x0e, 0x40, 0x79, 0x68, 0x0d, 0x74, 0xfe,
	0xe5, 0xcc, 0xb5, 0xe3, 0x36, 0x11, 0x37, 0xd0, 0xbc, 0x3a, 0xef, 0xe3, 0xab, 0x02, 0x46, 0x4f,
	0xc0, 0xe2, 0xd8, 0x45, 0x4e, 0x28, 0xaa, 0x6a, 0xb9, 0x92, 0xad, 0xe6, 0x54, 0x14, 0xde, 0x3e,
	0x63, 0x93, 0x15, 0x5e, 0x62, 0x8b, 0xb0, 0xad, 0x4f, 0x89, 0x66, 0x1a, 0x7c, 0xc9, 0x2f, 0xa9,
	0x33, 0x7d, 0x4a, 0x56, 0x8c, 0xa3, 0x5d, 0x50, 0x7a, 0x16, 0x71, 0xb4, 0x44, 0xe4, 0x1a, 0x1e,
	0x31, 0xb4, 0xbb, 0x76, 0x56, 0x84, 0xb0, 0x2a, 0x8e, 0xe9, 0x79, 0x6c, 0x51, 0xdb, 0xa1, 0xf2,
	0x90, 0x27, 0x0c, 0x25, 0x13, 0xa6, 0xee, 0x76, 0xcd, 0xad, 0x46, 0x7f, 0x6d, 0xa5, 0xa7, 0x46,
	0xec, 0xe4, 0x5b, 0xb7, 0xd7, 0xf7, 0x49, 0x77, 0xd6, 0xf7, 0x49, 0xbf, 0xad, 0xef, 0x93, 0x2e,
	0xaa, 0x1d, 0x33, 0xc8, 0x8f, 0x6b, 0xa5, 0x6e, 0xb6, 0x70, 0x13, 0x3b, 0x9d, 0x7a, 0x17, 0xeb,
	0x7d, 0xd6, 0x6d, 0xda, 0x6c, 0xc9, 0xb4, 0x3a, 0x98, 0xb2, 0xa5, 0x1e, 0x33, 0x97, 0x2c, 0x9d,
	0x99, 0x97, 0x70, 0x9d, 0xac, 0x75, 0xea, 0x3d, 0x66, 0xd6, 0x75, 0x43, 0x27, 0x0c, 0x3b, 0xb4,
	0xae, 0xf5, 0x86, 0x96, 0x4d, 0xeb, 0xb4, 0xd5, 0xc5, 0x03, 0xfd, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x60, 0xa7, 0x8b, 0xda, 0x6f, 0x16, 0x00, 0x00,
}

func (m *NetworkInstances) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Afts != nil {
		{
			size, err := m.Afts.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextHops != nil {
		{
			size, err := m.NextHops.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.NextHopGroups != nil {
		{
			size, err := m.NextHopGroups.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Mpls != nil {
		{
			size, err := m.Mpls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Ipv6Unicast != nil {
		{
			size, err := m.Ipv6Unicast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Ipv4Unicast != nil {
		{
			size, err := m.Ipv4Unicast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ipv4Entry) > 0 {
		for iNdEx := len(m.Ipv4Entry) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ipv4Entry[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextHopGroup != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.NextHopGroup))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ipv6Entry) > 0 {
		for iNdEx := len(m.Ipv6Entry) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ipv6Entry[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextHopGroup != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.NextHopGroup))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LabelEntry) > 0 {
		for iNdEx := len(m.LabelEntry) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LabelEntry[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Label != nil {
		i -= len(*m.Label)
		copy(dAtA[i:], *m.Label)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Label)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PoppedMplsLabelStack) > 0 {
		for iNdEx := len(m.PoppedMplsLabelStack) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PoppedMplsLabelStack[iNdEx])
			copy(dAtA[i:], m.PoppedMplsLabelStack[iNdEx])
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(m.PoppedMplsLabelStack[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if m.NextHopGroup != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.NextHopGroup))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Label != nil {
		i -= len(*m.Label)
		copy(dAtA[i:], *m.Label)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Label)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NextHopGroup) > 0 {
		for iNdEx := len(m.NextHopGroup) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NextHopGroup[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextHops != nil {
		{
			size, err := m.NextHops.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Conditional != nil {
		{
			size, err := m.Conditional.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Id != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NextHop) > 0 {
		for iNdEx := len(m.NextHop) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NextHop[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Weight != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Weight))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Index != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Condition) > 0 {
		for iNdEx := len(m.Condition) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Condition[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xb2
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InputInterfaces != nil {
		{
			size, err := m.InputInterfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.Id != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NextHopGroup != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.NextHopGroup))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if len(m.Dscp) > 0 {
		for iNdEx := len(m.Dscp) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(m.Dscp[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xd0
		}
	}
	if m.Id != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InputInterface) > 0 {
		for iNdEx := len(m.InputInterface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InputInterface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xea
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xfa
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterface != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Subinterface))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x8a
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x82
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NextHop) > 0 {
		for iNdEx := len(m.NextHop) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NextHop[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceRef != nil {
		{
			size, err := m.InterfaceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Juniper != nil {
		{
			size, err := m.Juniper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if len(m.PushedMplsLabelStack) > 0 {
		for iNdEx := len(m.PushedMplsLabelStack) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PushedMplsLabelStack[iNdEx])
			copy(dAtA[i:], m.PushedMplsLabelStack[iNdEx])
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(m.PushedMplsLabelStack[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if m.MacAddress != nil {
		i -= len(*m.MacAddress)
		copy(dAtA[i:], *m.MacAddress)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.MacAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.IpAddress != nil {
		i -= len(*m.IpAddress)
		copy(dAtA[i:], *m.IpAddress)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.IpAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterface != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.Subinterface))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LspId != nil {
		i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(*m.LspId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if len(m.MappedNextHopIndex) > 0 {
		for iNdEx := len(m.MappedNextHopIndex) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintFibtdTelemetryOc(dAtA, i, uint64(m.MappedNextHopIndex[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa0
		}
	}
	if m.UnmappedNexthop != nil {
		i--
		if *m.UnmappedNexthop {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintFibtdTelemetryOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovFibtdTelemetryOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstances) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Afts != nil {
		l = m.Afts.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ipv4Unicast != nil {
		l = m.Ipv4Unicast.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Ipv6Unicast != nil {
		l = m.Ipv6Unicast.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Mpls != nil {
		l = m.Mpls.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHopGroups != nil {
		l = m.NextHopGroups.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHops != nil {
		l = m.NextHops.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ipv4Entry) > 0 {
		for _, e := range m.Ipv4Entry {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHopGroup != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.NextHopGroup))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ipv6Entry) > 0 {
		for _, e := range m.Ipv6Entry {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHopGroup != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.NextHopGroup))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LabelEntry) > 0 {
		for _, e := range m.LabelEntry {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Label != nil {
		l = len(*m.Label)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Label != nil {
		l = len(*m.Label)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHopGroup != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.NextHopGroup))
	}
	if len(m.PoppedMplsLabelStack) > 0 {
		for _, s := range m.PoppedMplsLabelStack {
			l = len(s)
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NextHopGroup) > 0 {
		for _, e := range m.NextHopGroup {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Id))
	}
	if m.Conditional != nil {
		l = m.Conditional.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.NextHops != nil {
		l = m.NextHops.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NextHop) > 0 {
		for _, e := range m.NextHop {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Index))
	}
	if m.Weight != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Condition) > 0 {
		for _, e := range m.Condition {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Id))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.InputInterfaces != nil {
		l = m.InputInterfaces.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Id))
	}
	if len(m.Dscp) > 0 {
		for _, e := range m.Dscp {
			n += 2 + sovFibtdTelemetryOc(uint64(e))
		}
	}
	if m.NextHopGroup != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.NextHopGroup))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InputInterface) > 0 {
		for _, e := range m.InputInterface {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Subinterface != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Subinterface))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NextHop) > 0 {
		for _, e := range m.NextHop {
			l = e.Size()
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Juniper != nil {
		l = m.Juniper.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.InterfaceRef != nil {
		l = m.InterfaceRef.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IpAddress != nil {
		l = len(*m.IpAddress)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.MacAddress != nil {
		l = len(*m.MacAddress)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if len(m.PushedMplsLabelStack) > 0 {
		for _, s := range m.PushedMplsLabelStack {
			l = len(s)
			n += 2 + l + sovFibtdTelemetryOc(uint64(l))
		}
	}
	if m.Index != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.Subinterface != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.Subinterface))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovFibtdTelemetryOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UnmappedNexthop != nil {
		n += 3
	}
	if len(m.MappedNextHopIndex) > 0 {
		for _, e := range m.MappedNextHopIndex {
			n += 2 + sovFibtdTelemetryOc(uint64(e))
		}
	}
	if m.LspId != nil {
		n += 2 + sovFibtdTelemetryOc(uint64(*m.LspId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovFibtdTelemetryOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFibtdTelemetryOc(x uint64) (n int) {
	return sovFibtdTelemetryOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstances) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesNetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Afts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Afts == nil {
				m.Afts = &NetworkInstancesNetworkInstanceListAftsType{}
			}
			if err := m.Afts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: afts_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: afts_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Unicast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4Unicast == nil {
				m.Ipv4Unicast = &NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType{}
			}
			if err := m.Ipv4Unicast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6Unicast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6Unicast == nil {
				m.Ipv6Unicast = &NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType{}
			}
			if err := m.Ipv6Unicast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mpls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mpls == nil {
				m.Mpls = &NetworkInstancesNetworkInstanceListAftsTypeMplsType{}
			}
			if err := m.Mpls.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NextHopGroups == nil {
				m.NextHopGroups = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType{}
			}
			if err := m.NextHopGroups.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHops", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NextHops == nil {
				m.NextHops = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsType{}
			}
			if err := m.NextHops.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_unicast_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_unicast_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Entry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv4Entry = append(m.Ipv4Entry, &NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList{})
			if err := m.Ipv4Entry[len(m.Ipv4Entry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_entry_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_entry_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroup", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NextHopGroup = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_unicast_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_unicast_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6Entry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv6Entry = append(m.Ipv6Entry, &NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList{})
			if err := m.Ipv6Entry[len(m.Ipv6Entry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_entry_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_entry_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroup", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NextHopGroup = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelEntry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LabelEntry = append(m.LabelEntry, &NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList{})
			if err := m.LabelEntry[len(m.LabelEntry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: label_entry_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: label_entry_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Label = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeMplsTypeLabelEntryListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Label = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroup", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NextHopGroup = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoppedMplsLabelStack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoppedMplsLabelStack = append(m.PoppedMplsLabelStack, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hop_groups_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hop_groups_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextHopGroup = append(m.NextHopGroup, &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList{})
			if err := m.NextHopGroup[len(m.NextHopGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hop_group_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hop_group_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditional", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Conditional == nil {
				m.Conditional = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType{}
			}
			if err := m.Conditional.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHops", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NextHops == nil {
				m.NextHops = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType{}
			}
			if err := m.NextHops.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hops_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hops_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextHop = append(m.NextHop, &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList{})
			if err := m.NextHop[len(m.NextHop)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hop_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hop_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListNextHopsTypeNextHopListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: conditional_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: conditional_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Condition", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Condition = append(m.Condition, &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList{})
			if err := m.Condition[len(m.Condition)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: condition_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: condition_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputInterfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InputInterfaces == nil {
				m.InputInterfaces = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType{}
			}
			if err := m.InputInterfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		case 58:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowFibtdTelemetryOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Dscp = append(m.Dscp, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowFibtdTelemetryOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthFibtdTelemetryOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthFibtdTelemetryOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Dscp) == 0 {
					m.Dscp = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowFibtdTelemetryOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Dscp = append(m.Dscp, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Dscp", wireType)
			}
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHopGroup", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NextHopGroup = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: input_interfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: input_interfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 61:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputInterface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputInterface = append(m.InputInterface, &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList{})
			if err := m.InputInterface[len(m.InputInterface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: input_interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: input_interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopGroupsTypeNextHopGroupListConditionalTypeConditionListInputInterfacesTypeInputInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 64:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 65:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subinterface = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hops_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hops_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextHop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextHop = append(m.NextHop, &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList{})
			if err := m.NextHop[len(m.NextHop)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: next_hop_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: next_hop_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Juniper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Juniper == nil {
				m.Juniper = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType{}
			}
			if err := m.Juniper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceRef == nil {
				m.InterfaceRef = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType{}
			}
			if err := m.InterfaceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.IpAddress = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MacAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MacAddress = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushedMplsLabelStack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PushedMplsLabelStack = append(m.PushedMplsLabelStack, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_ref_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_ref_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListInterfaceRefTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subinterface = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: juniper_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: juniper_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesNetworkInstanceListAftsTypeNextHopsTypeNextHopListJuniperTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnmappedNexthop", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UnmappedNexthop = &b
		case 52:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowFibtdTelemetryOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.MappedNextHopIndex = append(m.MappedNextHopIndex, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowFibtdTelemetryOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthFibtdTelemetryOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthFibtdTelemetryOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.MappedNextHopIndex) == 0 {
					m.MappedNextHopIndex = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowFibtdTelemetryOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.MappedNextHopIndex = append(m.MappedNextHopIndex, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field MappedNextHopIndex", wireType)
			}
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipFibtdTelemetryOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFibtdTelemetryOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFibtdTelemetryOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFibtdTelemetryOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFibtdTelemetryOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFibtdTelemetryOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFibtdTelemetryOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFibtdTelemetryOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFibtdTelemetryOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFibtdTelemetryOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFibtdTelemetryOc = fmt.Errorf("proto: unexpected end of group")
)
