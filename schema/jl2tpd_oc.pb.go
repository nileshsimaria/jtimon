// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: jl2tpd_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosL2Tp struct {
	System               *JunosL2TpSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JunosL2Tp) Reset()         { *m = JunosL2Tp{} }
func (m *JunosL2Tp) String() string { return proto.CompactTextString(m) }
func (*JunosL2Tp) ProtoMessage()    {}
func (*JunosL2Tp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0}
}
func (m *JunosL2Tp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2Tp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2Tp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2Tp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2Tp.Merge(m, src)
}
func (m *JunosL2Tp) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2Tp) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2Tp.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2Tp proto.InternalMessageInfo

func (m *JunosL2Tp) GetSystem() *JunosL2TpSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosL2TpSystemType struct {
	SubscriberManagement *JunosL2TpSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *JunosL2TpSystemType) Reset()         { *m = JunosL2TpSystemType{} }
func (m *JunosL2TpSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosL2TpSystemType) ProtoMessage()    {}
func (*JunosL2TpSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0, 0}
}
func (m *JunosL2TpSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2TpSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2TpSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2TpSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2TpSystemType.Merge(m, src)
}
func (m *JunosL2TpSystemType) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2TpSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2TpSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2TpSystemType proto.InternalMessageInfo

func (m *JunosL2TpSystemType) GetSubscriberManagement() *JunosL2TpSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosL2TpSystemTypeSubscriberManagementType struct {
	ClientProtocols      *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType `protobuf:"bytes,151,opt,name=client_protocols,json=clientProtocols" json:"client_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_unrecognized     []byte                                                          `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *JunosL2TpSystemTypeSubscriberManagementType) Reset() {
	*m = JunosL2TpSystemTypeSubscriberManagementType{}
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosL2TpSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosL2TpSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0, 0, 0}
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosL2TpSystemTypeSubscriberManagementType) GetClientProtocols() *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType {
	if m != nil {
		return m.ClientProtocols
	}
	return nil
}

type JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType struct {
	L2Tp                 *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType `protobuf:"bytes,151,opt,name=l2tp" json:"l2tp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                  `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) Reset() {
	*m = JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType{}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoMessage() {}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0, 0, 0, 0}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType.Merge(m, src)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType proto.InternalMessageInfo

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) GetL2Tp() *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType {
	if m != nil {
		return m.L2Tp
	}
	return nil
}

type JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType struct {
	Summary              *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType `protobuf:"bytes,151,opt,name=summary" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                             `json:"-"`
	XXX_sizecache        int32                                                                              `json:"-"`
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) Reset() {
	*m = JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType{}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) ProtoMessage() {}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0, 0, 0, 0, 0}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType.Merge(m, src)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType proto.InternalMessageInfo

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) GetSummary() *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType {
	if m != nil {
		return m.Summary
	}
	return nil
}

type JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType struct {
	L2TpStatsTotalTunnels             *uint32  `protobuf:"varint,51,opt,name=l2tp_stats_total_tunnels,json=l2tpStatsTotalTunnels" json:"l2tp_stats_total_tunnels,omitempty"`
	L2TpStatsTotalSessions            *uint32  `protobuf:"varint,52,opt,name=l2tp_stats_total_sessions,json=l2tpStatsTotalSessions" json:"l2tp_stats_total_sessions,omitempty"`
	L2TpStatsControlRxPackets         *uint32  `protobuf:"varint,53,opt,name=l2tp_stats_control_rx_packets,json=l2tpStatsControlRxPackets" json:"l2tp_stats_control_rx_packets,omitempty"`
	L2TpStatsControlRxBytes           *uint32  `protobuf:"varint,54,opt,name=l2tp_stats_control_rx_bytes,json=l2tpStatsControlRxBytes" json:"l2tp_stats_control_rx_bytes,omitempty"`
	L2TpStatsControlTxPackets         *uint32  `protobuf:"varint,55,opt,name=l2tp_stats_control_tx_packets,json=l2tpStatsControlTxPackets" json:"l2tp_stats_control_tx_packets,omitempty"`
	L2TpStatsControlTxBytes           *uint32  `protobuf:"varint,56,opt,name=l2tp_stats_control_tx_bytes,json=l2tpStatsControlTxBytes" json:"l2tp_stats_control_tx_bytes,omitempty"`
	L2TpEraTypeIcrqInflightCount      *uint32  `protobuf:"varint,57,opt,name=l2tp_era_type_icrq_inflight_count,json=l2tpEraTypeIcrqInflightCount" json:"l2tp_era_type_icrq_inflight_count,omitempty"`
	L2TpEraTypeIcrqReportedSuccesses  *uint32  `protobuf:"varint,58,opt,name=l2tp_era_type_icrq_reported_successes,json=l2tpEraTypeIcrqReportedSuccesses" json:"l2tp_era_type_icrq_reported_successes,omitempty"`
	L2TpEraTypeIcrqReportedFailures   *uint32  `protobuf:"varint,59,opt,name=l2tp_era_type_icrq_reported_failures,json=l2tpEraTypeIcrqReportedFailures" json:"l2tp_era_type_icrq_reported_failures,omitempty"`
	L2TpEraTypeSccrqInflightCount     *uint32  `protobuf:"varint,60,opt,name=l2tp_era_type_sccrq_inflight_count,json=l2tpEraTypeSccrqInflightCount" json:"l2tp_era_type_sccrq_inflight_count,omitempty"`
	L2TpEraTypeSccrqReportedSuccesses *uint32  `protobuf:"varint,61,opt,name=l2tp_era_type_sccrq_reported_successes,json=l2tpEraTypeSccrqReportedSuccesses" json:"l2tp_era_type_sccrq_reported_successes,omitempty"`
	L2TpEraTypeSccrqReportedFailures  *uint32  `protobuf:"varint,62,opt,name=l2tp_era_type_sccrq_reported_failures,json=l2tpEraTypeSccrqReportedFailures" json:"l2tp_era_type_sccrq_reported_failures,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) Reset() {
	*m = JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType{}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) ProtoMessage() {
}
func (*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9259f956296c37, []int{0, 0, 0, 0, 0, 0}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType.Merge(m, src)
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) XXX_Size() int {
	return m.Size()
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType proto.InternalMessageInfo

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsTotalTunnels() uint32 {
	if m != nil && m.L2TpStatsTotalTunnels != nil {
		return *m.L2TpStatsTotalTunnels
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsTotalSessions() uint32 {
	if m != nil && m.L2TpStatsTotalSessions != nil {
		return *m.L2TpStatsTotalSessions
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsControlRxPackets() uint32 {
	if m != nil && m.L2TpStatsControlRxPackets != nil {
		return *m.L2TpStatsControlRxPackets
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsControlRxBytes() uint32 {
	if m != nil && m.L2TpStatsControlRxBytes != nil {
		return *m.L2TpStatsControlRxBytes
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsControlTxPackets() uint32 {
	if m != nil && m.L2TpStatsControlTxPackets != nil {
		return *m.L2TpStatsControlTxPackets
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpStatsControlTxBytes() uint32 {
	if m != nil && m.L2TpStatsControlTxBytes != nil {
		return *m.L2TpStatsControlTxBytes
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeIcrqInflightCount() uint32 {
	if m != nil && m.L2TpEraTypeIcrqInflightCount != nil {
		return *m.L2TpEraTypeIcrqInflightCount
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeIcrqReportedSuccesses() uint32 {
	if m != nil && m.L2TpEraTypeIcrqReportedSuccesses != nil {
		return *m.L2TpEraTypeIcrqReportedSuccesses
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeIcrqReportedFailures() uint32 {
	if m != nil && m.L2TpEraTypeIcrqReportedFailures != nil {
		return *m.L2TpEraTypeIcrqReportedFailures
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeSccrqInflightCount() uint32 {
	if m != nil && m.L2TpEraTypeSccrqInflightCount != nil {
		return *m.L2TpEraTypeSccrqInflightCount
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeSccrqReportedSuccesses() uint32 {
	if m != nil && m.L2TpEraTypeSccrqReportedSuccesses != nil {
		return *m.L2TpEraTypeSccrqReportedSuccesses
	}
	return 0
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) GetL2TpEraTypeSccrqReportedFailures() uint32 {
	if m != nil && m.L2TpEraTypeSccrqReportedFailures != nil {
		return *m.L2TpEraTypeSccrqReportedFailures
	}
	return 0
}

var E_JnprJunosL2TpExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosL2Tp)(nil),
	Field:         44,
	Name:          "jnpr_junos_l2tp_ext",
	Tag:           "bytes,44,opt,name=jnpr_junos_l2tp_ext",
	Filename:      "jl2tpd_oc.proto",
}

func init() {
	proto.RegisterType((*JunosL2Tp)(nil), "junos_l2tp")
	proto.RegisterType((*JunosL2TpSystemType)(nil), "junos_l2tp.system_type")
	proto.RegisterType((*JunosL2TpSystemTypeSubscriberManagementType)(nil), "junos_l2tp.system_type.subscriber_management_type")
	proto.RegisterType((*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType)(nil), "junos_l2tp.system_type.subscriber_management_type.client_protocols_type")
	proto.RegisterType((*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType)(nil), "junos_l2tp.system_type.subscriber_management_type.client_protocols_type.l2tp_type")
	proto.RegisterType((*JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType)(nil), "junos_l2tp.system_type.subscriber_management_type.client_protocols_type.l2tp_type.summary_type")
	proto.RegisterExtension(E_JnprJunosL2TpExt)
}

func init() { proto.RegisterFile("jl2tpd_oc.proto", fileDescriptor_fe9259f956296c37) }

var fileDescriptor_fe9259f956296c37 = []byte{
	// 666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x4f, 0x13, 0x5d,
	0x14, 0xc6, 0xd3, 0xe4, 0x0d, 0xbc, 0xdc, 0xbe, 0x6f, 0x20, 0x83, 0xc8, 0x50, 0x05, 0x81, 0xa8,
	0x61, 0x21, 0x53, 0x83, 0x7f, 0x10, 0x44, 0x63, 0x20, 0xfe, 0x81, 0x88, 0x62, 0xdb, 0x95, 0x9b,
	0xeb, 0xf4, 0x72, 0x68, 0xa7, 0x4c, 0xef, 0x1d, 0xee, 0x39, 0xa3, 0xad, 0x5f, 0xc4, 0x8f, 0xe2,
	0x57, 0x70, 0xe9, 0xda, 0x95, 0x21, 0x26, 0x7e, 0x03, 0x57, 0x2e, 0xcc, 0xbd, 0xd3, 0x69, 0x4b,
	0x3b, 0xd5, 0x98, 0xb0, 0xec, 0x79, 0x9e, 0xe7, 0xf7, 0x9c, 0x33, 0xcd, 0x65, 0x93, 0x8d, 0x70,
	0x8d, 0xa2, 0x43, 0xae, 0x84, 0x17, 0x69, 0x45, 0xaa, 0x30, 0x4d, 0x10, 0x42, 0x13, 0x48, 0xb7,
	0x39, 0xa9, 0x28, 0x19, 0x2e, 0x7f, 0xcc, 0x33, 0xd6, 0x88, 0xa5, 0x42, 0x6e, 0xdc, 0xce, 0x4d,
	0x36, 0x86, 0x6d, 0x24, 0x68, 0xba, 0x1f, 0x72, 0x8b, 0xb9, 0x95, 0xfc, 0xda, 0xac, 0xd7, 0x53,
	0xbd, 0x44, 0xe2, 0xd4, 0x8e, 0xa0, 0xd4, 0xf1, 0x15, 0x7e, 0x30, 0x96, 0xef, 0x9b, 0x3b, 0x75,
	0x36, 0x83, 0x71, 0x15, 0x85, 0x0e, 0xaa, 0xa0, 0x79, 0xd3, 0x97, 0x7e, 0x0d, 0x9a, 0x20, 0x29,
	0x05, 0xae, 0x8d, 0x00, 0x7a, 0x99, 0xa9, 0xa4, 0xeb, 0x42, 0x4f, 0xdb, 0xef, 0x4a, 0x85, 0x9f,
	0x13, 0xac, 0x30, 0x3a, 0xe4, 0x10, 0x9b, 0x12, 0x61, 0x60, 0x7e, 0xda, 0x4b, 0x85, 0x0a, 0x31,
	0xdd, 0xe1, 0xd9, 0xdf, 0xef, 0xe0, 0x0d, 0xb2, 0x92, 0xcd, 0x26, 0x93, 0xf1, 0x41, 0x3a, 0x2d,
	0x7c, 0xff, 0x97, 0xcd, 0x64, 0x5a, 0x9d, 0x1a, 0xfb, 0xc7, 0xf4, 0xa5, 0x3b, 0x94, 0xce, 0x6b,
	0x07, 0xcf, 0x10, 0x92, 0x6d, 0x6c, 0x41, 0xe1, 0xdb, 0x38, 0x9b, 0xe8, 0xce, 0x9c, 0xf7, 0x6c,
	0x1c, 0xe3, 0x66, 0xd3, 0xd7, 0xed, 0xb4, 0x99, 0x9f, 0x7f, 0xb3, 0xd7, 0xa9, 0x48, 0xd6, 0x48,
	0x0b, 0x0b, 0x5f, 0xc6, 0xd8, 0x7f, 0xfd, 0x8a, 0xb3, 0xce, 0x5c, 0x9b, 0x41, 0xf2, 0x09, 0x39,
	0x29, 0xf2, 0x43, 0x4e, 0xb1, 0x94, 0x10, 0xa2, 0x7b, 0x6b, 0x31, 0xb7, 0xf2, 0x7f, 0x69, 0xc6,
	0xe8, 0x65, 0x23, 0x57, 0x8c, 0x5a, 0x49, 0x44, 0x67, 0x83, 0xcd, 0x0d, 0x05, 0x11, 0x10, 0x03,
	0x25, 0xd1, 0xbd, 0x6d, 0x93, 0x17, 0xcf, 0x26, 0xcb, 0x1d, 0xd5, 0x79, 0xc4, 0xe6, 0xfb, 0xa2,
	0x42, 0x49, 0xd2, 0x2a, 0xe4, 0xba, 0xc5, 0x23, 0x5f, 0x1c, 0x03, 0xa1, 0x7b, 0xc7, 0xc6, 0xe7,
	0xba, 0xf1, 0x9d, 0xc4, 0x52, 0x6a, 0x1d, 0x24, 0x06, 0x67, 0x8b, 0x5d, 0xca, 0x26, 0x54, 0xdb,
	0x04, 0xe8, 0xde, 0xb5, 0xf9, 0xd9, 0xe1, 0xfc, 0xb6, 0x91, 0x47, 0xf4, 0x53, 0xaf, 0x7f, 0x3d,
	0xbb, 0xbf, 0xf2, 0x87, 0x7e, 0x4a, 0xfb, 0xef, 0x65, 0xf7, 0x57, 0x3a, 0xfd, 0x4f, 0xd9, 0x92,
	0x4d, 0x83, 0xf6, 0xed, 0x9f, 0xc0, 0x03, 0xa1, 0x4f, 0x78, 0x20, 0x8f, 0xc2, 0xa0, 0x56, 0x27,
	0x2e, 0x54, 0x2c, 0xc9, 0xdd, 0xb0, 0x8c, 0xcb, 0xc6, 0xf8, 0x58, 0xfb, 0x95, 0x76, 0x04, 0xbb,
	0x42, 0x9f, 0xec, 0x76, 0x4c, 0x3b, 0xc6, 0xe3, 0xbc, 0x64, 0xd7, 0x32, 0x40, 0x1a, 0x22, 0xa5,
	0x09, 0x0e, 0x39, 0xc6, 0x42, 0x00, 0x22, 0xa0, 0xbb, 0x69, 0x61, 0x8b, 0x03, 0xb0, 0x52, 0xc7,
	0x58, 0x4e, 0x7d, 0xce, 0x3e, 0xbb, 0xfa, 0x3b, 0xe0, 0x91, 0x1f, 0x84, 0xb1, 0x06, 0x74, 0xef,
	0x5b, 0xde, 0x95, 0x11, 0xbc, 0x27, 0x1d, 0x9b, 0xb3, 0xcb, 0x96, 0xcf, 0xe2, 0x50, 0x64, 0x5c,
	0xba, 0x65, 0x61, 0xf3, 0x7d, 0xb0, 0xb2, 0x18, 0x3a, 0xf5, 0x15, 0xbb, 0x9e, 0x85, 0xca, 0xb8,
	0xf5, 0x81, 0xc5, 0x2d, 0x0d, 0xe2, 0x86, 0x8f, 0x1d, 0xfa, 0x7a, 0x03, 0xc8, 0xee, 0xb5, 0x0f,
	0x87, 0xbe, 0xde, 0x19, 0x62, 0x7a, 0xee, 0x66, 0x99, 0x4d, 0x37, 0x64, 0xa4, 0x79, 0xef, 0x31,
	0x73, 0x68, 0x91, 0x33, 0xeb, 0xed, 0xc5, 0x32, 0x88, 0x40, 0xbf, 0x00, 0x7a, 0xa7, 0xf4, 0x31,
	0x96, 0x41, 0xa2, 0xd2, 0xe8, 0xde, 0xb0, 0x8f, 0x3f, 0xdf, 0xf7, 0xf8, 0x4b, 0x53, 0x06, 0xb0,
	0x67, 0x7e, 0x3f, 0x37, 0x6d, 0x2d, 0xda, 0x7e, 0xf3, 0xe9, 0x74, 0x21, 0xf7, 0xf9, 0x74, 0x21,
	0xf7, 0xf5, 0x74, 0x21, 0xf7, 0xba, 0x54, 0x0b, 0xc8, 0xf8, 0x0d, 0xce, 0x93, 0x40, 0xc5, 0x40,
	0x40, 0x15, 0x74, 0xad, 0x58, 0x07, 0x3f, 0xa4, 0x7a, 0x55, 0xd1, 0x6a, 0x20, 0x6b, 0x80, 0xb4,
	0xda, 0xa0, 0x60, 0x55, 0xfa, 0x14, 0xbc, 0x85, 0x62, 0x74, 0x5c, 0x2b, 0x36, 0x28, 0x28, 0xfa,
	0x87, 0x7e, 0x44, 0xa0, 0xb1, 0x98, 0x6c, 0x58, 0x44, 0x51, 0x87, 0xa6, 0xff, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0x8b, 0xf4, 0xf9, 0x45, 0x97, 0x06, 0x00, 0x00,
}

func (m *JunosL2Tp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2Tp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2Tp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJl2TpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosL2TpSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2TpSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2TpSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJl2TpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2TpSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClientProtocols != nil {
		{
			size, err := m.ClientProtocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJl2TpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.L2Tp != nil {
		{
			size, err := m.L2Tp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJl2TpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Summary != nil {
		{
			size, err := m.Summary.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJl2TpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.L2TpEraTypeSccrqReportedFailures != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeSccrqReportedFailures))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.L2TpEraTypeSccrqReportedSuccesses != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeSccrqReportedSuccesses))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.L2TpEraTypeSccrqInflightCount != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeSccrqInflightCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.L2TpEraTypeIcrqReportedFailures != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeIcrqReportedFailures))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.L2TpEraTypeIcrqReportedSuccesses != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeIcrqReportedSuccesses))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.L2TpEraTypeIcrqInflightCount != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpEraTypeIcrqInflightCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.L2TpStatsControlTxBytes != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsControlTxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.L2TpStatsControlTxPackets != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsControlTxPackets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.L2TpStatsControlRxBytes != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsControlRxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.L2TpStatsControlRxPackets != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsControlRxPackets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.L2TpStatsTotalSessions != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsTotalSessions))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.L2TpStatsTotalTunnels != nil {
		i = encodeVarintJl2TpdOc(dAtA, i, uint64(*m.L2TpStatsTotalTunnels))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintJl2TpdOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovJl2TpdOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosL2Tp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovJl2TpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosL2TpSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovJl2TpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosL2TpSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClientProtocols != nil {
		l = m.ClientProtocols.Size()
		n += 2 + l + sovJl2TpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.L2Tp != nil {
		l = m.L2Tp.Size()
		n += 2 + l + sovJl2TpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Summary != nil {
		l = m.Summary.Size()
		n += 2 + l + sovJl2TpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.L2TpStatsTotalTunnels != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsTotalTunnels))
	}
	if m.L2TpStatsTotalSessions != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsTotalSessions))
	}
	if m.L2TpStatsControlRxPackets != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsControlRxPackets))
	}
	if m.L2TpStatsControlRxBytes != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsControlRxBytes))
	}
	if m.L2TpStatsControlTxPackets != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsControlTxPackets))
	}
	if m.L2TpStatsControlTxBytes != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpStatsControlTxBytes))
	}
	if m.L2TpEraTypeIcrqInflightCount != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeIcrqInflightCount))
	}
	if m.L2TpEraTypeIcrqReportedSuccesses != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeIcrqReportedSuccesses))
	}
	if m.L2TpEraTypeIcrqReportedFailures != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeIcrqReportedFailures))
	}
	if m.L2TpEraTypeSccrqInflightCount != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeSccrqInflightCount))
	}
	if m.L2TpEraTypeSccrqReportedSuccesses != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeSccrqReportedSuccesses))
	}
	if m.L2TpEraTypeSccrqReportedFailures != nil {
		n += 2 + sovJl2TpdOc(uint64(*m.L2TpEraTypeSccrqReportedFailures))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovJl2TpdOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozJl2TpdOc(x uint64) (n int) {
	return sovJl2TpdOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosL2Tp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_l2tp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_l2tp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &JunosL2TpSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosL2TpSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &JunosL2TpSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosL2TpSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientProtocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClientProtocols == nil {
				m.ClientProtocols = &JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType{}
			}
			if err := m.ClientProtocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: client_protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: client_protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2Tp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.L2Tp == nil {
				m.L2Tp = &JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType{}
			}
			if err := m.L2Tp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: l2tp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: l2tp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Summary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Summary == nil {
				m.Summary = &JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType{}
			}
			if err := m.Summary.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosL2TpSystemTypeSubscriberManagementTypeClientProtocolsTypeL2TpTypeSummaryType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: summary_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: summary_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsTotalTunnels", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsTotalTunnels = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsTotalSessions", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsTotalSessions = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsControlRxPackets", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsControlRxPackets = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsControlRxBytes", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsControlRxBytes = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsControlTxPackets", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsControlTxPackets = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpStatsControlTxBytes", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpStatsControlTxBytes = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeIcrqInflightCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeIcrqInflightCount = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeIcrqReportedSuccesses", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeIcrqReportedSuccesses = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeIcrqReportedFailures", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeIcrqReportedFailures = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeSccrqInflightCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeSccrqInflightCount = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeSccrqReportedSuccesses", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeSccrqReportedSuccesses = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpEraTypeSccrqReportedFailures", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpEraTypeSccrqReportedFailures = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJl2TpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJl2TpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipJl2TpdOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowJl2TpdOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJl2TpdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthJl2TpdOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupJl2TpdOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthJl2TpdOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthJl2TpdOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowJl2TpdOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupJl2TpdOc = fmt.Errorf("proto: unexpected end of group")
)
