// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: jpppd_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosPpp struct {
	System               *JunosPppSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JunosPpp) Reset()         { *m = JunosPpp{} }
func (m *JunosPpp) String() string { return proto.CompactTextString(m) }
func (*JunosPpp) ProtoMessage()    {}
func (*JunosPpp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0}
}
func (m *JunosPpp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPpp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPpp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPpp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPpp.Merge(m, src)
}
func (m *JunosPpp) XXX_Size() int {
	return m.Size()
}
func (m *JunosPpp) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPpp.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPpp proto.InternalMessageInfo

func (m *JunosPpp) GetSystem() *JunosPppSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosPppSystemType struct {
	SubscriberManagement *JunosPppSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *JunosPppSystemType) Reset()         { *m = JunosPppSystemType{} }
func (m *JunosPppSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosPppSystemType) ProtoMessage()    {}
func (*JunosPppSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0, 0}
}
func (m *JunosPppSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPppSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPppSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPppSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPppSystemType.Merge(m, src)
}
func (m *JunosPppSystemType) XXX_Size() int {
	return m.Size()
}
func (m *JunosPppSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPppSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPppSystemType proto.InternalMessageInfo

func (m *JunosPppSystemType) GetSubscriberManagement() *JunosPppSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementType struct {
	ClientProtocols      *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType `protobuf:"bytes,151,opt,name=client_protocols,json=clientProtocols" json:"client_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                       `json:"-"`
	XXX_unrecognized     []byte                                                         `json:"-"`
	XXX_sizecache        int32                                                          `json:"-"`
}

func (m *JunosPppSystemTypeSubscriberManagementType) Reset() {
	*m = JunosPppSystemTypeSubscriberManagementType{}
}
func (m *JunosPppSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPppSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosPppSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0, 0, 0}
}
func (m *JunosPppSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPppSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPppSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPppSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosPppSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *JunosPppSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPppSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosPppSystemTypeSubscriberManagementType) GetClientProtocols() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType {
	if m != nil {
		return m.ClientProtocols
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType struct {
	Ppp                  *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType `protobuf:"bytes,151,opt,name=ppp" json:"ppp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                `json:"-"`
	XXX_sizecache        int32                                                                 `json:"-"`
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Reset() {
	*m = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType{}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) ProtoMessage() {}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0, 0, 0, 0}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType.Merge(m, src)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType proto.InternalMessageInfo

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) GetPpp() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType {
	if m != nil {
		return m.Ppp
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType struct {
	Statistics           *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                              `json:"-"`
	XXX_sizecache        int32                                                                               `json:"-"`
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Reset() {
	*m = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType{}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) ProtoMessage() {}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0, 0, 0, 0, 0}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType.Merge(m, src)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) XXX_Size() int {
	return m.Size()
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType proto.InternalMessageInfo

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) GetStatistics() *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType {
	if m != nil {
		return m.Statistics
	}
	return nil
}

type JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType struct {
	PppStatsTotalSubscriberSessions   *uint32  `protobuf:"varint,51,opt,name=ppp_stats_total_subscriber_sessions,json=pppStatsTotalSubscriberSessions" json:"ppp_stats_total_subscriber_sessions,omitempty"`
	PppStatsSessionsDisablePhase      *uint32  `protobuf:"varint,52,opt,name=ppp_stats_sessions_disable_phase,json=pppStatsSessionsDisablePhase" json:"ppp_stats_sessions_disable_phase,omitempty"`
	PppStatsSessionsEstablishPhase    *uint32  `protobuf:"varint,53,opt,name=ppp_stats_sessions_establish_phase,json=pppStatsSessionsEstablishPhase" json:"ppp_stats_sessions_establish_phase,omitempty"`
	PppStatsSessionsNetworkPhase      *uint32  `protobuf:"varint,54,opt,name=ppp_stats_sessions_network_phase,json=pppStatsSessionsNetworkPhase" json:"ppp_stats_sessions_network_phase,omitempty"`
	PppStatsSessionsAuthenticatePhase *uint32  `protobuf:"varint,55,opt,name=ppp_stats_sessions_authenticate_phase,json=pppStatsSessionsAuthenticatePhase" json:"ppp_stats_sessions_authenticate_phase,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Reset() {
	*m = JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType{}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) ProtoMessage() {
}
func (*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc2b6110eba96f19, []int{0, 0, 0, 0, 0, 0}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType.Merge(m, src)
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType proto.InternalMessageInfo

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsTotalSubscriberSessions() uint32 {
	if m != nil && m.PppStatsTotalSubscriberSessions != nil {
		return *m.PppStatsTotalSubscriberSessions
	}
	return 0
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsDisablePhase() uint32 {
	if m != nil && m.PppStatsSessionsDisablePhase != nil {
		return *m.PppStatsSessionsDisablePhase
	}
	return 0
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsEstablishPhase() uint32 {
	if m != nil && m.PppStatsSessionsEstablishPhase != nil {
		return *m.PppStatsSessionsEstablishPhase
	}
	return 0
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsNetworkPhase() uint32 {
	if m != nil && m.PppStatsSessionsNetworkPhase != nil {
		return *m.PppStatsSessionsNetworkPhase
	}
	return 0
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) GetPppStatsSessionsAuthenticatePhase() uint32 {
	if m != nil && m.PppStatsSessionsAuthenticatePhase != nil {
		return *m.PppStatsSessionsAuthenticatePhase
	}
	return 0
}

var E_JnprJunosPppExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosPpp)(nil),
	Field:         45,
	Name:          "jnpr_junos_ppp_ext",
	Tag:           "bytes,45,opt,name=jnpr_junos_ppp_ext",
	Filename:      "jpppd_oc.proto",
}

func init() {
	proto.RegisterType((*JunosPpp)(nil), "junos_ppp")
	proto.RegisterType((*JunosPppSystemType)(nil), "junos_ppp.system_type")
	proto.RegisterType((*JunosPppSystemTypeSubscriberManagementType)(nil), "junos_ppp.system_type.subscriber_management_type")
	proto.RegisterType((*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType)(nil), "junos_ppp.system_type.subscriber_management_type.client_protocols_type")
	proto.RegisterType((*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType)(nil), "junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type")
	proto.RegisterType((*JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType)(nil), "junos_ppp.system_type.subscriber_management_type.client_protocols_type.ppp_type.statistics_type")
	proto.RegisterExtension(E_JnprJunosPppExt)
}

func init() { proto.RegisterFile("jpppd_oc.proto", fileDescriptor_cc2b6110eba96f19) }

var fileDescriptor_cc2b6110eba96f19 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0x87, 0x65, 0x15, 0x5a, 0xd8, 0x0a, 0x8a, 0x0c, 0x85, 0xc8, 0x42, 0xa1, 0x14, 0x21, 0xf5,
	0x12, 0x5b, 0xfc, 0x97, 0xb8, 0x81, 0x28, 0x48, 0x15, 0x20, 0x2b, 0xe1, 0xc4, 0xc5, 0x5d, 0x3b,
	0x23, 0x7b, 0x53, 0x67, 0x77, 0xe4, 0x99, 0x40, 0x73, 0xe4, 0x01, 0x38, 0x73, 0x82, 0x07, 0xe0,
	0xc6, 0x5b, 0x70, 0xe4, 0x11, 0x50, 0x6e, 0xbc, 0x05, 0x5a, 0x6f, 0x9c, 0x44, 0x91, 0x39, 0x20,
	0xf5, 0xb8, 0x33, 0xdf, 0x7c, 0xf3, 0x5b, 0x69, 0xc4, 0xe5, 0x11, 0x22, 0x0e, 0x13, 0x93, 0x85,
	0x58, 0x19, 0x36, 0xc1, 0x55, 0x86, 0x12, 0xc6, 0xc0, 0xd5, 0x34, 0x61, 0x83, 0xae, 0xb8, 0xff,
	0x67, 0x4b, 0x5c, 0x1c, 0x4d, 0xb4, 0xa1, 0x04, 0x11, 0xfd, 0x48, 0x6c, 0xd2, 0x94, 0x18, 0xc6,
	0x9d, 0x2f, 0xde, 0x9e, 0x77, 0xb0, 0x7d, 0xff, 0x7a, 0xb8, 0x68, 0x86, 0xae, 0x93, 0xf0, 0x14,
	0xa1, 0x3f, 0xc7, 0x82, 0xef, 0x5b, 0x62, 0x7b, 0xa5, 0xee, 0xe7, 0x62, 0x97, 0x26, 0x29, 0x65,
	0x95, 0x4a, 0xa1, 0x4a, 0xc6, 0x52, 0xcb, 0x1c, 0xc6, 0xa0, 0xb9, 0xf1, 0xdd, 0x6b, 0xf7, 0x85,
	0xad, 0x43, 0x6e, 0xd5, 0xb5, 0x65, 0xef, 0xcd, 0xa2, 0x15, 0xfc, 0xd8, 0x14, 0xc1, 0xbf, 0x87,
	0x7c, 0x12, 0x57, 0xb2, 0x52, 0xd9, 0x67, 0xfd, 0xcd, 0xcc, 0x94, 0xd4, 0x44, 0x78, 0xf5, 0xdf,
	0x11, 0xc2, 0x75, 0x95, 0x0b, 0xb6, 0xe3, 0xca, 0x71, 0x53, 0x0d, 0xbe, 0x9e, 0x17, 0xbb, 0xad,
	0xa8, 0x9f, 0x89, 0x0d, 0x44, 0x6c, 0x12, 0xc4, 0x67, 0x94, 0x20, 0x44, 0x44, 0x17, 0xc5, 0xda,
	0x83, 0x6f, 0xe7, 0xc4, 0x85, 0xa6, 0xe2, 0x7f, 0xf2, 0x84, 0x20, 0x96, 0xac, 0x88, 0x55, 0xb6,
	0xf8, 0xfb, 0xf1, 0x59, 0x6f, 0x0e, 0x97, 0x3b, 0x5c, 0x92, 0x95, 0xa5, 0xc1, 0xe7, 0x0d, 0xb1,
	0xb3, 0xd6, 0xf7, 0x5f, 0x8b, 0x3b, 0x76, 0xd6, 0x96, 0x29, 0x61, 0xc3, 0xb2, 0x4c, 0x56, 0x96,
	0x13, 0x10, 0x29, 0xa3, 0xa9, 0xf3, 0x60, 0xcf, 0x3b, 0xb8, 0xd4, 0xbf, 0x85, 0x88, 0x03, 0x4b,
	0xbe, 0xb3, 0xe0, 0x60, 0xc1, 0x0d, 0xe6, 0x98, 0xff, 0x52, 0xec, 0x2d, 0x6d, 0xcd, 0x70, 0x32,
	0x54, 0x24, 0xd3, 0x12, 0x12, 0x2c, 0x24, 0x41, 0xe7, 0x61, 0xad, 0xba, 0xd9, 0xa8, 0x9a, 0xd9,
	0x17, 0x0e, 0x8a, 0x2d, 0xe3, 0x1f, 0x89, 0xfd, 0x16, 0x0f, 0x10, 0xcb, 0xb4, 0x54, 0x54, 0xcc,
	0x4d, 0x8f, 0x6a, 0x53, 0x77, 0xdd, 0x74, 0xd8, 0x60, 0xce, 0xd5, 0x9e, 0x49, 0x03, 0x7f, 0x34,
	0xd5, 0xc9, 0xdc, 0xf4, 0xb8, 0x3d, 0xd3, 0x5b, 0x07, 0x39, 0x4f, 0x2c, 0xee, 0xb6, 0x78, 0xe4,
	0x84, 0x0b, 0xd0, 0xac, 0x32, 0xc9, 0xcd, 0x07, 0x9f, 0xd4, 0xb2, 0xdb, 0xeb, 0xb2, 0x67, 0x2b,
	0x64, 0x6d, 0x7c, 0x1a, 0x0b, 0x7f, 0xa4, 0xb1, 0x4a, 0x16, 0x37, 0x90, 0xc0, 0x29, 0xfb, 0x37,
	0xc2, 0xa3, 0x89, 0x56, 0x08, 0xd5, 0x7c, 0x3b, 0x0d, 0x40, 0x93, 0xa9, 0xa8, 0xd3, 0xab, 0x4f,
	0x46, 0x2c, 0x4f, 0xa6, 0xbf, 0x63, 0xc7, 0x8f, 0xec, 0x33, 0x46, 0x3c, 0x3c, 0xe5, 0xe7, 0xc7,
	0x3f, 0x67, 0x5d, 0xef, 0xd7, 0xac, 0xeb, 0xfd, 0x9e, 0x75, 0xbd, 0xf7, 0xfd, 0x5c, 0xb1, 0xa5,
	0xad, 0x2c, 0xd4, 0xc0, 0x91, 0xca, 0x20, 0x85, 0x2a, 0x8f, 0x0a, 0x90, 0x25, 0x17, 0xa9, 0xe1,
	0x9e, 0xd2, 0x39, 0x10, 0xf7, 0x46, 0xac, 0x7a, 0x5a, 0xb2, 0xfa, 0x00, 0x11, 0x9e, 0xe4, 0xd1,
	0x88, 0x55, 0x24, 0x87, 0x12, 0x19, 0x2a, 0x8a, 0x5c, 0xbc, 0x88, 0xb2, 0x02, 0xc6, 0xf2, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x78, 0x18, 0x13, 0xc5, 0x04, 0x00, 0x00,
}

func (m *JunosPpp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPpp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPpp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJpppdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosPppSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPppSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPppSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJpppdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosPppSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPppSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPppSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClientProtocols != nil {
		{
			size, err := m.ClientProtocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJpppdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ppp != nil {
		{
			size, err := m.Ppp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJpppdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Statistics != nil {
		{
			size, err := m.Statistics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJpppdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PppStatsSessionsAuthenticatePhase != nil {
		i = encodeVarintJpppdOc(dAtA, i, uint64(*m.PppStatsSessionsAuthenticatePhase))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.PppStatsSessionsNetworkPhase != nil {
		i = encodeVarintJpppdOc(dAtA, i, uint64(*m.PppStatsSessionsNetworkPhase))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.PppStatsSessionsEstablishPhase != nil {
		i = encodeVarintJpppdOc(dAtA, i, uint64(*m.PppStatsSessionsEstablishPhase))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.PppStatsSessionsDisablePhase != nil {
		i = encodeVarintJpppdOc(dAtA, i, uint64(*m.PppStatsSessionsDisablePhase))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.PppStatsTotalSubscriberSessions != nil {
		i = encodeVarintJpppdOc(dAtA, i, uint64(*m.PppStatsTotalSubscriberSessions))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintJpppdOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovJpppdOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosPpp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovJpppdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosPppSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovJpppdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosPppSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ClientProtocols != nil {
		l = m.ClientProtocols.Size()
		n += 2 + l + sovJpppdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ppp != nil {
		l = m.Ppp.Size()
		n += 2 + l + sovJpppdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Statistics != nil {
		l = m.Statistics.Size()
		n += 2 + l + sovJpppdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PppStatsTotalSubscriberSessions != nil {
		n += 2 + sovJpppdOc(uint64(*m.PppStatsTotalSubscriberSessions))
	}
	if m.PppStatsSessionsDisablePhase != nil {
		n += 2 + sovJpppdOc(uint64(*m.PppStatsSessionsDisablePhase))
	}
	if m.PppStatsSessionsEstablishPhase != nil {
		n += 2 + sovJpppdOc(uint64(*m.PppStatsSessionsEstablishPhase))
	}
	if m.PppStatsSessionsNetworkPhase != nil {
		n += 2 + sovJpppdOc(uint64(*m.PppStatsSessionsNetworkPhase))
	}
	if m.PppStatsSessionsAuthenticatePhase != nil {
		n += 2 + sovJpppdOc(uint64(*m.PppStatsSessionsAuthenticatePhase))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovJpppdOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozJpppdOc(x uint64) (n int) {
	return sovJpppdOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosPpp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_ppp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_ppp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJpppdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &JunosPppSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosPppSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJpppdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &JunosPppSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosPppSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientProtocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJpppdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClientProtocols == nil {
				m.ClientProtocols = &JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType{}
			}
			if err := m.ClientProtocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: client_protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: client_protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ppp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJpppdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ppp == nil {
				m.Ppp = &JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType{}
			}
			if err := m.Ppp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ppp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ppp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Statistics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJpppdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Statistics == nil {
				m.Statistics = &JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType{}
			}
			if err := m.Statistics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosPppSystemTypeSubscriberManagementTypeClientProtocolsTypePppTypeStatisticsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: statistics_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: statistics_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppStatsTotalSubscriberSessions", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppStatsTotalSubscriberSessions = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppStatsSessionsDisablePhase", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppStatsSessionsDisablePhase = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppStatsSessionsEstablishPhase", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppStatsSessionsEstablishPhase = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppStatsSessionsNetworkPhase", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppStatsSessionsNetworkPhase = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppStatsSessionsAuthenticatePhase", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppStatsSessionsAuthenticatePhase = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJpppdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJpppdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipJpppdOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowJpppdOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJpppdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthJpppdOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupJpppdOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthJpppdOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthJpppdOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowJpppdOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupJpppdOc = fmt.Errorf("proto: unexpected end of group")
)
