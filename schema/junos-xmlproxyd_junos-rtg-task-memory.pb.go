// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: junos-xmlproxyd_junos-rtg-task-memory.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosTaskMemory struct {
	TaskMemoryInformation *JunosTaskMemoryTaskMemoryInformationType `protobuf:"bytes,151,opt,name=task_memory_information,json=taskMemoryInformation" json:"task_memory_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                  `json:"-"`
	XXX_unrecognized      []byte                                    `json:"-"`
	XXX_sizecache         int32                                     `json:"-"`
}

func (m *JunosTaskMemory) Reset()         { *m = JunosTaskMemory{} }
func (m *JunosTaskMemory) String() string { return proto.CompactTextString(m) }
func (*JunosTaskMemory) ProtoMessage()    {}
func (*JunosTaskMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0}
}
func (m *JunosTaskMemory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemory.Merge(m, src)
}
func (m *JunosTaskMemory) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemory.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemory proto.InternalMessageInfo

func (m *JunosTaskMemory) GetTaskMemoryInformation() *JunosTaskMemoryTaskMemoryInformationType {
	if m != nil {
		return m.TaskMemoryInformation
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationType struct {
	TaskMemoryOverallReport     *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType     `protobuf:"bytes,151,opt,name=task_memory_overall_report,json=taskMemoryOverallReport" json:"task_memory_overall_report,omitempty"`
	TaskMemoryAllocatorReport   *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType   `protobuf:"bytes,152,opt,name=task_memory_allocator_report,json=taskMemoryAllocatorReport" json:"task_memory_allocator_report,omitempty"`
	TaskMemoryMallocUsageReport *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType `protobuf:"bytes,153,opt,name=task_memory_malloc_usage_report,json=taskMemoryMallocUsageReport" json:"task_memory_malloc_usage_report,omitempty"`
	TaskMemoryDynamicAllocs     *uint64                                                                  `protobuf:"varint,51,opt,name=task_memory_dynamic_allocs,json=taskMemoryDynamicAllocs" json:"task_memory_dynamic_allocs,omitempty"`
	TaskMemoryMaxDynamicAllocs  *uint64                                                                  `protobuf:"varint,52,opt,name=task_memory_max_dynamic_allocs,json=taskMemoryMaxDynamicAllocs" json:"task_memory_max_dynamic_allocs,omitempty"`
	TaskMemoryBssBytes          *uint64                                                                  `protobuf:"varint,53,opt,name=task_memory_bss_bytes,json=taskMemoryBssBytes" json:"task_memory_bss_bytes,omitempty"`
	TaskMemoryMaxBssBytes       *uint64                                                                  `protobuf:"varint,54,opt,name=task_memory_max_bss_bytes,json=taskMemoryMaxBssBytes" json:"task_memory_max_bss_bytes,omitempty"`
	TaskMemoryPageDataBytes     *uint64                                                                  `protobuf:"varint,55,opt,name=task_memory_page_data_bytes,json=taskMemoryPageDataBytes" json:"task_memory_page_data_bytes,omitempty"`
	TaskMemoryMaxPageDataBytes  *uint64                                                                  `protobuf:"varint,56,opt,name=task_memory_max_page_data_bytes,json=taskMemoryMaxPageDataBytes" json:"task_memory_max_page_data_bytes,omitempty"`
	TaskMemoryDirBytes          *uint64                                                                  `protobuf:"varint,57,opt,name=task_memory_dir_bytes,json=taskMemoryDirBytes" json:"task_memory_dir_bytes,omitempty"`
	TaskMemoryMaxDirBytes       *uint64                                                                  `protobuf:"varint,58,opt,name=task_memory_max_dir_bytes,json=taskMemoryMaxDirBytes" json:"task_memory_max_dir_bytes,omitempty"`
	TaskMemoryTotalBytesInUse   *uint64                                                                  `protobuf:"varint,59,opt,name=task_memory_total_bytes_in_use,json=taskMemoryTotalBytesInUse" json:"task_memory_total_bytes_in_use,omitempty"`
	TaskMemoryTotalBytesPercent *uint32                                                                  `protobuf:"varint,60,opt,name=task_memory_total_bytes_percent,json=taskMemoryTotalBytesPercent" json:"task_memory_total_bytes_percent,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                                                 `json:"-"`
	XXX_unrecognized            []byte                                                                   `json:"-"`
	XXX_sizecache               int32                                                                    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationType) String() string { return proto.CompactTextString(m) }
func (*JunosTaskMemoryTaskMemoryInformationType) ProtoMessage()    {}
func (*JunosTaskMemoryTaskMemoryInformationType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryOverallReport() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType {
	if m != nil {
		return m.TaskMemoryOverallReport
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryAllocatorReport() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType {
	if m != nil {
		return m.TaskMemoryAllocatorReport
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryMallocUsageReport() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType {
	if m != nil {
		return m.TaskMemoryMallocUsageReport
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryDynamicAllocs() uint64 {
	if m != nil && m.TaskMemoryDynamicAllocs != nil {
		return *m.TaskMemoryDynamicAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryMaxDynamicAllocs() uint64 {
	if m != nil && m.TaskMemoryMaxDynamicAllocs != nil {
		return *m.TaskMemoryMaxDynamicAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryBssBytes() uint64 {
	if m != nil && m.TaskMemoryBssBytes != nil {
		return *m.TaskMemoryBssBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryMaxBssBytes() uint64 {
	if m != nil && m.TaskMemoryMaxBssBytes != nil {
		return *m.TaskMemoryMaxBssBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryPageDataBytes() uint64 {
	if m != nil && m.TaskMemoryPageDataBytes != nil {
		return *m.TaskMemoryPageDataBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryMaxPageDataBytes() uint64 {
	if m != nil && m.TaskMemoryMaxPageDataBytes != nil {
		return *m.TaskMemoryMaxPageDataBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryDirBytes() uint64 {
	if m != nil && m.TaskMemoryDirBytes != nil {
		return *m.TaskMemoryDirBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryMaxDirBytes() uint64 {
	if m != nil && m.TaskMemoryMaxDirBytes != nil {
		return *m.TaskMemoryMaxDirBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryTotalBytesInUse() uint64 {
	if m != nil && m.TaskMemoryTotalBytesInUse != nil {
		return *m.TaskMemoryTotalBytesInUse
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationType) GetTaskMemoryTotalBytesPercent() uint32 {
	if m != nil && m.TaskMemoryTotalBytesPercent != nil {
		return *m.TaskMemoryTotalBytesPercent
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType struct {
	TaskSizeBlockList        *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType   `protobuf:"bytes,151,opt,name=task_size_block_list,json=taskSizeBlockList" json:"task_size_block_list,omitempty"`
	TaskMemoryStatsList      *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType `protobuf:"bytes,152,opt,name=task_memory_stats_list,json=taskMemoryStatsList" json:"task_memory_stats_list,omitempty"`
	TaskMemoryTotalBytes     *uint64                                                                                     `protobuf:"varint,51,opt,name=task_memory_total_bytes,json=taskMemoryTotalBytes" json:"task_memory_total_bytes,omitempty"`
	TaskMemoryTotalMaxBytes  *uint64                                                                                     `protobuf:"varint,52,opt,name=task_memory_total_max_bytes,json=taskMemoryTotalMaxBytes" json:"task_memory_total_max_bytes,omitempty"`
	TaskMemoryTotalFreeBytes *uint64                                                                                     `protobuf:"varint,53,opt,name=task_memory_total_free_bytes,json=taskMemoryTotalFreeBytes" json:"task_memory_total_free_bytes,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                                                    `json:"-"`
	XXX_unrecognized         []byte                                                                                      `json:"-"`
	XXX_sizecache            int32                                                                                       `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) ProtoMessage() {}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) GetTaskSizeBlockList() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType {
	if m != nil {
		return m.TaskSizeBlockList
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) GetTaskMemoryStatsList() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType {
	if m != nil {
		return m.TaskMemoryStatsList
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) GetTaskMemoryTotalBytes() uint64 {
	if m != nil && m.TaskMemoryTotalBytes != nil {
		return *m.TaskMemoryTotalBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) GetTaskMemoryTotalMaxBytes() uint64 {
	if m != nil && m.TaskMemoryTotalMaxBytes != nil {
		return *m.TaskMemoryTotalMaxBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) GetTaskMemoryTotalFreeBytes() uint64 {
	if m != nil && m.TaskMemoryTotalFreeBytes != nil {
		return *m.TaskMemoryTotalFreeBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType struct {
	TaskSizeBlock        []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList `protobuf:"bytes,151,rep,name=task_size_block,json=taskSizeBlock" json:"task_size_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                        `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) GetTaskSizeBlock() []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList {
	if m != nil {
		return m.TaskSizeBlock
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList struct {
	TsbSize              *uint32  `protobuf:"varint,51,opt,name=tsb_size,json=tsbSize" json:"tsb_size,omitempty"`
	TsbAllocBytes        *uint32  `protobuf:"varint,52,opt,name=tsb_alloc_bytes,json=tsbAllocBytes" json:"tsb_alloc_bytes,omitempty"`
	TsbAllocs            *uint32  `protobuf:"varint,53,opt,name=tsb_allocs,json=tsbAllocs" json:"tsb_allocs,omitempty"`
	TsbMaxAllocs         *uint32  `protobuf:"varint,54,opt,name=tsb_max_allocs,json=tsbMaxAllocs" json:"tsb_max_allocs,omitempty"`
	TsbMaxBytes          *uint64  `protobuf:"varint,55,opt,name=tsb_max_bytes,json=tsbMaxBytes" json:"tsb_max_bytes,omitempty"`
	TsbFreeBytes         *uint64  `protobuf:"varint,56,opt,name=tsb_free_bytes,json=tsbFreeBytes" json:"tsb_free_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 0, 0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbSize() uint32 {
	if m != nil && m.TsbSize != nil {
		return *m.TsbSize
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbAllocBytes() uint32 {
	if m != nil && m.TsbAllocBytes != nil {
		return *m.TsbAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbAllocs() uint32 {
	if m != nil && m.TsbAllocs != nil {
		return *m.TsbAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbMaxAllocs() uint32 {
	if m != nil && m.TsbMaxAllocs != nil {
		return *m.TsbMaxAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbMaxBytes() uint64 {
	if m != nil && m.TsbMaxBytes != nil {
		return *m.TsbMaxBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) GetTsbFreeBytes() uint64 {
	if m != nil && m.TsbFreeBytes != nil {
		return *m.TsbFreeBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType struct {
	TaskMemoryStats      []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList `protobuf:"bytes,151,rep,name=task_memory_stats,json=taskMemoryStats" json:"task_memory_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                            `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 0, 1}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) GetTaskMemoryStats() []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList {
	if m != nil {
		return m.TaskMemoryStats
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList struct {
	TmsName              *string  `protobuf:"bytes,51,opt,name=tms_name,json=tmsName" json:"tms_name,omitempty"`
	TmsAllocs            *uint32  `protobuf:"varint,52,opt,name=tms_allocs,json=tmsAllocs" json:"tms_allocs,omitempty"`
	TmsAllocBytes        *uint64  `protobuf:"varint,53,opt,name=tms_alloc_bytes,json=tmsAllocBytes" json:"tms_alloc_bytes,omitempty"`
	TmsMaxAllocs         *uint32  `protobuf:"varint,54,opt,name=tms_max_allocs,json=tmsMaxAllocs" json:"tms_max_allocs,omitempty"`
	TmsMaxBytes          *uint64  `protobuf:"varint,55,opt,name=tms_max_bytes,json=tmsMaxBytes" json:"tms_max_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 0, 1, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) GetTmsName() string {
	if m != nil && m.TmsName != nil {
		return *m.TmsName
	}
	return ""
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) GetTmsAllocs() uint32 {
	if m != nil && m.TmsAllocs != nil {
		return *m.TmsAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) GetTmsAllocBytes() uint64 {
	if m != nil && m.TmsAllocBytes != nil {
		return *m.TmsAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) GetTmsMaxAllocs() uint32 {
	if m != nil && m.TmsMaxAllocs != nil {
		return *m.TmsMaxAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) GetTmsMaxBytes() uint64 {
	if m != nil && m.TmsMaxBytes != nil {
		return *m.TmsMaxBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType struct {
	TaskBlockList           *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType    `protobuf:"bytes,151,opt,name=task_block_list,json=taskBlockList" json:"task_block_list,omitempty"`
	TaskLitePageList        *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType `protobuf:"bytes,152,opt,name=task_lite_page_list,json=taskLitePageList" json:"task_lite_page_list,omitempty"`
	TaskMemoryTotalBytes    *uint64                                                                                    `protobuf:"varint,52,opt,name=task_memory_total_bytes,json=taskMemoryTotalBytes" json:"task_memory_total_bytes,omitempty"`
	TaskMemoryTotalMaxBytes *uint64                                                                                    `protobuf:"varint,53,opt,name=task_memory_total_max_bytes,json=taskMemoryTotalMaxBytes" json:"task_memory_total_max_bytes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                                                                   `json:"-"`
	XXX_unrecognized        []byte                                                                                     `json:"-"`
	XXX_sizecache           int32                                                                                      `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) ProtoMessage() {}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 1}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) GetTaskBlockList() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType {
	if m != nil {
		return m.TaskBlockList
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) GetTaskLitePageList() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType {
	if m != nil {
		return m.TaskLitePageList
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) GetTaskMemoryTotalBytes() uint64 {
	if m != nil && m.TaskMemoryTotalBytes != nil {
		return *m.TaskMemoryTotalBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) GetTaskMemoryTotalMaxBytes() uint64 {
	if m != nil && m.TaskMemoryTotalMaxBytes != nil {
		return *m.TaskMemoryTotalMaxBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType struct {
	TaskBlock            []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList `protobuf:"bytes,151,rep,name=task_block,json=taskBlock" json:"task_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                  `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 1, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) GetTaskBlock() []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList {
	if m != nil {
		return m.TaskBlock
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList struct {
	TbName               *string  `protobuf:"bytes,51,opt,name=tb_name,json=tbName" json:"tb_name,omitempty"`
	TbSize               *uint32  `protobuf:"varint,52,opt,name=tb_size,json=tbSize" json:"tb_size,omitempty"`
	TbAllocSize          *uint32  `protobuf:"varint,53,opt,name=tb_alloc_size,json=tbAllocSize" json:"tb_alloc_size,omitempty"`
	TbAllocBlocks        *uint32  `protobuf:"varint,54,opt,name=tb_alloc_blocks,json=tbAllocBlocks" json:"tb_alloc_blocks,omitempty"`
	TbAllocBytes         *uint64  `protobuf:"varint,55,opt,name=tb_alloc_bytes,json=tbAllocBytes" json:"tb_alloc_bytes,omitempty"`
	TbMaxAllocBlocks     *uint32  `protobuf:"varint,56,opt,name=tb_max_alloc_blocks,json=tbMaxAllocBlocks" json:"tb_max_alloc_blocks,omitempty"`
	TbMaxAllocBytes      *uint64  `protobuf:"varint,57,opt,name=tb_max_alloc_bytes,json=tbMaxAllocBytes" json:"tb_max_alloc_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 1, 0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbName() string {
	if m != nil && m.TbName != nil {
		return *m.TbName
	}
	return ""
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbSize() uint32 {
	if m != nil && m.TbSize != nil {
		return *m.TbSize
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbAllocSize() uint32 {
	if m != nil && m.TbAllocSize != nil {
		return *m.TbAllocSize
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbAllocBlocks() uint32 {
	if m != nil && m.TbAllocBlocks != nil {
		return *m.TbAllocBlocks
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbAllocBytes() uint64 {
	if m != nil && m.TbAllocBytes != nil {
		return *m.TbAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbMaxAllocBlocks() uint32 {
	if m != nil && m.TbMaxAllocBlocks != nil {
		return *m.TbMaxAllocBlocks
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) GetTbMaxAllocBytes() uint64 {
	if m != nil && m.TbMaxAllocBytes != nil {
		return *m.TbMaxAllocBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType struct {
	TaskLitePage         []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList `protobuf:"bytes,151,rep,name=task_lite_page,json=taskLitePage" json:"task_lite_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                        `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 1, 1}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) GetTaskLitePage() []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList {
	if m != nil {
		return m.TaskLitePage
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList struct {
	TlpName              *string  `protobuf:"bytes,51,opt,name=tlp_name,json=tlpName" json:"tlp_name,omitempty"`
	TlpAllocBytes        *uint64  `protobuf:"varint,52,opt,name=tlp_alloc_bytes,json=tlpAllocBytes" json:"tlp_alloc_bytes,omitempty"`
	TlpMaxAllocBytes     *uint64  `protobuf:"varint,53,opt,name=tlp_max_alloc_bytes,json=tlpMaxAllocBytes" json:"tlp_max_alloc_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 1, 1, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) GetTlpName() string {
	if m != nil && m.TlpName != nil {
		return *m.TlpName
	}
	return ""
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) GetTlpAllocBytes() uint64 {
	if m != nil && m.TlpAllocBytes != nil {
		return *m.TlpAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) GetTlpMaxAllocBytes() uint64 {
	if m != nil && m.TlpMaxAllocBytes != nil {
		return *m.TlpMaxAllocBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType struct {
	TaskMallocList          *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType `protobuf:"bytes,151,opt,name=task_malloc_list,json=taskMallocList" json:"task_malloc_list,omitempty"`
	TaskMemoryTotalBytes    *uint64                                                                                    `protobuf:"varint,57,opt,name=task_memory_total_bytes,json=taskMemoryTotalBytes" json:"task_memory_total_bytes,omitempty"`
	TaskMemoryTotalMaxBytes *uint64                                                                                    `protobuf:"varint,58,opt,name=task_memory_total_max_bytes,json=taskMemoryTotalMaxBytes" json:"task_memory_total_max_bytes,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                                                                   `json:"-"`
	XXX_unrecognized        []byte                                                                                     `json:"-"`
	XXX_sizecache           int32                                                                                      `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) ProtoMessage() {}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 2}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) GetTaskMallocList() *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType {
	if m != nil {
		return m.TaskMallocList
	}
	return nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) GetTaskMemoryTotalBytes() uint64 {
	if m != nil && m.TaskMemoryTotalBytes != nil {
		return *m.TaskMemoryTotalBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) GetTaskMemoryTotalMaxBytes() uint64 {
	if m != nil && m.TaskMemoryTotalMaxBytes != nil {
		return *m.TaskMemoryTotalMaxBytes
	}
	return 0
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType struct {
	TaskMalloc           []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList `protobuf:"bytes,151,rep,name=task_malloc,json=taskMalloc" json:"task_malloc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                      `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 2, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) GetTaskMalloc() []*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList {
	if m != nil {
		return m.TaskMalloc
	}
	return nil
}

type JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList struct {
	TmName               *string  `protobuf:"bytes,51,opt,name=tm_name,json=tmName" json:"tm_name,omitempty"`
	TmAllocs             *uint32  `protobuf:"varint,52,opt,name=tm_allocs,json=tmAllocs" json:"tm_allocs,omitempty"`
	TmAllocBytes         *uint64  `protobuf:"varint,53,opt,name=tm_alloc_bytes,json=tmAllocBytes" json:"tm_alloc_bytes,omitempty"`
	TmMaxAllocs          *uint32  `protobuf:"varint,54,opt,name=tm_max_allocs,json=tmMaxAllocs" json:"tm_max_allocs,omitempty"`
	TmMaxAllocBytes      *uint64  `protobuf:"varint,55,opt,name=tm_max_alloc_bytes,json=tmMaxAllocBytes" json:"tm_max_alloc_bytes,omitempty"`
	TmFunctionCalls      *uint32  `protobuf:"varint,56,opt,name=tm_function_calls,json=tmFunctionCalls" json:"tm_function_calls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) Reset() {
	*m = JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList{}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) ProtoMessage() {
}
func (*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) Descriptor() ([]byte, []int) {
	return fileDescriptor_556964e7067b5362, []int{0, 0, 2, 0, 0}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList.Merge(m, src)
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) XXX_Size() int {
	return m.Size()
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList proto.InternalMessageInfo

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmName() string {
	if m != nil && m.TmName != nil {
		return *m.TmName
	}
	return ""
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmAllocs() uint32 {
	if m != nil && m.TmAllocs != nil {
		return *m.TmAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmAllocBytes() uint64 {
	if m != nil && m.TmAllocBytes != nil {
		return *m.TmAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmMaxAllocs() uint32 {
	if m != nil && m.TmMaxAllocs != nil {
		return *m.TmMaxAllocs
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmMaxAllocBytes() uint64 {
	if m != nil && m.TmMaxAllocBytes != nil {
		return *m.TmMaxAllocBytes
	}
	return 0
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) GetTmFunctionCalls() uint32 {
	if m != nil && m.TmFunctionCalls != nil {
		return *m.TmFunctionCalls
	}
	return 0
}

var E_JnprJunosTaskMemoryExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosTaskMemory)(nil),
	Field:         47,
	Name:          "jnpr_junos_task_memory_ext",
	Tag:           "bytes,47,opt,name=jnpr_junos_task_memory_ext",
	Filename:      "junos-xmlproxyd_junos-rtg-task-memory.proto",
}

func init() {
	proto.RegisterType((*JunosTaskMemory)(nil), "junos_task_memory")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationType)(nil), "junos_task_memory.task_memory_information_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType)(nil), "junos_task_memory.task_memory_information_type.task_memory_overall_report_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType)(nil), "junos_task_memory.task_memory_information_type.task_memory_overall_report_type.task_size_block_list_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList)(nil), "junos_task_memory.task_memory_information_type.task_memory_overall_report_type.task_size_block_list_type.task_size_block_list")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType)(nil), "junos_task_memory.task_memory_information_type.task_memory_overall_report_type.task_memory_stats_list_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList)(nil), "junos_task_memory.task_memory_information_type.task_memory_overall_report_type.task_memory_stats_list_type.task_memory_stats_list")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType)(nil), "junos_task_memory.task_memory_information_type.task_memory_allocator_report_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType)(nil), "junos_task_memory.task_memory_information_type.task_memory_allocator_report_type.task_block_list_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList)(nil), "junos_task_memory.task_memory_information_type.task_memory_allocator_report_type.task_block_list_type.task_block_list")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType)(nil), "junos_task_memory.task_memory_information_type.task_memory_allocator_report_type.task_lite_page_list_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList)(nil), "junos_task_memory.task_memory_information_type.task_memory_allocator_report_type.task_lite_page_list_type.task_lite_page_list")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType)(nil), "junos_task_memory.task_memory_information_type.task_memory_malloc_usage_report_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType)(nil), "junos_task_memory.task_memory_information_type.task_memory_malloc_usage_report_type.task_malloc_list_type")
	proto.RegisterType((*JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList)(nil), "junos_task_memory.task_memory_information_type.task_memory_malloc_usage_report_type.task_malloc_list_type.task_malloc_list")
	proto.RegisterExtension(E_JnprJunosTaskMemoryExt)
}

func init() {
	proto.RegisterFile("junos-xmlproxyd_junos-rtg-task-memory.proto", fileDescriptor_556964e7067b5362)
}

var fileDescriptor_556964e7067b5362 = []byte{
	// 1347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x4f, 0x6f, 0xdc, 0xc4,
	0x1b, 0x96, 0x9b, 0x5f, 0xff, 0x64, 0xb6, 0xdb, 0x24, 0xee, 0x9f, 0x6c, 0x9d, 0x1f, 0x21, 0x94,
	0x08, 0x45, 0x54, 0xbb, 0x2b, 0x4a, 0xd2, 0xa4, 0x69, 0x85, 0xe8, 0x36, 0x54, 0x6a, 0xd5, 0xb4,
	0xc5, 0x49, 0x2f, 0x5c, 0xcc, 0xec, 0x66, 0xb2, 0xf1, 0xc6, 0x63, 0x5b, 0x9e, 0x37, 0x61, 0xb7,
	0x48, 0x1c, 0x7a, 0x07, 0x54, 0x21, 0xa0, 0x80, 0x40, 0xe2, 0x80, 0xb8, 0x70, 0xe0, 0xc6, 0x57,
	0x40, 0x70, 0x41, 0xe2, 0x0b, 0xa0, 0x1c, 0xb9, 0x20, 0xc1, 0x17, 0x40, 0x33, 0x63, 0xaf, 0x67,
	0x6c, 0x6f, 0x42, 0xdb, 0x24, 0xc7, 0x9d, 0xf7, 0x7d, 0xde, 0x79, 0x66, 0x9e, 0xf7, 0x7d, 0x66,
	0x8d, 0x2e, 0x76, 0xb6, 0xfc, 0x80, 0x55, 0xbb, 0xd4, 0x0b, 0xa3, 0xa0, 0xdb, 0x5b, 0x73, 0xe4,
	0xef, 0x08, 0xda, 0x55, 0xc0, 0x6c, 0xb3, 0x4a, 0x09, 0x0d, 0xa2, 0x5e, 0x2d, 0x8c, 0x02, 0x08,
	0xac, 0xd3, 0x40, 0x3c, 0x42, 0x09, 0x44, 0x3d, 0x07, 0x82, 0x50, 0x2e, 0x5e, 0x78, 0x3c, 0x8d,
	0xc6, 0x04, 0xc8, 0xe1, 0x00, 0x47, 0x02, 0xcc, 0x0d, 0x34, 0xae, 0xfc, 0x74, 0x5c, 0x7f, 0x3d,
	0x88, 0x28, 0x06, 0x37, 0xf0, 0x2b, 0x9f, 0x1b, 0x53, 0xc6, 0x4c, 0xe9, 0x52, 0xbd, 0x96, 0x43,
	0xd5, 0x06, 0x40, 0x1c, 0xe8, 0x85, 0xc4, 0x3e, 0xcb, 0xa3, 0xcb, 0x22, 0x78, 0x2b, 0x8d, 0x59,
	0x8f, 0x5f, 0x46, 0xff, 0xdf, 0x0d, 0x67, 0x7e, 0x68, 0x20, 0x4b, 0x4d, 0x08, 0xb6, 0x49, 0x84,
	0x3d, 0xcf, 0x89, 0x48, 0x18, 0x44, 0x90, 0xd0, 0xb9, 0xf7, 0x94, 0x74, 0x6a, 0x83, 0x4b, 0x4a,
	0xba, 0xe3, 0x29, 0xdd, 0x7b, 0x32, 0x6c, 0x8b, 0xa8, 0xf9, 0x89, 0xa1, 0x13, 0xc6, 0x9e, 0x17,
	0xb4, 0x30, 0x04, 0x51, 0xc2, 0xe8, 0x89, 0x64, 0xf4, 0xf6, 0xf3, 0x30, 0xca, 0x16, 0x95, 0x9c,
	0xce, 0xa7, 0x9c, 0xae, 0x27, 0x09, 0x31, 0xab, 0xaf, 0x0c, 0xf4, 0xa2, 0x5a, 0x80, 0x8a, 0x0a,
	0xce, 0x16, 0xc3, 0x6d, 0x92, 0x10, 0xfb, 0x42, 0x12, 0x5b, 0x7d, 0x1e, 0x62, 0x05, 0x75, 0x25,
	0xb7, 0x89, 0x94, 0xdb, 0xb2, 0xc8, 0x79, 0xc0, 0x53, 0x62, 0x76, 0x57, 0x75, 0x09, 0xd7, 0x7a,
	0x3e, 0xa6, 0x6e, 0x4b, 0x9e, 0x92, 0x55, 0x5e, 0x9f, 0x32, 0x66, 0xfe, 0xa7, 0x5e, 0xf8, 0x92,
	0x8c, 0x8b, 0x33, 0x32, 0xb3, 0x81, 0x26, 0x75, 0x06, 0xdd, 0x6c, 0x81, 0x59, 0x51, 0xc0, 0x52,
	0x19, 0x74, 0xf5, 0x1a, 0xaf, 0xa1, 0xb3, 0x6a, 0x8d, 0x26, 0x63, 0x4e, 0xb3, 0x07, 0x84, 0x55,
	0xe6, 0x04, 0xd4, 0x4c, 0xa1, 0x0d, 0xc6, 0x1a, 0x3c, 0x62, 0x2e, 0xa0, 0xf3, 0xd9, 0x6d, 0x53,
	0xd8, 0x65, 0x01, 0x3b, 0xab, 0xed, 0xd8, 0x47, 0x5e, 0x43, 0x13, 0x2a, 0x32, 0xe4, 0x57, 0xb5,
	0x86, 0x01, 0xc7, 0xd8, 0xf9, 0xec, 0x71, 0xef, 0xe3, 0x36, 0x59, 0xc2, 0x80, 0x25, 0xfa, 0x46,
	0x56, 0xc8, 0x6e, 0xae, 0xc2, 0x42, 0xc1, 0x79, 0xf5, 0x22, 0x99, 0xf3, 0xae, 0xb9, 0x51, 0x0c,
	0xbd, 0x92, 0x3d, 0xef, 0x92, 0x1b, 0x0d, 0x3c, 0x6f, 0x0a, 0x5b, 0x2c, 0x38, 0x6f, 0x1f, 0x79,
	0x5d, 0x17, 0x08, 0x02, 0xc0, 0x9e, 0xc4, 0x39, 0xae, 0xef, 0x6c, 0x31, 0x52, 0xb9, 0x2a, 0xe0,
	0x4a, 0xfb, 0xae, 0xf2, 0x1c, 0x81, 0xbe, 0xe5, 0x3f, 0x60, 0xc4, 0x5c, 0xd2, 0x0f, 0xad, 0x96,
	0x08, 0x49, 0xd4, 0x22, 0x3e, 0x54, 0xae, 0x4d, 0x19, 0x33, 0x65, 0xb5, 0xcd, 0xd2, 0x1a, 0xf7,
	0x65, 0x8a, 0xf5, 0x0f, 0xd2, 0xcb, 0x14, 0xcc, 0x35, 0x1f, 0x94, 0x33, 0x22, 0x87, 0xb9, 0x0f,
	0x89, 0xd3, 0xf4, 0x82, 0xd6, 0xa6, 0xe3, 0xb9, 0xac, 0x6f, 0x24, 0xee, 0x3e, 0x1b, 0x49, 0xad,
	0x68, 0x33, 0x39, 0x32, 0x63, 0x3c, 0xb4, 0xe2, 0x3e, 0x24, 0x0d, 0x1e, 0xb8, 0xe3, 0x32, 0x30,
	0xbf, 0x35, 0xd0, 0x39, 0xb5, 0x20, 0x03, 0x0c, 0x4c, 0xf2, 0x8b, 0x6d, 0x65, 0xf3, 0x40, 0xf8,
	0xe5, 0xb6, 0x93, 0x0c, 0x4f, 0xa7, 0xb7, 0xbd, 0xc2, 0x43, 0x82, 0xe3, 0x9c, 0xfe, 0x36, 0x28,
	0x5a, 0xc5, 0x93, 0x7c, 0xa6, 0x48, 0xa3, 0xec, 0x54, 0x48, 0x98, 0x98, 0x2a, 0x01, 0x9d, 0xcd,
	0x4e, 0x85, 0x80, 0xf2, 0xb1, 0x12, 0xe8, 0x37, 0x74, 0xd3, 0x95, 0xe8, 0xf5, 0x88, 0x10, 0x6d,
	0x8e, 0x2b, 0x19, 0xf8, 0xcd, 0x88, 0x10, 0x81, 0xb7, 0x7e, 0x1a, 0x8a, 0xdb, 0xbb, 0x48, 0x09,
	0xf3, 0x7b, 0x03, 0x8d, 0x64, 0xa2, 0xbc, 0x1f, 0x86, 0x66, 0x4a, 0x97, 0x3e, 0x38, 0xb4, 0x7e,
	0x28, 0x8c, 0xd8, 0x65, 0xad, 0x49, 0xac, 0xbf, 0x06, 0xb4, 0xaf, 0x39, 0x85, 0x4e, 0x00, 0x6b,
	0x8a, 0x65, 0x21, 0x43, 0xb9, 0x71, 0xf4, 0xd1, 0x9b, 0x47, 0x4e, 0x18, 0xf6, 0x71, 0x60, 0x4d,
	0x8e, 0x37, 0x5f, 0x41, 0x23, 0x3c, 0x43, 0x1a, 0x78, 0x7a, 0xe9, 0x65, 0xbb, 0x0c, 0xac, 0x29,
	0x7c, 0x52, 0x5e, 0xf5, 0x0b, 0x08, 0xf5, 0xf3, 0xe4, 0xc5, 0x96, 0xed, 0xe1, 0x24, 0x85, 0x99,
	0xd3, 0xe8, 0x14, 0x0f, 0x73, 0xe5, 0xe2, 0x94, 0xcb, 0x22, 0xe5, 0x24, 0xb0, 0xe6, 0x32, 0xee,
	0xc6, 0x59, 0x17, 0x50, 0x39, 0xc9, 0x52, 0x5d, 0xaf, 0x24, 0x93, 0xe4, 0x46, 0x71, 0x25, 0x45,
	0x45, 0x69, 0x6c, 0xbc, 0x52, 0xaa, 0xdc, 0x37, 0x43, 0x7a, 0xe3, 0x64, 0x7a, 0xd4, 0xfc, 0xd1,
	0x40, 0x63, 0xb9, 0x78, 0xa2, 0xde, 0x23, 0xe3, 0x10, 0xc7, 0x65, 0x40, 0xcc, 0x1e, 0xc9, 0x4c,
	0x91, 0xf5, 0xeb, 0xc0, 0x29, 0x17, 0x32, 0x52, 0xe6, 0xf8, 0x98, 0x4a, 0x19, 0x87, 0x53, 0x19,
	0x29, 0xbb, 0x8b, 0x29, 0x11, 0xf2, 0x50, 0xa6, 0x3e, 0x7d, 0x5c, 0x1e, 0xca, 0xe2, 0x8b, 0xe7,
	0x2a, 0x27, 0x61, 0x6d, 0x36, 0xca, 0x49, 0x4e, 0x7a, 0xf9, 0x94, 0x15, 0xc9, 0x48, 0x99, 0x2e,
	0x63, 0x9c, 0xa5, 0xcb, 0x28, 0x92, 0xa4, 0x40, 0x7f, 0x0e, 0xa3, 0x97, 0xf6, 0xfc, 0xef, 0x62,
	0x7e, 0x9c, 0x8c, 0x58, 0xde, 0x72, 0xd7, 0xf7, 0xfd, 0x9f, 0x52, 0x2d, 0xb3, 0x93, 0x74, 0x33,
	0x31, 0x4a, 0xa9, 0xd7, 0x7e, 0x69, 0x20, 0xe1, 0x6f, 0x8e, 0xe7, 0x02, 0x91, 0x6f, 0xac, 0x6a,
	0xb4, 0x9d, 0x03, 0x62, 0xa5, 0xef, 0x26, 0x99, 0x8d, 0xf2, 0xc8, 0x1d, 0x17, 0x08, 0x7f, 0xc5,
	0xf7, 0x32, 0xd9, 0xd9, 0x67, 0x37, 0xd9, 0xb9, 0x5d, 0x4d, 0xd6, 0xfa, 0x65, 0x28, 0x36, 0x97,
	0xac, 0x3f, 0x7e, 0x66, 0x20, 0x94, 0x06, 0x92, 0xe1, 0xda, 0x3e, 0x1c, 0xdd, 0xb2, 0x8b, 0xf6,
	0x70, 0x5f, 0x47, 0xeb, 0xc9, 0x91, 0x5c, 0x57, 0x99, 0x93, 0xe8, 0x38, 0x34, 0x0b, 0x26, 0xe8,
	0x18, 0x34, 0xc5, 0x00, 0x8d, 0x8b, 0xb8, 0x30, 0x4a, 0x39, 0x3d, 0xc7, 0x40, 0x1a, 0x24, 0x6f,
	0xf6, 0xc4, 0x1f, 0x45, 0x58, 0x7a, 0x5f, 0x09, 0xa4, 0xf5, 0xf5, 0x4d, 0xb4, 0xef, 0xa1, 0x7c,
	0xcf, 0x64, 0x6e, 0xca, 0x71, 0x96, 0xe0, 0x25, 0xc7, 0x4b, 0xf7, 0xda, 0xf9, 0xd8, 0xdb, 0x54,
	0xab, 0xad, 0xa2, 0xd3, 0xa0, 0x58, 0x69, 0x52, 0x71, 0x41, 0x54, 0x1c, 0x85, 0xbe, 0x9f, 0xc6,
	0x45, 0x2f, 0x22, 0x53, 0x4f, 0x57, 0xfe, 0xd2, 0x8d, 0x28, 0xd9, 0x42, 0xcc, 0xdf, 0x8f, 0xa0,
	0xca, 0xa0, 0x86, 0x33, 0xbf, 0x33, 0xd0, 0x29, 0x3d, 0xb8, 0x2f, 0xef, 0xdd, 0xd3, 0xb5, 0x7d,
	0x51, 0xc0, 0x3e, 0xa9, 0x8e, 0x82, 0xf5, 0x51, 0xf1, 0x8c, 0x0a, 0x9b, 0xf4, 0xc2, 0x42, 0x9b,
	0xf4, 0x42, 0xa1, 0x32, 0x17, 0xca, 0x0b, 0x73, 0xaf, 0x1d, 0xf7, 0x41, 0x2f, 0xcc, 0x48, 0xe0,
	0x85, 0xb9, 0x4b, 0x95, 0x93, 0x32, 0x0a, 0x5e, 0xa8, 0xdf, 0xea, 0xce, 0x51, 0x34, 0xfd, 0x5f,
	0xbe, 0x87, 0xcc, 0x4f, 0x0d, 0x34, 0x2a, 0x13, 0x65, 0x86, 0x6a, 0x78, 0x9d, 0x83, 0xf8, 0x02,
	0xab, 0x65, 0x77, 0x93, 0xd6, 0x22, 0x64, 0x96, 0x5f, 0x64, 0x7b, 0x19, 0xcb, 0x95, 0x67, 0x37,
	0x96, 0xc5, 0xdd, 0x8d, 0xe5, 0x87, 0xa1, 0xe4, 0x7b, 0x24, 0x43, 0xcf, 0xfc, 0xda, 0x40, 0x25,
	0x25, 0x92, 0x74, 0xe1, 0xfb, 0x87, 0x77, 0x43, 0xb9, 0x55, 0x1b, 0xa5, 0x57, 0x66, 0xfd, 0x5d,
	0x20, 0xa3, 0x70, 0x18, 0x5a, 0xe8, 0x30, 0x54, 0xf4, 0xde, 0x04, 0x1a, 0x06, 0xaa, 0xbf, 0xd0,
	0x27, 0x80, 0x2a, 0xff, 0x9f, 0x68, 0x41, 0xaf, 0x9d, 0x8c, 0x33, 0xe4, 0x7d, 0x8b, 0x87, 0x37,
	0xff, 0x3a, 0x97, 0x80, 0xa6, 0x8f, 0x33, 0xb7, 0x03, 0x9a, 0xeb, 0xdc, 0xf9, 0xd8, 0x0e, 0xa8,
	0xd6, 0xb8, 0xe6, 0xab, 0x68, 0x0c, 0xa8, 0xb3, 0xbe, 0xe5, 0xb7, 0xc4, 0xa5, 0xb5, 0xb0, 0xe7,
	0x25, 0x46, 0x33, 0x02, 0xf4, 0x66, 0xbc, 0x7e, 0x83, 0x2f, 0x2f, 0xb6, 0x91, 0xd5, 0xf1, 0xc3,
	0xc8, 0xc9, 0x69, 0xe0, 0x90, 0x2e, 0x98, 0xe3, 0xb5, 0xdb, 0x5b, 0xbe, 0x1b, 0x92, 0xe8, 0x2e,
	0x81, 0xf7, 0x82, 0x68, 0x93, 0xad, 0x10, 0x9f, 0x05, 0x11, 0xab, 0xd4, 0x45, 0x73, 0x9b, 0x79,
	0xe9, 0xec, 0x73, 0xbc, 0xdc, 0x6d, 0xbe, 0xbc, 0xda, 0xef, 0x90, 0xb7, 0xba, 0xd0, 0x78, 0xf7,
	0xe7, 0x9d, 0x49, 0xe3, 0xb7, 0x9d, 0x49, 0xe3, 0x8f, 0x9d, 0x49, 0xe3, 0x1d, 0xbb, 0xed, 0x02,
	0x07, 0xf3, 0xda, 0x35, 0x9f, 0x40, 0xdd, 0x6d, 0x91, 0x26, 0x89, 0xda, 0xf5, 0x0d, 0x82, 0x3d,
	0xd8, 0x68, 0x06, 0x50, 0x75, 0xfd, 0x36, 0x61, 0x50, 0xed, 0x80, 0x5b, 0xf5, 0x31, 0xb8, 0xdb,
	0xa4, 0x1e, 0x6e, 0xb6, 0xeb, 0x1d, 0x70, 0xeb, 0x78, 0x0d, 0x87, 0x40, 0x22, 0x56, 0x97, 0xac,
	0xeb, 0xac, 0xb5, 0x41, 0x28, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x6b, 0x64, 0x8b, 0x21,
	0x13, 0x00, 0x00,
}

func (m *JunosTaskMemory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TaskMemoryInformation != nil {
		{
			size, err := m.TaskMemoryInformation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TaskMemoryMallocUsageReport != nil {
		{
			size, err := m.TaskMemoryMallocUsageReport.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.TaskMemoryAllocatorReport != nil {
		{
			size, err := m.TaskMemoryAllocatorReport.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.TaskMemoryOverallReport != nil {
		{
			size, err := m.TaskMemoryOverallReport.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.TaskMemoryTotalBytesPercent != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalBytesPercent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.TaskMemoryTotalBytesInUse != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalBytesInUse))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.TaskMemoryMaxDirBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryMaxDirBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.TaskMemoryDirBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryDirBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.TaskMemoryMaxPageDataBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryMaxPageDataBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TaskMemoryPageDataBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryPageDataBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TaskMemoryMaxBssBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryMaxBssBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.TaskMemoryBssBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryBssBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TaskMemoryMaxDynamicAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryMaxDynamicAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TaskMemoryDynamicAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryDynamicAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TaskMemoryStatsList != nil {
		{
			size, err := m.TaskMemoryStatsList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.TaskSizeBlockList != nil {
		{
			size, err := m.TaskSizeBlockList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.TaskMemoryTotalFreeBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalFreeBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalMaxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TaskMemoryTotalBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskSizeBlock) > 0 {
		for iNdEx := len(m.TaskSizeBlock) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TaskSizeBlock[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TsbFreeBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbFreeBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TsbMaxBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbMaxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TsbMaxAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbMaxAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.TsbAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TsbAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TsbSize != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TsbSize))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskMemoryStats) > 0 {
		for iNdEx := len(m.TaskMemoryStats) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TaskMemoryStats[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TmsMaxBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmsMaxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TmsMaxAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmsMaxAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.TmsAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmsAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TmsAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmsAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TmsName != nil {
		i -= len(*m.TmsName)
		copy(dAtA[i:], *m.TmsName)
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(len(*m.TmsName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TaskLitePageList != nil {
		{
			size, err := m.TaskLitePageList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.TaskBlockList != nil {
		{
			size, err := m.TaskBlockList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalMaxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TaskMemoryTotalBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskBlock) > 0 {
		for iNdEx := len(m.TaskBlock) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TaskBlock[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TbMaxAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbMaxAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.TbMaxAllocBlocks != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbMaxAllocBlocks))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TbAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TbAllocBlocks != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbAllocBlocks))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.TbAllocSize != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbAllocSize))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TbSize != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TbSize))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TbName != nil {
		i -= len(*m.TbName)
		copy(dAtA[i:], *m.TbName)
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(len(*m.TbName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskLitePage) > 0 {
		for iNdEx := len(m.TaskLitePage) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TaskLitePage[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TlpMaxAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TlpMaxAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TlpAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TlpAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TlpName != nil {
		i -= len(*m.TlpName)
		copy(dAtA[i:], *m.TlpName)
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(len(*m.TlpName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TaskMallocList != nil {
		{
			size, err := m.TaskMallocList.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalMaxBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.TaskMemoryTotalBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TaskMemoryTotalBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskMalloc) > 0 {
		for iNdEx := len(m.TaskMalloc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TaskMalloc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TmFunctionCalls != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmFunctionCalls))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TmMaxAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmMaxAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TmMaxAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmMaxAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.TmAllocBytes != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmAllocBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.TmAllocs != nil {
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(*m.TmAllocs))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.TmName != nil {
		i -= len(*m.TmName)
		copy(dAtA[i:], *m.TmName)
		i = encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA, i, uint64(len(*m.TmName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintJunosXmlproxydJunosRtgTaskMemory(dAtA []byte, offset int, v uint64) int {
	offset -= sovJunosXmlproxydJunosRtgTaskMemory(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosTaskMemory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskMemoryInformation != nil {
		l = m.TaskMemoryInformation.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskMemoryDynamicAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryDynamicAllocs))
	}
	if m.TaskMemoryMaxDynamicAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryMaxDynamicAllocs))
	}
	if m.TaskMemoryBssBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryBssBytes))
	}
	if m.TaskMemoryMaxBssBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryMaxBssBytes))
	}
	if m.TaskMemoryPageDataBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryPageDataBytes))
	}
	if m.TaskMemoryMaxPageDataBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryMaxPageDataBytes))
	}
	if m.TaskMemoryDirBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryDirBytes))
	}
	if m.TaskMemoryMaxDirBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryMaxDirBytes))
	}
	if m.TaskMemoryTotalBytesInUse != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalBytesInUse))
	}
	if m.TaskMemoryTotalBytesPercent != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalBytesPercent))
	}
	if m.TaskMemoryOverallReport != nil {
		l = m.TaskMemoryOverallReport.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TaskMemoryAllocatorReport != nil {
		l = m.TaskMemoryAllocatorReport.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TaskMemoryMallocUsageReport != nil {
		l = m.TaskMemoryMallocUsageReport.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskMemoryTotalBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalBytes))
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalMaxBytes))
	}
	if m.TaskMemoryTotalFreeBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalFreeBytes))
	}
	if m.TaskSizeBlockList != nil {
		l = m.TaskSizeBlockList.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TaskMemoryStatsList != nil {
		l = m.TaskMemoryStatsList.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskSizeBlock) > 0 {
		for _, e := range m.TaskSizeBlock {
			l = e.Size()
			n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TsbSize != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbSize))
	}
	if m.TsbAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbAllocBytes))
	}
	if m.TsbAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbAllocs))
	}
	if m.TsbMaxAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbMaxAllocs))
	}
	if m.TsbMaxBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbMaxBytes))
	}
	if m.TsbFreeBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TsbFreeBytes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskMemoryStats) > 0 {
		for _, e := range m.TaskMemoryStats {
			l = e.Size()
			n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TmsName != nil {
		l = len(*m.TmsName)
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TmsAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmsAllocs))
	}
	if m.TmsAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmsAllocBytes))
	}
	if m.TmsMaxAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmsMaxAllocs))
	}
	if m.TmsMaxBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmsMaxBytes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskMemoryTotalBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalBytes))
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalMaxBytes))
	}
	if m.TaskBlockList != nil {
		l = m.TaskBlockList.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TaskLitePageList != nil {
		l = m.TaskLitePageList.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskBlock) > 0 {
		for _, e := range m.TaskBlock {
			l = e.Size()
			n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TbName != nil {
		l = len(*m.TbName)
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TbSize != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbSize))
	}
	if m.TbAllocSize != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbAllocSize))
	}
	if m.TbAllocBlocks != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbAllocBlocks))
	}
	if m.TbAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbAllocBytes))
	}
	if m.TbMaxAllocBlocks != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbMaxAllocBlocks))
	}
	if m.TbMaxAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TbMaxAllocBytes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskLitePage) > 0 {
		for _, e := range m.TaskLitePage {
			l = e.Size()
			n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TlpName != nil {
		l = len(*m.TlpName)
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TlpAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TlpAllocBytes))
	}
	if m.TlpMaxAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TlpMaxAllocBytes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TaskMemoryTotalBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalBytes))
	}
	if m.TaskMemoryTotalMaxBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TaskMemoryTotalMaxBytes))
	}
	if m.TaskMallocList != nil {
		l = m.TaskMallocList.Size()
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TaskMalloc) > 0 {
		for _, e := range m.TaskMalloc {
			l = e.Size()
			n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TmName != nil {
		l = len(*m.TmName)
		n += 2 + l + sovJunosXmlproxydJunosRtgTaskMemory(uint64(l))
	}
	if m.TmAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmAllocs))
	}
	if m.TmAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmAllocBytes))
	}
	if m.TmMaxAllocs != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmMaxAllocs))
	}
	if m.TmMaxAllocBytes != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmMaxAllocBytes))
	}
	if m.TmFunctionCalls != nil {
		n += 2 + sovJunosXmlproxydJunosRtgTaskMemory(uint64(*m.TmFunctionCalls))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovJunosXmlproxydJunosRtgTaskMemory(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozJunosXmlproxydJunosRtgTaskMemory(x uint64) (n int) {
	return sovJunosXmlproxydJunosRtgTaskMemory(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosTaskMemory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_task_memory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_task_memory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryInformation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMemoryInformation == nil {
				m.TaskMemoryInformation = &JunosTaskMemoryTaskMemoryInformationType{}
			}
			if err := m.TaskMemoryInformation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_information_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_information_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryDynamicAllocs", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryDynamicAllocs = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryMaxDynamicAllocs", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryMaxDynamicAllocs = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryBssBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryBssBytes = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryMaxBssBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryMaxBssBytes = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryPageDataBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryPageDataBytes = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryMaxPageDataBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryMaxPageDataBytes = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryDirBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryDirBytes = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryMaxDirBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryMaxDirBytes = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalBytesInUse", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalBytesInUse = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalBytesPercent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalBytesPercent = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryOverallReport", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMemoryOverallReport == nil {
				m.TaskMemoryOverallReport = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType{}
			}
			if err := m.TaskMemoryOverallReport.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryAllocatorReport", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMemoryAllocatorReport == nil {
				m.TaskMemoryAllocatorReport = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType{}
			}
			if err := m.TaskMemoryAllocatorReport.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryMallocUsageReport", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMemoryMallocUsageReport == nil {
				m.TaskMemoryMallocUsageReport = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType{}
			}
			if err := m.TaskMemoryMallocUsageReport.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_overall_report_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_overall_report_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalBytes = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalMaxBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalMaxBytes = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalFreeBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalFreeBytes = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskSizeBlockList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskSizeBlockList == nil {
				m.TaskSizeBlockList = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType{}
			}
			if err := m.TaskSizeBlockList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryStatsList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMemoryStatsList == nil {
				m.TaskMemoryStatsList = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType{}
			}
			if err := m.TaskMemoryStatsList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_size_block_list_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_size_block_list_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskSizeBlock", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskSizeBlock = append(m.TaskSizeBlock, &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList{})
			if err := m.TaskSizeBlock[len(m.TaskSizeBlock)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskSizeBlockListTypeTaskSizeBlockList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_size_block_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_size_block_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbSize", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbSize = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbAllocBytes", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbAllocBytes = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbAllocs = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbMaxAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbMaxAllocs = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbMaxBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbMaxBytes = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TsbFreeBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TsbFreeBytes = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_stats_list_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_stats_list_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryStats", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskMemoryStats = append(m.TaskMemoryStats, &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList{})
			if err := m.TaskMemoryStats[len(m.TaskMemoryStats)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryOverallReportTypeTaskMemoryStatsListTypeTaskMemoryStatsList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_stats_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_stats_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TmsName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmsAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmsAllocs = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmsAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmsAllocBytes = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmsMaxAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmsMaxAllocs = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmsMaxBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmsMaxBytes = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_allocator_report_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_allocator_report_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalBytes = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalMaxBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalMaxBytes = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskBlockList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskBlockList == nil {
				m.TaskBlockList = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType{}
			}
			if err := m.TaskBlockList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskLitePageList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskLitePageList == nil {
				m.TaskLitePageList = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType{}
			}
			if err := m.TaskLitePageList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_block_list_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_block_list_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskBlock", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskBlock = append(m.TaskBlock, &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList{})
			if err := m.TaskBlock[len(m.TaskBlock)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskBlockListTypeTaskBlockList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_block_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_block_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TbName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbSize", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbSize = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbAllocSize", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbAllocSize = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbAllocBlocks", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbAllocBlocks = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbAllocBytes = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbMaxAllocBlocks", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbMaxAllocBlocks = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TbMaxAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TbMaxAllocBytes = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_lite_page_list_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_lite_page_list_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskLitePage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskLitePage = append(m.TaskLitePage, &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList{})
			if err := m.TaskLitePage[len(m.TaskLitePage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryAllocatorReportTypeTaskLitePageListTypeTaskLitePageList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_lite_page_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_lite_page_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlpName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TlpName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlpAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlpAllocBytes = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlpMaxAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlpMaxAllocBytes = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_memory_malloc_usage_report_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_memory_malloc_usage_report_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalBytes = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMemoryTotalMaxBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TaskMemoryTotalMaxBytes = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMallocList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaskMallocList == nil {
				m.TaskMallocList = &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType{}
			}
			if err := m.TaskMallocList.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_malloc_list_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_malloc_list_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskMalloc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskMalloc = append(m.TaskMalloc, &JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList{})
			if err := m.TaskMalloc[len(m.TaskMalloc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosTaskMemoryTaskMemoryInformationTypeTaskMemoryMallocUsageReportTypeTaskMallocListTypeTaskMallocList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: task_malloc_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: task_malloc_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TmName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmAllocs = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmAllocBytes = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmMaxAllocs", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmMaxAllocs = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmMaxAllocBytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmMaxAllocBytes = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TmFunctionCalls", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TmFunctionCalls = &v
		default:
			iNdEx = preIndex
			skippy, err := skipJunosXmlproxydJunosRtgTaskMemory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipJunosXmlproxydJunosRtgTaskMemory(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupJunosXmlproxydJunosRtgTaskMemory
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthJunosXmlproxydJunosRtgTaskMemory        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowJunosXmlproxydJunosRtgTaskMemory          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupJunosXmlproxydJunosRtgTaskMemory = fmt.Errorf("proto: unexpected end of group")
)
