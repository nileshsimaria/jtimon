// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kmd_render.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosKeyManagement struct {
	IkeSecurityAssociations *JunosKeyManagementIkeSecurityAssociationsType `protobuf:"bytes,151,opt,name=ike_security_associations,json=ikeSecurityAssociations" json:"ike_security_associations,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                       `json:"-"`
	XXX_unrecognized        []byte                                         `json:"-"`
	XXX_sizecache           int32                                          `json:"-"`
}

func (m *JunosKeyManagement) Reset()         { *m = JunosKeyManagement{} }
func (m *JunosKeyManagement) String() string { return proto.CompactTextString(m) }
func (*JunosKeyManagement) ProtoMessage()    {}
func (*JunosKeyManagement) Descriptor() ([]byte, []int) {
	return fileDescriptor_17c775346df31e4a, []int{0}
}
func (m *JunosKeyManagement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosKeyManagement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosKeyManagement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosKeyManagement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosKeyManagement.Merge(m, src)
}
func (m *JunosKeyManagement) XXX_Size() int {
	return m.Size()
}
func (m *JunosKeyManagement) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosKeyManagement.DiscardUnknown(m)
}

var xxx_messageInfo_JunosKeyManagement proto.InternalMessageInfo

func (m *JunosKeyManagement) GetIkeSecurityAssociations() *JunosKeyManagementIkeSecurityAssociationsType {
	if m != nil {
		return m.IkeSecurityAssociations
	}
	return nil
}

type JunosKeyManagementIkeSecurityAssociationsType struct {
	IkeSecurityAssociation []*JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList `protobuf:"bytes,151,rep,name=ike_security_association,json=ikeSecurityAssociation" json:"ike_security_association,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                                                   `json:"-"`
	XXX_unrecognized       []byte                                                                     `json:"-"`
	XXX_sizecache          int32                                                                      `json:"-"`
}

func (m *JunosKeyManagementIkeSecurityAssociationsType) Reset() {
	*m = JunosKeyManagementIkeSecurityAssociationsType{}
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosKeyManagementIkeSecurityAssociationsType) ProtoMessage() {}
func (*JunosKeyManagementIkeSecurityAssociationsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_17c775346df31e4a, []int{0, 0}
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsType.Merge(m, src)
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsType proto.InternalMessageInfo

func (m *JunosKeyManagementIkeSecurityAssociationsType) GetIkeSecurityAssociation() []*JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList {
	if m != nil {
		return m.IkeSecurityAssociation
	}
	return nil
}

type JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList struct {
	RemoteIp                       *string  `protobuf:"bytes,51,opt,name=remote_ip,json=remoteIp" json:"remote_ip,omitempty"`
	LocalIp                        *string  `protobuf:"bytes,52,opt,name=local_ip,json=localIp" json:"local_ip,omitempty"`
	NumberIpsecSaCreated           *uint32  `protobuf:"varint,53,opt,name=number_ipsec_sa_created,json=numberIpsecSaCreated" json:"number_ipsec_sa_created,omitempty"`
	NumberIpsecSaDeleted           *uint32  `protobuf:"varint,54,opt,name=number_ipsec_sa_deleted,json=numberIpsecSaDeleted" json:"number_ipsec_sa_deleted,omitempty"`
	NumberIpsecSaRekey             *uint32  `protobuf:"varint,55,opt,name=number_ipsec_sa_rekey,json=numberIpsecSaRekey" json:"number_ipsec_sa_rekey,omitempty"`
	ExchangeType                   *string  `protobuf:"bytes,56,opt,name=exchange_type,json=exchangeType" json:"exchange_type,omitempty"`
	InBytes                        *uint32  `protobuf:"varint,57,opt,name=in_bytes,json=inBytes" json:"in_bytes,omitempty"`
	InPackets                      *uint32  `protobuf:"varint,58,opt,name=in_packets,json=inPackets" json:"in_packets,omitempty"`
	OutBytes                       *uint32  `protobuf:"varint,59,opt,name=out_bytes,json=outBytes" json:"out_bytes,omitempty"`
	OutPackets                     *uint32  `protobuf:"varint,60,opt,name=out_packets,json=outPackets" json:"out_packets,omitempty"`
	DeletePayloadReceived          *uint32  `protobuf:"varint,61,opt,name=delete_payload_received,json=deletePayloadReceived" json:"delete_payload_received,omitempty"`
	DeletePayloadTransmitted       *uint32  `protobuf:"varint,62,opt,name=delete_payload_transmitted,json=deletePayloadTransmitted" json:"delete_payload_transmitted,omitempty"`
	DpdRequestPayloadReceived      *uint32  `protobuf:"varint,63,opt,name=dpd_request_payload_received,json=dpdRequestPayloadReceived" json:"dpd_request_payload_received,omitempty"`
	DpdRequestPayloadTransmitted   *uint32  `protobuf:"varint,64,opt,name=dpd_request_payload_transmitted,json=dpdRequestPayloadTransmitted" json:"dpd_request_payload_transmitted,omitempty"`
	DpdResponsePayloadReceived     *uint32  `protobuf:"varint,65,opt,name=dpd_response_payload_received,json=dpdResponsePayloadReceived" json:"dpd_response_payload_received,omitempty"`
	DpdResponsePayloadTransmitted  *uint32  `protobuf:"varint,66,opt,name=dpd_response_payload_transmitted,json=dpdResponsePayloadTransmitted" json:"dpd_response_payload_transmitted,omitempty"`
	DpdResponsePayloadMissed       *uint32  `protobuf:"varint,67,opt,name=dpd_response_payload_missed,json=dpdResponsePayloadMissed" json:"dpd_response_payload_missed,omitempty"`
	DpdResponsePayloadMaximumDelay *uint32  `protobuf:"varint,68,opt,name=dpd_response_payload_maximum_delay,json=dpdResponsePayloadMaximumDelay" json:"dpd_response_payload_maximum_delay,omitempty"`
	DpdResponseSeqPayloadMissed    *uint32  `protobuf:"varint,69,opt,name=dpd_response_seq_payload_missed,json=dpdResponseSeqPayloadMissed" json:"dpd_response_seq_payload_missed,omitempty"`
	InvalidSpiNotifyReceived       *uint32  `protobuf:"varint,70,opt,name=invalid_spi_notify_received,json=invalidSpiNotifyReceived" json:"invalid_spi_notify_received,omitempty"`
	InvalidSpiNotifyTransmitted    *uint32  `protobuf:"varint,71,opt,name=invalid_spi_notify_transmitted,json=invalidSpiNotifyTransmitted" json:"invalid_spi_notify_transmitted,omitempty"`
	RoutingInstance                *string  `protobuf:"bytes,72,opt,name=routing_instance,json=routingInstance" json:"routing_instance,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) Reset() {
	*m = JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList{}
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) ProtoMessage() {}
func (*JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_17c775346df31e4a, []int{0, 0, 0}
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList.Merge(m, src)
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) XXX_Size() int {
	return m.Size()
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList proto.InternalMessageInfo

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetRemoteIp() string {
	if m != nil && m.RemoteIp != nil {
		return *m.RemoteIp
	}
	return ""
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetLocalIp() string {
	if m != nil && m.LocalIp != nil {
		return *m.LocalIp
	}
	return ""
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetNumberIpsecSaCreated() uint32 {
	if m != nil && m.NumberIpsecSaCreated != nil {
		return *m.NumberIpsecSaCreated
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetNumberIpsecSaDeleted() uint32 {
	if m != nil && m.NumberIpsecSaDeleted != nil {
		return *m.NumberIpsecSaDeleted
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetNumberIpsecSaRekey() uint32 {
	if m != nil && m.NumberIpsecSaRekey != nil {
		return *m.NumberIpsecSaRekey
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetExchangeType() string {
	if m != nil && m.ExchangeType != nil {
		return *m.ExchangeType
	}
	return ""
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetInBytes() uint32 {
	if m != nil && m.InBytes != nil {
		return *m.InBytes
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetInPackets() uint32 {
	if m != nil && m.InPackets != nil {
		return *m.InPackets
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetOutBytes() uint32 {
	if m != nil && m.OutBytes != nil {
		return *m.OutBytes
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetOutPackets() uint32 {
	if m != nil && m.OutPackets != nil {
		return *m.OutPackets
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDeletePayloadReceived() uint32 {
	if m != nil && m.DeletePayloadReceived != nil {
		return *m.DeletePayloadReceived
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDeletePayloadTransmitted() uint32 {
	if m != nil && m.DeletePayloadTransmitted != nil {
		return *m.DeletePayloadTransmitted
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdRequestPayloadReceived() uint32 {
	if m != nil && m.DpdRequestPayloadReceived != nil {
		return *m.DpdRequestPayloadReceived
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdRequestPayloadTransmitted() uint32 {
	if m != nil && m.DpdRequestPayloadTransmitted != nil {
		return *m.DpdRequestPayloadTransmitted
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdResponsePayloadReceived() uint32 {
	if m != nil && m.DpdResponsePayloadReceived != nil {
		return *m.DpdResponsePayloadReceived
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdResponsePayloadTransmitted() uint32 {
	if m != nil && m.DpdResponsePayloadTransmitted != nil {
		return *m.DpdResponsePayloadTransmitted
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdResponsePayloadMissed() uint32 {
	if m != nil && m.DpdResponsePayloadMissed != nil {
		return *m.DpdResponsePayloadMissed
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdResponsePayloadMaximumDelay() uint32 {
	if m != nil && m.DpdResponsePayloadMaximumDelay != nil {
		return *m.DpdResponsePayloadMaximumDelay
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetDpdResponseSeqPayloadMissed() uint32 {
	if m != nil && m.DpdResponseSeqPayloadMissed != nil {
		return *m.DpdResponseSeqPayloadMissed
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetInvalidSpiNotifyReceived() uint32 {
	if m != nil && m.InvalidSpiNotifyReceived != nil {
		return *m.InvalidSpiNotifyReceived
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetInvalidSpiNotifyTransmitted() uint32 {
	if m != nil && m.InvalidSpiNotifyTransmitted != nil {
		return *m.InvalidSpiNotifyTransmitted
	}
	return 0
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) GetRoutingInstance() string {
	if m != nil && m.RoutingInstance != nil {
		return *m.RoutingInstance
	}
	return ""
}

var E_JnprJunosKeyManagementExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosKeyManagement)(nil),
	Field:         48,
	Name:          "jnpr_junos_key_management_ext",
	Tag:           "bytes,48,opt,name=jnpr_junos_key_management_ext",
	Filename:      "kmd_render.proto",
}

func init() {
	proto.RegisterType((*JunosKeyManagement)(nil), "junos_key_management")
	proto.RegisterType((*JunosKeyManagementIkeSecurityAssociationsType)(nil), "junos_key_management.ike_security_associations_type")
	proto.RegisterType((*JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList)(nil), "junos_key_management.ike_security_associations_type.ike_security_association_list")
	proto.RegisterExtension(E_JnprJunosKeyManagementExt)
}

func init() { proto.RegisterFile("kmd_render.proto", fileDescriptor_17c775346df31e4a) }

var fileDescriptor_17c775346df31e4a = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x4f, 0x73, 0xdb, 0x44,
	0x18, 0xc6, 0x47, 0xc3, 0xa1, 0xc9, 0x86, 0x0e, 0x1d, 0xd1, 0x10, 0xd9, 0xa9, 0xdd, 0x4c, 0xb9,
	0x84, 0x43, 0x6c, 0x28, 0x6d, 0x81, 0xd2, 0x50, 0xf2, 0x8f, 0x92, 0x30, 0xed, 0x74, 0xe4, 0x9e,
	0xb8, 0x2c, 0x1b, 0xe9, 0xc5, 0x5e, 0x4b, 0xda, 0x5d, 0xef, 0xbe, 0x0a, 0xd6, 0x87, 0xe0, 0xcc,
	0x91, 0xaf, 0xc3, 0x91, 0xe1, 0x03, 0x30, 0x4c, 0x3e, 0x09, 0xb3, 0xbb, 0x72, 0xab, 0xd8, 0x4a,
	0x0e, 0x3d, 0xea, 0x7d, 0xde, 0xe7, 0xb7, 0x8f, 0x1e, 0x5b, 0x4b, 0xee, 0x64, 0x45, 0x4a, 0x35,
	0x88, 0x14, 0xf4, 0x40, 0x69, 0x89, 0xb2, 0xfb, 0x31, 0x42, 0x0e, 0x05, 0xa0, 0xae, 0x28, 0x4a,
	0xe5, 0x87, 0x0f, 0xfe, 0xdd, 0x20, 0x77, 0xa7, 0xa5, 0x90, 0x86, 0x66, 0x50, 0xd1, 0x82, 0x09,
	0x36, 0x86, 0x02, 0x04, 0x86, 0x33, 0xd2, 0xe1, 0x19, 0x50, 0x03, 0x49, 0xa9, 0x39, 0x56, 0x94,
	0x19, 0x23, 0x13, 0xce, 0x90, 0x4b, 0x61, 0xa2, 0x3f, 0x82, 0x9d, 0x60, 0x77, 0xe3, 0xe1, 0xa3,
	0x41, 0x9b, 0x75, 0x70, 0xad, 0x8f, 0x62, 0xa5, 0x20, 0xde, 0xe2, 0x19, 0x8c, 0x6a, 0xf9, 0xa0,
	0xa1, 0x76, 0xff, 0x21, 0xa4, 0x7f, 0xb3, 0x37, 0xfc, 0x3d, 0x20, 0xd1, 0x75, 0x2b, 0x36, 0xd5,
	0x07, 0xbb, 0x1b, 0x0f, 0xe3, 0xf7, 0x49, 0x75, 0xad, 0x4c, 0x73, 0x6e, 0x30, 0xfe, 0xa4, 0x3d,
	0x73, 0xf7, 0xcf, 0x75, 0xd2, 0xbb, 0xd1, 0x19, 0x6e, 0x93, 0x75, 0x0d, 0x85, 0x44, 0xa0, 0x5c,
	0x45, 0x5f, 0xee, 0x04, 0xbb, 0xeb, 0xf1, 0x9a, 0x1f, 0x9c, 0xaa, 0xb0, 0x43, 0xd6, 0x72, 0x99,
	0xb0, 0xdc, 0x6a, 0x8f, 0x9c, 0x76, 0xcb, 0x3d, 0x9f, 0xaa, 0xf0, 0x31, 0xd9, 0x12, 0x65, 0x71,
	0x0e, 0x9a, 0x72, 0x65, 0x20, 0xa1, 0x86, 0xd1, 0x44, 0x03, 0x43, 0x48, 0xa3, 0xc7, 0x3b, 0xc1,
	0xee, 0xed, 0xf8, 0xae, 0x97, 0x4f, 0xad, 0x3a, 0x62, 0x47, 0x5e, 0x6b, 0xb3, 0xa5, 0x90, 0x83,
	0xb5, 0x3d, 0x69, 0xb1, 0x1d, 0x7b, 0x2d, 0xfc, 0x82, 0x6c, 0x2e, 0xdb, 0x34, 0x64, 0x50, 0x45,
	0x5f, 0x39, 0x53, 0x78, 0xc5, 0x14, 0x5b, 0x25, 0xfc, 0x94, 0xdc, 0x86, 0x79, 0x32, 0x61, 0x62,
	0x0c, 0xae, 0xc1, 0xe8, 0x6b, 0xf7, 0x02, 0x1f, 0x2e, 0x86, 0x6f, 0xec, 0xef, 0xd5, 0x21, 0x6b,
	0x5c, 0xd0, 0xf3, 0x0a, 0xc1, 0x44, 0xdf, 0x38, 0xd4, 0x2d, 0x2e, 0x0e, 0xed, 0x63, 0xd8, 0x23,
	0x84, 0x0b, 0xaa, 0x58, 0x92, 0x01, 0x9a, 0xe8, 0xa9, 0x13, 0xd7, 0xb9, 0x78, 0xed, 0x07, 0xb6,
	0x37, 0x59, 0x62, 0x6d, 0xfd, 0xd6, 0xa9, 0x6b, 0xb2, 0x44, 0xef, 0xbd, 0x4f, 0x36, 0xac, 0xb8,
	0x30, 0x3f, 0x73, 0x32, 0x91, 0x25, 0x2e, 0xdc, 0x4f, 0xc8, 0x96, 0x7f, 0x6d, 0xaa, 0x58, 0x95,
	0x4b, 0x66, 0x3f, 0x85, 0x04, 0xf8, 0x05, 0xa4, 0xd1, 0xbe, 0x5b, 0xde, 0xf4, 0xf2, 0x6b, 0xaf,
	0xc6, 0xb5, 0x18, 0x3e, 0x23, 0xdd, 0x25, 0x1f, 0x6a, 0x26, 0x4c, 0xc1, 0xd1, 0x36, 0xf8, 0x9d,
	0xb3, 0x46, 0x57, 0xac, 0x6f, 0xde, 0xe9, 0xe1, 0x73, 0x72, 0x2f, 0x55, 0xf6, 0xa8, 0x59, 0x09,
	0x06, 0x57, 0x8f, 0x7e, 0xee, 0xfc, 0x9d, 0x54, 0xa5, 0xb1, 0x5f, 0x59, 0x3e, 0xfe, 0x84, 0xdc,
	0x6f, 0x03, 0x34, 0x33, 0x7c, 0xef, 0x18, 0xf7, 0x56, 0x18, 0xcd, 0x1c, 0x07, 0xa4, 0xe7, 0x31,
	0x46, 0x49, 0x61, 0x5a, 0x3a, 0x38, 0x70, 0x90, 0xae, 0x83, 0xf8, 0x9d, 0xe5, 0x24, 0x2f, 0xc8,
	0x4e, 0x2b, 0xa2, 0x19, 0xe5, 0xd0, 0x51, 0x7a, 0xab, 0x94, 0x66, 0x96, 0x7d, 0xb2, 0xdd, 0x0a,
	0x2a, 0xb8, 0x31, 0x90, 0x46, 0x47, 0x75, 0xa5, 0x2b, 0x8c, 0x97, 0x4e, 0x0f, 0xcf, 0xc8, 0x83,
	0x76, 0x3b, 0x9b, 0xf3, 0xa2, 0x2c, 0xec, 0x9f, 0x9b, 0x55, 0xd1, 0xb1, 0xa3, 0xf4, 0x5b, 0x28,
	0x7e, 0xed, 0xd8, 0x6e, 0x85, 0xc7, 0x8b, 0x76, 0x6b, 0x96, 0x81, 0xd9, 0x72, 0x9c, 0x13, 0x07,
	0xda, 0x6e, 0x80, 0x46, 0x30, 0xbb, 0x9a, 0x68, 0x9f, 0x6c, 0x73, 0x71, 0xc1, 0x72, 0x9e, 0x52,
	0xa3, 0x38, 0x15, 0x12, 0xf9, 0xaf, 0xd5, 0xbb, 0x6a, 0x7f, 0xf0, 0x2f, 0x54, 0xaf, 0x8c, 0x14,
	0x7f, 0xe5, 0x16, 0xde, 0x16, 0x7b, 0x44, 0xfa, 0x2d, 0xf6, 0x66, 0xad, 0x2f, 0x7c, 0x86, 0x65,
	0x42, 0xb3, 0xd4, 0xcf, 0xc8, 0x1d, 0x2d, 0x4b, 0xe4, 0x62, 0x4c, 0xb9, 0x30, 0xc8, 0x44, 0x02,
	0xd1, 0x8f, 0xee, 0xf3, 0xfb, 0xa8, 0x9e, 0x9f, 0xd6, 0xe3, 0xa7, 0x8a, 0xf4, 0xa6, 0x42, 0x69,
	0xda, 0x76, 0x27, 0x52, 0x98, 0x63, 0xb8, 0x35, 0x38, 0x2b, 0x05, 0x57, 0xa0, 0x5f, 0x01, 0xfe,
	0x26, 0x75, 0x66, 0x46, 0x20, 0x8c, 0xd4, 0x26, 0xfa, 0xdc, 0xdd, 0xf1, 0x9b, 0xad, 0xb7, 0x69,
	0xdc, 0xb1, 0xd0, 0x33, 0xab, 0xfc, 0x04, 0xd5, 0xcb, 0xb7, 0xf3, 0x93, 0x39, 0x1e, 0xfe, 0xf2,
	0xd7, 0x65, 0x3f, 0xf8, 0xfb, 0xb2, 0x1f, 0xfc, 0x77, 0xd9, 0x0f, 0x7e, 0x8e, 0xc7, 0x1c, 0x2d,
	0xc2, 0x9e, 0x30, 0x10, 0x80, 0x43, 0x9e, 0xc0, 0x39, 0xe8, 0xf1, 0x70, 0x02, 0x2c, 0xc7, 0xc9,
	0xb9, 0xc4, 0x3d, 0x2e, 0xc6, 0x60, 0x70, 0x6f, 0x8a, 0x7c, 0x4f, 0x30, 0xe4, 0x17, 0x30, 0x54,
	0xd9, 0x78, 0x38, 0x45, 0x3e, 0x64, 0x29, 0x53, 0x08, 0xda, 0x0c, 0x7d, 0xfc, 0xa1, 0x49, 0x26,
	0x50, 0xb0, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xd0, 0xbb, 0xdf, 0xdc, 0x06, 0x00, 0x00,
}

func (m *JunosKeyManagement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosKeyManagement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosKeyManagement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IkeSecurityAssociations != nil {
		{
			size, err := m.IkeSecurityAssociations.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKmdRender(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosKeyManagementIkeSecurityAssociationsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosKeyManagementIkeSecurityAssociationsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosKeyManagementIkeSecurityAssociationsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IkeSecurityAssociation) > 0 {
		for iNdEx := len(m.IkeSecurityAssociation) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.IkeSecurityAssociation[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintKmdRender(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoutingInstance != nil {
		i -= len(*m.RoutingInstance)
		copy(dAtA[i:], *m.RoutingInstance)
		i = encodeVarintKmdRender(dAtA, i, uint64(len(*m.RoutingInstance)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc2
	}
	if m.InvalidSpiNotifyTransmitted != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.InvalidSpiNotifyTransmitted))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.InvalidSpiNotifyReceived != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.InvalidSpiNotifyReceived))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.DpdResponseSeqPayloadMissed != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdResponseSeqPayloadMissed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.DpdResponsePayloadMaximumDelay != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdResponsePayloadMaximumDelay))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.DpdResponsePayloadMissed != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdResponsePayloadMissed))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.DpdResponsePayloadTransmitted != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdResponsePayloadTransmitted))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.DpdResponsePayloadReceived != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdResponsePayloadReceived))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.DpdRequestPayloadTransmitted != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdRequestPayloadTransmitted))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.DpdRequestPayloadReceived != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DpdRequestPayloadReceived))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.DeletePayloadTransmitted != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DeletePayloadTransmitted))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.DeletePayloadReceived != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.DeletePayloadReceived))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.OutPackets != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.OutPackets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.OutBytes != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.OutBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.InPackets != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.InPackets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.InBytes != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.InBytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.ExchangeType != nil {
		i -= len(*m.ExchangeType)
		copy(dAtA[i:], *m.ExchangeType)
		i = encodeVarintKmdRender(dAtA, i, uint64(len(*m.ExchangeType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.NumberIpsecSaRekey != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.NumberIpsecSaRekey))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.NumberIpsecSaDeleted != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.NumberIpsecSaDeleted))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.NumberIpsecSaCreated != nil {
		i = encodeVarintKmdRender(dAtA, i, uint64(*m.NumberIpsecSaCreated))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.LocalIp != nil {
		i -= len(*m.LocalIp)
		copy(dAtA[i:], *m.LocalIp)
		i = encodeVarintKmdRender(dAtA, i, uint64(len(*m.LocalIp)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.RemoteIp != nil {
		i -= len(*m.RemoteIp)
		copy(dAtA[i:], *m.RemoteIp)
		i = encodeVarintKmdRender(dAtA, i, uint64(len(*m.RemoteIp)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintKmdRender(dAtA []byte, offset int, v uint64) int {
	offset -= sovKmdRender(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosKeyManagement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IkeSecurityAssociations != nil {
		l = m.IkeSecurityAssociations.Size()
		n += 2 + l + sovKmdRender(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosKeyManagementIkeSecurityAssociationsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.IkeSecurityAssociation) > 0 {
		for _, e := range m.IkeSecurityAssociation {
			l = e.Size()
			n += 2 + l + sovKmdRender(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RemoteIp != nil {
		l = len(*m.RemoteIp)
		n += 2 + l + sovKmdRender(uint64(l))
	}
	if m.LocalIp != nil {
		l = len(*m.LocalIp)
		n += 2 + l + sovKmdRender(uint64(l))
	}
	if m.NumberIpsecSaCreated != nil {
		n += 2 + sovKmdRender(uint64(*m.NumberIpsecSaCreated))
	}
	if m.NumberIpsecSaDeleted != nil {
		n += 2 + sovKmdRender(uint64(*m.NumberIpsecSaDeleted))
	}
	if m.NumberIpsecSaRekey != nil {
		n += 2 + sovKmdRender(uint64(*m.NumberIpsecSaRekey))
	}
	if m.ExchangeType != nil {
		l = len(*m.ExchangeType)
		n += 2 + l + sovKmdRender(uint64(l))
	}
	if m.InBytes != nil {
		n += 2 + sovKmdRender(uint64(*m.InBytes))
	}
	if m.InPackets != nil {
		n += 2 + sovKmdRender(uint64(*m.InPackets))
	}
	if m.OutBytes != nil {
		n += 2 + sovKmdRender(uint64(*m.OutBytes))
	}
	if m.OutPackets != nil {
		n += 2 + sovKmdRender(uint64(*m.OutPackets))
	}
	if m.DeletePayloadReceived != nil {
		n += 2 + sovKmdRender(uint64(*m.DeletePayloadReceived))
	}
	if m.DeletePayloadTransmitted != nil {
		n += 2 + sovKmdRender(uint64(*m.DeletePayloadTransmitted))
	}
	if m.DpdRequestPayloadReceived != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdRequestPayloadReceived))
	}
	if m.DpdRequestPayloadTransmitted != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdRequestPayloadTransmitted))
	}
	if m.DpdResponsePayloadReceived != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdResponsePayloadReceived))
	}
	if m.DpdResponsePayloadTransmitted != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdResponsePayloadTransmitted))
	}
	if m.DpdResponsePayloadMissed != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdResponsePayloadMissed))
	}
	if m.DpdResponsePayloadMaximumDelay != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdResponsePayloadMaximumDelay))
	}
	if m.DpdResponseSeqPayloadMissed != nil {
		n += 2 + sovKmdRender(uint64(*m.DpdResponseSeqPayloadMissed))
	}
	if m.InvalidSpiNotifyReceived != nil {
		n += 2 + sovKmdRender(uint64(*m.InvalidSpiNotifyReceived))
	}
	if m.InvalidSpiNotifyTransmitted != nil {
		n += 2 + sovKmdRender(uint64(*m.InvalidSpiNotifyTransmitted))
	}
	if m.RoutingInstance != nil {
		l = len(*m.RoutingInstance)
		n += 2 + l + sovKmdRender(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKmdRender(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKmdRender(x uint64) (n int) {
	return sovKmdRender(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosKeyManagement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKmdRender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_key_management: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_key_management: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IkeSecurityAssociations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IkeSecurityAssociations == nil {
				m.IkeSecurityAssociations = &JunosKeyManagementIkeSecurityAssociationsType{}
			}
			if err := m.IkeSecurityAssociations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKmdRender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosKeyManagementIkeSecurityAssociationsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKmdRender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ike_security_associations_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ike_security_associations_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IkeSecurityAssociation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IkeSecurityAssociation = append(m.IkeSecurityAssociation, &JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList{})
			if err := m.IkeSecurityAssociation[len(m.IkeSecurityAssociation)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKmdRender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosKeyManagementIkeSecurityAssociationsTypeIkeSecurityAssociationList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKmdRender
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ike_security_association_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ike_security_association_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteIp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RemoteIp = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LocalIp = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberIpsecSaCreated", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NumberIpsecSaCreated = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberIpsecSaDeleted", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NumberIpsecSaDeleted = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberIpsecSaRekey", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NumberIpsecSaRekey = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExchangeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExchangeType = &s
			iNdEx = postIndex
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InBytes", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InBytes = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPackets", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPackets = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutBytes", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutBytes = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPackets", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPackets = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletePayloadReceived", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeletePayloadReceived = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletePayloadTransmitted", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeletePayloadTransmitted = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdRequestPayloadReceived", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdRequestPayloadReceived = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdRequestPayloadTransmitted", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdRequestPayloadTransmitted = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdResponsePayloadReceived", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdResponsePayloadReceived = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdResponsePayloadTransmitted", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdResponsePayloadTransmitted = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdResponsePayloadMissed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdResponsePayloadMissed = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdResponsePayloadMaximumDelay", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdResponsePayloadMaximumDelay = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DpdResponseSeqPayloadMissed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DpdResponseSeqPayloadMissed = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvalidSpiNotifyReceived", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InvalidSpiNotifyReceived = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvalidSpiNotifyTransmitted", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InvalidSpiNotifyTransmitted = &v
		case 72:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoutingInstance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKmdRender
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKmdRender
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RoutingInstance = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKmdRender(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthKmdRender
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKmdRender(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKmdRender
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKmdRender
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKmdRender
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKmdRender
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKmdRender
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKmdRender        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKmdRender          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKmdRender = fmt.Errorf("proto: unexpected end of group")
)
