// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: l2cpd_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type LldpL2Cp struct {
	State                *LldpL2CpStateType      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Interfaces           *LldpL2CpInterfacesType `protobuf:"bytes,152,opt,name=interfaces" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LldpL2Cp) Reset()         { *m = LldpL2Cp{} }
func (m *LldpL2Cp) String() string { return proto.CompactTextString(m) }
func (*LldpL2Cp) ProtoMessage()    {}
func (*LldpL2Cp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0}
}
func (m *LldpL2Cp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2Cp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2Cp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2Cp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2Cp.Merge(m, src)
}
func (m *LldpL2Cp) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2Cp) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2Cp.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2Cp proto.InternalMessageInfo

func (m *LldpL2Cp) GetState() *LldpL2CpStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *LldpL2Cp) GetInterfaces() *LldpL2CpInterfacesType {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type LldpL2CpStateType struct {
	Enabled                  *bool                          `protobuf:"varint,91,opt,name=enabled" json:"enabled,omitempty"`
	HelloTimer               *uint64                        `protobuf:"varint,92,opt,name=hello_timer,json=helloTimer" json:"hello_timer,omitempty"`
	SuppressTlvAdvertisement []string                       `protobuf:"bytes,93,rep,name=suppress_tlv_advertisement,json=suppressTlvAdvertisement" json:"suppress_tlv_advertisement,omitempty"`
	SystemName               *string                        `protobuf:"bytes,51,opt,name=system_name,json=systemName" json:"system_name,omitempty"`
	SystemDescription        *string                        `protobuf:"bytes,52,opt,name=system_description,json=systemDescription" json:"system_description,omitempty"`
	ChassisId                *string                        `protobuf:"bytes,53,opt,name=chassis_id,json=chassisId" json:"chassis_id,omitempty"`
	ChassisIdType            *string                        `protobuf:"bytes,54,opt,name=chassis_id_type,json=chassisIdType" json:"chassis_id_type,omitempty"`
	Counters                 *LldpL2CpStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	LocPortIdType            *string                        `protobuf:"bytes,101,opt,name=loc_port_id_type,json=locPortIdType" json:"loc_port_id_type,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                       `json:"-"`
	XXX_unrecognized         []byte                         `json:"-"`
	XXX_sizecache            int32                          `json:"-"`
}

func (m *LldpL2CpStateType) Reset()         { *m = LldpL2CpStateType{} }
func (m *LldpL2CpStateType) String() string { return proto.CompactTextString(m) }
func (*LldpL2CpStateType) ProtoMessage()    {}
func (*LldpL2CpStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 0}
}
func (m *LldpL2CpStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpStateType.Merge(m, src)
}
func (m *LldpL2CpStateType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpStateType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpStateType proto.InternalMessageInfo

func (m *LldpL2CpStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *LldpL2CpStateType) GetHelloTimer() uint64 {
	if m != nil && m.HelloTimer != nil {
		return *m.HelloTimer
	}
	return 0
}

func (m *LldpL2CpStateType) GetSuppressTlvAdvertisement() []string {
	if m != nil {
		return m.SuppressTlvAdvertisement
	}
	return nil
}

func (m *LldpL2CpStateType) GetSystemName() string {
	if m != nil && m.SystemName != nil {
		return *m.SystemName
	}
	return ""
}

func (m *LldpL2CpStateType) GetSystemDescription() string {
	if m != nil && m.SystemDescription != nil {
		return *m.SystemDescription
	}
	return ""
}

func (m *LldpL2CpStateType) GetChassisId() string {
	if m != nil && m.ChassisId != nil {
		return *m.ChassisId
	}
	return ""
}

func (m *LldpL2CpStateType) GetChassisIdType() string {
	if m != nil && m.ChassisIdType != nil {
		return *m.ChassisIdType
	}
	return ""
}

func (m *LldpL2CpStateType) GetCounters() *LldpL2CpStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *LldpL2CpStateType) GetLocPortIdType() string {
	if m != nil && m.LocPortIdType != nil {
		return *m.LocPortIdType
	}
	return ""
}

type LldpL2CpStateTypeCountersType struct {
	FrameIn              *uint64  `protobuf:"varint,51,opt,name=frame_in,json=frameIn" json:"frame_in,omitempty"`
	FrameOut             *uint64  `protobuf:"varint,52,opt,name=frame_out,json=frameOut" json:"frame_out,omitempty"`
	FrameErrorIn         *uint64  `protobuf:"varint,53,opt,name=frame_error_in,json=frameErrorIn" json:"frame_error_in,omitempty"`
	FrameDiscard         *uint64  `protobuf:"varint,54,opt,name=frame_discard,json=frameDiscard" json:"frame_discard,omitempty"`
	TlvDiscard           *uint64  `protobuf:"varint,55,opt,name=tlv_discard,json=tlvDiscard" json:"tlv_discard,omitempty"`
	TlvUnknown           *uint64  `protobuf:"varint,56,opt,name=tlv_unknown,json=tlvUnknown" json:"tlv_unknown,omitempty"`
	LastClear            *string  `protobuf:"bytes,57,opt,name=last_clear,json=lastClear" json:"last_clear,omitempty"`
	TlvAccepted          *uint64  `protobuf:"varint,58,opt,name=tlv_accepted,json=tlvAccepted" json:"tlv_accepted,omitempty"`
	EntriesAgedOut       *uint64  `protobuf:"varint,59,opt,name=entries_aged_out,json=entriesAgedOut" json:"entries_aged_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LldpL2CpStateTypeCountersType) Reset()         { *m = LldpL2CpStateTypeCountersType{} }
func (m *LldpL2CpStateTypeCountersType) String() string { return proto.CompactTextString(m) }
func (*LldpL2CpStateTypeCountersType) ProtoMessage()    {}
func (*LldpL2CpStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 0, 0}
}
func (m *LldpL2CpStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpStateTypeCountersType.Merge(m, src)
}
func (m *LldpL2CpStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpStateTypeCountersType proto.InternalMessageInfo

func (m *LldpL2CpStateTypeCountersType) GetFrameIn() uint64 {
	if m != nil && m.FrameIn != nil {
		return *m.FrameIn
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetFrameOut() uint64 {
	if m != nil && m.FrameOut != nil {
		return *m.FrameOut
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetFrameErrorIn() uint64 {
	if m != nil && m.FrameErrorIn != nil {
		return *m.FrameErrorIn
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetFrameDiscard() uint64 {
	if m != nil && m.FrameDiscard != nil {
		return *m.FrameDiscard
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetTlvDiscard() uint64 {
	if m != nil && m.TlvDiscard != nil {
		return *m.TlvDiscard
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetTlvUnknown() uint64 {
	if m != nil && m.TlvUnknown != nil {
		return *m.TlvUnknown
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetLastClear() string {
	if m != nil && m.LastClear != nil {
		return *m.LastClear
	}
	return ""
}

func (m *LldpL2CpStateTypeCountersType) GetTlvAccepted() uint64 {
	if m != nil && m.TlvAccepted != nil {
		return *m.TlvAccepted
	}
	return 0
}

func (m *LldpL2CpStateTypeCountersType) GetEntriesAgedOut() uint64 {
	if m != nil && m.EntriesAgedOut != nil {
		return *m.EntriesAgedOut
	}
	return 0
}

type LldpL2CpInterfacesType struct {
	Interface            []*LldpL2CpInterfacesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *LldpL2CpInterfacesType) Reset()         { *m = LldpL2CpInterfacesType{} }
func (m *LldpL2CpInterfacesType) String() string { return proto.CompactTextString(m) }
func (*LldpL2CpInterfacesType) ProtoMessage()    {}
func (*LldpL2CpInterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1}
}
func (m *LldpL2CpInterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesType.Merge(m, src)
}
func (m *LldpL2CpInterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesType) GetInterface() []*LldpL2CpInterfacesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceList struct {
	Name                 *string                                           `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	State                *LldpL2CpInterfacesTypeInterfaceListStateType     `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Neighbors            *LldpL2CpInterfacesTypeInterfaceListNeighborsType `protobuf:"bytes,152,opt,name=neighbors" json:"neighbors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceList) Reset()         { *m = LldpL2CpInterfacesTypeInterfaceList{} }
func (m *LldpL2CpInterfacesTypeInterfaceList) String() string { return proto.CompactTextString(m) }
func (*LldpL2CpInterfacesTypeInterfaceList) ProtoMessage()    {}
func (*LldpL2CpInterfacesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceList.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceList proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceList) GetState() *LldpL2CpInterfacesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *LldpL2CpInterfacesTypeInterfaceList) GetNeighbors() *LldpL2CpInterfacesTypeInterfaceListNeighborsType {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListStateType struct {
	Name                 *string                                                   `protobuf:"bytes,53,opt,name=name" json:"name,omitempty"`
	Enabled              *bool                                                     `protobuf:"varint,54,opt,name=enabled" json:"enabled,omitempty"`
	Counters             *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	LocPortId            *string                                                   `protobuf:"bytes,55,opt,name=loc_port_id,json=locPortId" json:"loc_port_id,omitempty"`
	LocPortDescription   *string                                                   `protobuf:"bytes,56,opt,name=loc_port_description,json=locPortDescription" json:"loc_port_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListStateType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListStateType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) GetCounters() *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) GetLocPortId() string {
	if m != nil && m.LocPortId != nil {
		return *m.LocPortId
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) GetLocPortDescription() string {
	if m != nil && m.LocPortDescription != nil {
		return *m.LocPortDescription
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType struct {
	FrameIn              *uint64  `protobuf:"varint,57,opt,name=frame_in,json=frameIn" json:"frame_in,omitempty"`
	FrameOut             *uint64  `protobuf:"varint,58,opt,name=frame_out,json=frameOut" json:"frame_out,omitempty"`
	FrameErrorIn         *uint64  `protobuf:"varint,59,opt,name=frame_error_in,json=frameErrorIn" json:"frame_error_in,omitempty"`
	FrameDiscard         *uint64  `protobuf:"varint,60,opt,name=frame_discard,json=frameDiscard" json:"frame_discard,omitempty"`
	TlvDiscard           *uint64  `protobuf:"varint,61,opt,name=tlv_discard,json=tlvDiscard" json:"tlv_discard,omitempty"`
	TlvUnknown           *uint64  `protobuf:"varint,62,opt,name=tlv_unknown,json=tlvUnknown" json:"tlv_unknown,omitempty"`
	LastClear            *string  `protobuf:"bytes,63,opt,name=last_clear,json=lastClear" json:"last_clear,omitempty"`
	FrameErrorOut        *uint64  `protobuf:"varint,64,opt,name=frame_error_out,json=frameErrorOut" json:"frame_error_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 0, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameIn() uint64 {
	if m != nil && m.FrameIn != nil {
		return *m.FrameIn
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameOut() uint64 {
	if m != nil && m.FrameOut != nil {
		return *m.FrameOut
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameErrorIn() uint64 {
	if m != nil && m.FrameErrorIn != nil {
		return *m.FrameErrorIn
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameDiscard() uint64 {
	if m != nil && m.FrameDiscard != nil {
		return *m.FrameDiscard
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetTlvDiscard() uint64 {
	if m != nil && m.TlvDiscard != nil {
		return *m.TlvDiscard
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetTlvUnknown() uint64 {
	if m != nil && m.TlvUnknown != nil {
		return *m.TlvUnknown
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetLastClear() string {
	if m != nil && m.LastClear != nil {
		return *m.LastClear
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) GetFrameErrorOut() uint64 {
	if m != nil && m.FrameErrorOut != nil {
		return *m.FrameErrorOut
	}
	return 0
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsType struct {
	Neighbor             []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                        `json:"-"`
	XXX_unrecognized     []byte                                                          `json:"-"`
	XXX_sizecache        int32                                                           `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) GetNeighbor() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList {
	if m != nil {
		return m.Neighbor
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList struct {
	Id                   *string                                                                       `protobuf:"bytes,66,opt,name=id" json:"id,omitempty"`
	State                *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	CustomTlvs           *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType   `protobuf:"bytes,152,opt,name=custom_tlvs,json=customTlvs" json:"custom_tlvs,omitempty"`
	Capabilities         *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType `protobuf:"bytes,153,opt,name=capabilities" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                        `json:"-"`
	XXX_sizecache        int32                                                                         `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetCustomTlvs() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType {
	if m != nil {
		return m.CustomTlvs
	}
	return nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) GetCapabilities() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType struct {
	SystemName            *string  `protobuf:"bytes,67,opt,name=system_name,json=systemName" json:"system_name,omitempty"`
	SystemDescription     *string  `protobuf:"bytes,68,opt,name=system_description,json=systemDescription" json:"system_description,omitempty"`
	ChassisId             *string  `protobuf:"bytes,69,opt,name=chassis_id,json=chassisId" json:"chassis_id,omitempty"`
	ChassisIdType         *string  `protobuf:"bytes,70,opt,name=chassis_id_type,json=chassisIdType" json:"chassis_id_type,omitempty"`
	Id                    *string  `protobuf:"bytes,71,opt,name=id" json:"id,omitempty"`
	Age                   *uint64  `protobuf:"varint,72,opt,name=age" json:"age,omitempty"`
	LastUpdate            *int64   `protobuf:"varint,73,opt,name=last_update,json=lastUpdate" json:"last_update,omitempty"`
	Ttl                   *uint32  `protobuf:"varint,79,opt,name=ttl" json:"ttl,omitempty"`
	PortId                *string  `protobuf:"bytes,74,opt,name=port_id,json=portId" json:"port_id,omitempty"`
	PortIdType            *string  `protobuf:"bytes,75,opt,name=port_id_type,json=portIdType" json:"port_id_type,omitempty"`
	PortDescription       *string  `protobuf:"bytes,76,opt,name=port_description,json=portDescription" json:"port_description,omitempty"`
	ManagementAddress     *string  `protobuf:"bytes,77,opt,name=management_address,json=managementAddress" json:"management_address,omitempty"`
	ManagementAddressType *string  `protobuf:"bytes,78,opt,name=management_address_type,json=managementAddressType" json:"management_address_type,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetSystemName() string {
	if m != nil && m.SystemName != nil {
		return *m.SystemName
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetSystemDescription() string {
	if m != nil && m.SystemDescription != nil {
		return *m.SystemDescription
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetChassisId() string {
	if m != nil && m.ChassisId != nil {
		return *m.ChassisId
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetChassisIdType() string {
	if m != nil && m.ChassisIdType != nil {
		return *m.ChassisIdType
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetAge() uint64 {
	if m != nil && m.Age != nil {
		return *m.Age
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetLastUpdate() int64 {
	if m != nil && m.LastUpdate != nil {
		return *m.LastUpdate
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetTtl() uint32 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortId() string {
	if m != nil && m.PortId != nil {
		return *m.PortId
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortIdType() string {
	if m != nil && m.PortIdType != nil {
		return *m.PortIdType
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetPortDescription() string {
	if m != nil && m.PortDescription != nil {
		return *m.PortDescription
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetManagementAddress() string {
	if m != nil && m.ManagementAddress != nil {
		return *m.ManagementAddress
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) GetManagementAddressType() string {
	if m != nil && m.ManagementAddressType != nil {
		return *m.ManagementAddressType
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType struct {
	Tlv                  []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList `protobuf:"bytes,79,rep,name=tlv" json:"tlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 1}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) GetTlv() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList {
	if m != nil {
		return m.Tlv
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList struct {
	Type                 *int32                                                                                      `protobuf:"varint,80,opt,name=type" json:"type,omitempty"`
	Oui                  *string                                                                                     `protobuf:"bytes,81,opt,name=oui" json:"oui,omitempty"`
	OuiSubtype           *string                                                                                     `protobuf:"bytes,82,opt,name=oui_subtype,json=ouiSubtype" json:"oui_subtype,omitempty"`
	State                *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                       `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) ProtoMessage() {
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 1, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetOui() string {
	if m != nil && m.Oui != nil {
		return *m.Oui
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetOuiSubtype() string {
	if m != nil && m.OuiSubtype != nil {
		return *m.OuiSubtype
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType struct {
	Type                 *int32   `protobuf:"varint,83,opt,name=type" json:"type,omitempty"`
	Oui                  *string  `protobuf:"bytes,84,opt,name=oui" json:"oui,omitempty"`
	OuiSubtype           *string  `protobuf:"bytes,85,opt,name=oui_subtype,json=ouiSubtype" json:"oui_subtype,omitempty"`
	Value                *string  `protobuf:"bytes,86,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) ProtoMessage() {
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 1, 0, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetOui() string {
	if m != nil && m.Oui != nil {
		return *m.Oui
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetOuiSubtype() string {
	if m != nil && m.OuiSubtype != nil {
		return *m.OuiSubtype
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType struct {
	Capability           []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList `protobuf:"bytes,151,rep,name=capability" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                         `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) ProtoMessage() {}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 2}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) GetCapability() []*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList {
	if m != nil {
		return m.Capability
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList struct {
	Name                 *string                                                                                              `protobuf:"bytes,88,opt,name=name" json:"name,omitempty"`
	State                *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) ProtoMessage() {
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 2, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) GetState() *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType struct {
	Name                 *string  `protobuf:"bytes,89,opt,name=name" json:"name,omitempty"`
	Enabled              *bool    `protobuf:"varint,90,opt,name=enabled" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Reset() {
	*m = LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType{}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) ProtoMessage() {
}
func (*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_c03dcda3397cbbab, []int{0, 1, 0, 1, 0, 2, 0, 0}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType.Merge(m, src)
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) XXX_Size() int {
	return m.Size()
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType proto.InternalMessageInfo

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

var E_JnprLldpL2CpExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*LldpL2Cp)(nil),
	Field:         51,
	Name:          "jnpr_lldp_l2cp_ext",
	Tag:           "bytes,51,opt,name=jnpr_lldp_l2cp_ext",
	Filename:      "l2cpd_oc.proto",
}

func init() {
	proto.RegisterType((*LldpL2Cp)(nil), "lldp_l2cp")
	proto.RegisterType((*LldpL2CpStateType)(nil), "lldp_l2cp.state_type")
	proto.RegisterType((*LldpL2CpStateTypeCountersType)(nil), "lldp_l2cp.state_type.counters_type")
	proto.RegisterType((*LldpL2CpInterfacesType)(nil), "lldp_l2cp.interfaces_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceList)(nil), "lldp_l2cp.interfaces_type.interface_list")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListStateType)(nil), "lldp_l2cp.interfaces_type.interface_list.state_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType)(nil), "lldp_l2cp.interfaces_type.interface_list.state_type.counters_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.state_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.custom_tlvs_type.tlv_list.state_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list")
	proto.RegisterType((*LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType)(nil), "lldp_l2cp.interfaces_type.interface_list.neighbors_type.neighbor_list.capabilities_type.capability_list.state_type")
	proto.RegisterExtension(E_JnprLldpL2CpExt)
}

func init() { proto.RegisterFile("l2cpd_oc.proto", fileDescriptor_c03dcda3397cbbab) }

var fileDescriptor_c03dcda3397cbbab = []byte{
	// 1275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0x1f, 0xc5, 0x09, 0xb5, 0x5f, 0x62, 0x3b, 0x5d, 0xd2, 0xa9, 0xaa, 0x0e, 0xc1, 0x50, 0xa6,
	0xb8, 0x33, 0xc4, 0x66, 0xd2, 0x3f, 0xb4, 0x69, 0x81, 0x26, 0x6d, 0x4a, 0xd3, 0x86, 0x24, 0x55,
	0x12, 0x5a, 0x0a, 0x8c, 0xba, 0x96, 0xb6, 0xf6, 0x26, 0xb2, 0xa4, 0xd1, 0xae, 0xdc, 0xfa, 0xc0,
	0xa5, 0x37, 0xe0, 0xc8, 0xa1, 0x30, 0x7c, 0x0a, 0x4e, 0x0c, 0x37, 0x38, 0x30, 0xc3, 0xf4, 0xc4,
	0x47, 0x60, 0xf2, 0x0d, 0x38, 0x70, 0x67, 0x76, 0xd7, 0x92, 0xe5, 0x3f, 0x69, 0x3c, 0x9d, 0x84,
	0x9b, 0xf4, 0x7b, 0xbf, 0x7d, 0xbb, 0x6f, 0xdf, 0xfb, 0xbd, 0xb7, 0x50, 0x70, 0xe7, 0xed, 0xc0,
	0xb1, 0x7c, 0xbb, 0x12, 0x84, 0x3e, 0xf7, 0x8d, 0xd7, 0x39, 0x71, 0x49, 0x93, 0xf0, 0xb0, 0x6d,
	0x71, 0x3f, 0x50, 0xe0, 0xdb, 0xbf, 0x9c, 0x86, 0x9c, 0xeb, 0x3a, 0x81, 0x25, 0xc8, 0xe8, 0x3d,
	0x98, 0x60, 0x1c, 0x73, 0xa2, 0x3f, 0xd7, 0x4a, 0x5a, 0x79, 0x72, 0xfe, 0x44, 0x25, 0xb1, 0x55,
	0xa4, 0xc1, 0xe2, 0xed, 0x80, 0x98, 0x8a, 0x84, 0xae, 0x02, 0x50, 0x8f, 0x93, 0xf0, 0x31, 0xb6,
	0x09, 0xd3, 0x7f, 0x50, 0x4b, 0x8c, 0xd4, 0x92, 0xae, 0x55, 0xad, 0x4b, 0xd1, 0x8d, 0x17, 0x13,
	0x00, 0x5d, 0x97, 0x48, 0x87, 0x63, 0xc4, 0xc3, 0x35, 0x97, 0x38, 0xfa, 0x17, 0x25, 0xad, 0x9c,
	0x35, 0xe3, 0x5f, 0xf4, 0x26, 0x4c, 0x36, 0x88, 0xeb, 0xfa, 0x16, 0xa7, 0x4d, 0x12, 0xea, 0x5f,
	0x96, 0xb4, 0xf2, 0xb8, 0x09, 0x12, 0xda, 0x12, 0x08, 0xba, 0x06, 0x06, 0x8b, 0x82, 0x20, 0x24,
	0x8c, 0x59, 0xdc, 0x6d, 0x59, 0xd8, 0x69, 0x91, 0x90, 0x53, 0x46, 0x9a, 0xc4, 0xe3, 0xfa, 0x57,
	0xa5, 0x4c, 0x39, 0x67, 0xea, 0x31, 0x63, 0xcb, 0x6d, 0x2d, 0xa6, 0xed, 0xc2, 0x3d, 0x6b, 0x33,
	0x4e, 0x9a, 0x96, 0x87, 0x9b, 0x44, 0x3f, 0x5f, 0xd2, 0xca, 0x39, 0x13, 0x14, 0xb4, 0x86, 0x9b,
	0x04, 0xcd, 0x01, 0xea, 0x10, 0x1c, 0xc2, 0xec, 0x90, 0x06, 0x9c, 0xfa, 0x9e, 0x7e, 0x41, 0xf2,
	0x8e, 0x2b, 0xcb, 0xcd, 0xae, 0x01, 0xbd, 0x01, 0x60, 0x37, 0x30, 0x63, 0x94, 0x59, 0xd4, 0xd1,
	0x2f, 0x4a, 0x5a, 0xae, 0x83, 0xac, 0x38, 0xe8, 0x2c, 0x14, 0xbb, 0x66, 0x19, 0xba, 0x7e, 0x49,
	0x72, 0xf2, 0x09, 0x67, 0x4b, 0xdc, 0xc7, 0x75, 0xc8, 0xda, 0x7e, 0x24, 0xae, 0x8b, 0xc5, 0xc9,
	0x38, 0x33, 0x34, 0x19, 0x95, 0x98, 0xa6, 0xae, 0x38, 0x59, 0x85, 0xde, 0x85, 0x69, 0xd7, 0xb7,
	0xad, 0xc0, 0x0f, 0x79, 0xb2, 0x15, 0x51, 0x5b, 0xb9, 0xbe, 0xbd, 0xe1, 0x87, 0x5c, 0x6d, 0x65,
	0xfc, 0x36, 0x06, 0xf9, 0x1e, 0x27, 0xe8, 0x14, 0x64, 0x1f, 0x87, 0xb8, 0x49, 0x2c, 0xea, 0xc9,
	0x0b, 0x19, 0x37, 0x8f, 0xc9, 0xff, 0x15, 0x0f, 0x9d, 0x86, 0x9c, 0x32, 0xf9, 0x11, 0x97, 0x97,
	0x30, 0x6e, 0x2a, 0xee, 0x7a, 0xc4, 0xd1, 0x3b, 0x50, 0x50, 0x46, 0x12, 0x86, 0x7e, 0x28, 0x56,
	0x5f, 0x94, 0x8c, 0x29, 0x89, 0x2e, 0x0b, 0x70, 0xc5, 0x43, 0x67, 0x20, 0xaf, 0x58, 0x0e, 0x65,
	0x36, 0x0e, 0x1d, 0x79, 0x01, 0x31, 0xe9, 0xa6, 0xc2, 0x44, 0x5a, 0x44, 0x2e, 0x63, 0xca, 0x07,
	0x2a, 0xeb, 0xdc, 0x6d, 0xf5, 0x11, 0x22, 0x6f, 0xd7, 0xf3, 0x9f, 0x78, 0xfa, 0xe5, 0x84, 0xb0,
	0xad, 0x10, 0x91, 0x08, 0x17, 0x33, 0x6e, 0xd9, 0x2e, 0xc1, 0xa1, 0x7e, 0x45, 0x25, 0x42, 0x20,
	0x37, 0x04, 0x80, 0xde, 0x82, 0x29, 0x59, 0x2c, 0xb6, 0x4d, 0x02, 0x4e, 0x1c, 0x7d, 0x41, 0x3a,
	0x10, 0x3e, 0x17, 0x3b, 0x10, 0x2a, 0xc3, 0x34, 0xf1, 0x78, 0x48, 0x09, 0xb3, 0x70, 0x9d, 0x38,
	0x32, 0xe4, 0xab, 0x92, 0x56, 0xe8, 0xe0, 0x8b, 0x75, 0xe2, 0xac, 0x47, 0xdc, 0xf8, 0x67, 0x06,
	0x8a, 0x7d, 0xc5, 0x8e, 0x6e, 0x43, 0x2e, 0x81, 0x44, 0x0a, 0x33, 0xe5, 0xc9, 0xf9, 0x73, 0xfb,
	0x8b, 0xa3, 0xfb, 0x6f, 0xb9, 0x94, 0x71, 0xb3, 0xbb, 0xd8, 0xf8, 0x7e, 0x06, 0x0a, 0xbd, 0x56,
	0x74, 0x0a, 0xc6, 0x65, 0xb9, 0xca, 0x32, 0x5c, 0x9a, 0x78, 0x76, 0x7d, 0x2c, 0xab, 0x99, 0x12,
	0x42, 0x77, 0xfb, 0x34, 0x7c, 0x61, 0xe4, 0x3d, 0x87, 0x48, 0xfc, 0x3e, 0xe4, 0x3c, 0x42, 0xeb,
	0x8d, 0x9a, 0x1f, 0x26, 0x0a, 0xbf, 0x3c, 0xba, 0xc3, 0x64, 0xad, 0x72, 0xda, 0xf5, 0x65, 0x7c,
	0x37, 0xde, 0x23, 0x7f, 0xd4, 0x89, 0x47, 0xe9, 0x45, 0x05, 0x92, 0x6a, 0x09, 0x97, 0x7a, 0x5b,
	0x82, 0x35, 0x28, 0x8e, 0xa5, 0x57, 0x89, 0x72, 0x5f, 0xed, 0xcc, 0xc2, 0x64, 0x4a, 0x3b, 0xb2,
	0xfa, 0x44, 0xf1, 0xc4, 0xb2, 0x41, 0xef, 0xc3, 0x4c, 0x62, 0x4f, 0x77, 0x85, 0xcb, 0x92, 0x88,
	0x3a, 0xc4, 0x54, 0x5b, 0x30, 0x7e, 0x7a, 0xa9, 0xc8, 0xae, 0xbc, 0x44, 0x64, 0x0b, 0x07, 0x8a,
	0xec, 0xea, 0x28, 0x22, 0xbb, 0x76, 0xb0, 0xc8, 0x3e, 0x3c, 0x48, 0x64, 0x1f, 0x1d, 0x20, 0xb2,
	0x8f, 0xfb, 0x45, 0x76, 0x16, 0x8a, 0xe9, 0xb3, 0x8a, 0x70, 0xae, 0x4b, 0x1f, 0xf9, 0xee, 0x61,
	0x85, 0x7e, 0x7e, 0x2e, 0x40, 0xa1, 0xb7, 0x56, 0x90, 0x0d, 0xd9, 0x18, 0x89, 0xd5, 0x73, 0xeb,
	0x55, 0x0b, 0x2f, 0xf9, 0x55, 0xd2, 0x4a, 0x1c, 0x1b, 0xbf, 0xe6, 0x21, 0xdf, 0x63, 0x43, 0x27,
	0x60, 0x8c, 0x3a, 0xfa, 0x52, 0x5a, 0x56, 0x63, 0xd4, 0x41, 0x8d, 0x3e, 0x51, 0xdd, 0x3b, 0x9c,
	0xa3, 0x0c, 0x51, 0x5c, 0x1b, 0x26, 0xed, 0x88, 0x71, 0xbf, 0x29, 0x66, 0x59, 0xa2, 0xb9, 0xfb,
	0x87, 0xb4, 0x5f, 0xca, 0x75, 0x67, 0x24, 0x2b, 0x64, 0xcb, 0x6d, 0x31, 0xf4, 0x35, 0x4c, 0xd9,
	0x38, 0xc0, 0x35, 0xea, 0x52, 0x4e, 0x09, 0xd3, 0x7f, 0x54, 0x7b, 0x3f, 0x38, 0xac, 0xbd, 0x53,
	0xbe, 0xd5, 0xe6, 0x3d, 0xdb, 0x19, 0x7f, 0x64, 0x7a, 0x5a, 0x42, 0xdf, 0x60, 0xbe, 0x31, 0xe2,
	0x60, 0xbe, 0x39, 0xda, 0x60, 0x5e, 0x1e, 0x61, 0x30, 0xdf, 0x1a, 0x36, 0x98, 0x0b, 0xb2, 0x40,
	0x3e, 0x91, 0x26, 0x51, 0x19, 0xd3, 0x90, 0xc1, 0x75, 0xa2, 0xdf, 0x96, 0x65, 0x2d, 0x3e, 0xc5,
	0xc1, 0xa5, 0x26, 0xa2, 0xc0, 0x11, 0x15, 0xb3, 0x52, 0xd2, 0xca, 0x19, 0x53, 0xca, 0x64, 0x5b,
	0x22, 0x62, 0x09, 0xe7, 0xae, 0xbe, 0x5e, 0xd2, 0xca, 0x79, 0x53, 0x7c, 0xa2, 0x93, 0x70, 0x2c,
	0xee, 0x35, 0x77, 0xa4, 0xe7, 0xd7, 0x02, 0xd5, 0x68, 0x4a, 0x30, 0xd5, 0x33, 0xc0, 0xef, 0xaa,
	0x5b, 0x08, 0x92, 0xe9, 0x8d, 0xce, 0xc1, 0xf4, 0x40, 0x1b, 0x5a, 0x95, 0xac, 0x62, 0xd0, 0xdb,
	0x83, 0xc4, 0x85, 0x35, 0xb1, 0x87, 0xeb, 0xf2, 0xe1, 0x63, 0x61, 0xc7, 0x11, 0x0f, 0x22, 0xfd,
	0x53, 0x75, 0x61, 0x5d, 0xcb, 0xa2, 0x32, 0xa0, 0x4b, 0x70, 0x72, 0x90, 0xae, 0x8e, 0xb1, 0x26,
	0xd7, 0x9c, 0x18, 0x58, 0x23, 0xdf, 0x13, 0x2f, 0x32, 0x30, 0xdd, 0x5f, 0x67, 0x28, 0x84, 0x0c,
	0x77, 0x5b, 0xfa, 0xba, 0x14, 0xf2, 0xa3, 0x23, 0xaa, 0xe6, 0x8a, 0x68, 0x56, 0x52, 0xe2, 0x62,
	0x33, 0xe3, 0xf7, 0x31, 0xc8, 0xc6, 0x88, 0x98, 0x30, 0xf2, 0xe8, 0x1b, 0x25, 0xad, 0x3c, 0x61,
	0xca, 0x6f, 0x91, 0x08, 0x3f, 0xa2, 0xfa, 0x3d, 0x19, 0x8d, 0xf8, 0x14, 0xb9, 0xf3, 0x23, 0x6a,
	0xb1, 0xa8, 0x26, 0xc9, 0xa6, 0xba, 0x6e, 0x3f, 0xa2, 0x9b, 0x0a, 0x41, 0xcf, 0xb4, 0xbe, 0x4e,
	0xb0, 0x7b, 0xd4, 0xb1, 0x0c, 0xf6, 0x08, 0x83, 0xf6, 0xcf, 0x4e, 0x79, 0xd8, 0xcd, 0xc1, 0xc8,
	0xb6, 0xf6, 0x8d, 0x6c, 0x7b, 0x20, 0xb2, 0x19, 0x98, 0x68, 0x61, 0x37, 0x22, 0xfa, 0x67, 0xd2,
	0xa4, 0x7e, 0x8c, 0xe7, 0x19, 0x38, 0x3e, 0x20, 0x5c, 0xf4, 0x8d, 0x06, 0x90, 0xa0, 0xed, 0xb8,
	0x3f, 0x37, 0x8e, 0xaa, 0x51, 0x74, 0x91, 0xb6, 0x4a, 0x6f, 0x6a, 0x73, 0xe3, 0x5f, 0x0d, 0x8a,
	0x7d, 0xf6, 0xe4, 0x79, 0xf4, 0x60, 0xf0, 0x79, 0xf4, 0x6d, 0x7f, 0x02, 0xd9, 0xff, 0x75, 0xea,
	0x21, 0x89, 0x5c, 0x18, 0xfa, 0x08, 0xfa, 0x7c, 0xf8, 0x23, 0xe8, 0x61, 0xcf, 0x23, 0x68, 0x61,
	0x03, 0xd0, 0x8e, 0x17, 0x84, 0x56, 0x72, 0x7a, 0x8b, 0x3c, 0xe5, 0xe8, 0x64, 0xe5, 0x4e, 0xe4,
	0xd1, 0x80, 0x84, 0x6b, 0x84, 0x3f, 0xf1, 0xc3, 0x5d, 0xb6, 0x49, 0x3c, 0x26, 0x1e, 0x6f, 0xe7,
	0x65, 0xb0, 0xd0, 0x0d, 0xd6, 0x2c, 0x8a, 0xe5, 0xab, 0xae, 0x13, 0xac, 0xce, 0xdb, 0xc1, 0xf2,
	0x53, 0xbe, 0xf4, 0xe8, 0xcf, 0xbd, 0x59, 0xed, 0xaf, 0xbd, 0x59, 0xed, 0xef, 0xbd, 0x59, 0xed,
	0xa1, 0x59, 0xa7, 0xbc, 0xb2, 0xa3, 0x9c, 0x55, 0x3c, 0xc2, 0xab, 0xd4, 0x26, 0x35, 0x12, 0xd6,
	0xab, 0x0d, 0x82, 0x5d, 0xde, 0xa8, 0xf9, 0x7c, 0x8e, 0x7a, 0x75, 0xc2, 0xf8, 0xdc, 0x0e, 0xa7,
	0x73, 0x1e, 0xe6, 0xb4, 0x45, 0xaa, 0xc1, 0x6e, 0xbd, 0xba, 0xc3, 0x69, 0x15, 0x3b, 0x38, 0x10,
	0x4f, 0x9d, 0xaa, 0xb5, 0x13, 0x79, 0x3e, 0xab, 0x32, 0xbb, 0x41, 0x9a, 0xf8, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x8f, 0x97, 0x49, 0x9b, 0x93, 0x0e, 0x00, 0x00,
}

func (m *LldpL2Cp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2Cp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2Cp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Interfaces != nil {
		{
			size, err := m.Interfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LocPortIdType != nil {
		i -= len(*m.LocPortIdType)
		copy(dAtA[i:], *m.LocPortIdType)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.LocPortIdType)))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xaa
	}
	if len(m.SuppressTlvAdvertisement) > 0 {
		for iNdEx := len(m.SuppressTlvAdvertisement) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SuppressTlvAdvertisement[iNdEx])
			copy(dAtA[i:], m.SuppressTlvAdvertisement[iNdEx])
			i = encodeVarintL2CpdOc(dAtA, i, uint64(len(m.SuppressTlvAdvertisement[iNdEx])))
			i--
			dAtA[i] = 0x5
			i--
			dAtA[i] = 0xea
		}
	}
	if m.HelloTimer != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.HelloTimer))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.ChassisIdType != nil {
		i -= len(*m.ChassisIdType)
		copy(dAtA[i:], *m.ChassisIdType)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ChassisIdType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.ChassisId != nil {
		i -= len(*m.ChassisId)
		copy(dAtA[i:], *m.ChassisId)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ChassisId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.SystemDescription != nil {
		i -= len(*m.SystemDescription)
		copy(dAtA[i:], *m.SystemDescription)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.SystemDescription)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.SystemName != nil {
		i -= len(*m.SystemName)
		copy(dAtA[i:], *m.SystemName)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.SystemName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EntriesAgedOut != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.EntriesAgedOut))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.TlvAccepted != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.TlvAccepted))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.LastClear != nil {
		i -= len(*m.LastClear)
		copy(dAtA[i:], *m.LastClear)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.LastClear)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if m.TlvUnknown != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.TlvUnknown))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TlvDiscard != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.TlvDiscard))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.FrameDiscard != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameDiscard))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.FrameErrorIn != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameErrorIn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.FrameOut != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameOut))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.FrameIn != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameIn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Neighbors != nil {
		{
			size, err := m.Neighbors.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LocPortDescription != nil {
		i -= len(*m.LocPortDescription)
		copy(dAtA[i:], *m.LocPortDescription)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.LocPortDescription)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.LocPortId != nil {
		i -= len(*m.LocPortId)
		copy(dAtA[i:], *m.LocPortId)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.LocPortId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FrameErrorOut != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameErrorOut))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.LastClear != nil {
		i -= len(*m.LastClear)
		copy(dAtA[i:], *m.LastClear)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.LastClear)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xfa
	}
	if m.TlvUnknown != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.TlvUnknown))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.TlvDiscard != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.TlvDiscard))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.FrameDiscard != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameDiscard))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.FrameErrorIn != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameErrorIn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.FrameOut != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameOut))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.FrameIn != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.FrameIn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Neighbor) > 0 {
		for iNdEx := len(m.Neighbor) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Neighbor[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Capabilities != nil {
		{
			size, err := m.Capabilities.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.CustomTlvs != nil {
		{
			size, err := m.CustomTlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x92
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ttl != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.Ttl))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf8
	}
	if m.ManagementAddressType != nil {
		i -= len(*m.ManagementAddressType)
		copy(dAtA[i:], *m.ManagementAddressType)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ManagementAddressType)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xf2
	}
	if m.ManagementAddress != nil {
		i -= len(*m.ManagementAddress)
		copy(dAtA[i:], *m.ManagementAddress)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ManagementAddress)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xea
	}
	if m.PortDescription != nil {
		i -= len(*m.PortDescription)
		copy(dAtA[i:], *m.PortDescription)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.PortDescription)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xe2
	}
	if m.PortIdType != nil {
		i -= len(*m.PortIdType)
		copy(dAtA[i:], *m.PortIdType)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.PortIdType)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xda
	}
	if m.PortId != nil {
		i -= len(*m.PortId)
		copy(dAtA[i:], *m.PortId)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.PortId)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd2
	}
	if m.LastUpdate != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.LastUpdate))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.Age != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.Age))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xba
	}
	if m.ChassisIdType != nil {
		i -= len(*m.ChassisIdType)
		copy(dAtA[i:], *m.ChassisIdType)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ChassisIdType)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb2
	}
	if m.ChassisId != nil {
		i -= len(*m.ChassisId)
		copy(dAtA[i:], *m.ChassisId)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.ChassisId)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xaa
	}
	if m.SystemDescription != nil {
		i -= len(*m.SystemDescription)
		copy(dAtA[i:], *m.SystemDescription)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.SystemDescription)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa2
	}
	if m.SystemName != nil {
		i -= len(*m.SystemName)
		copy(dAtA[i:], *m.SystemName)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.SystemName)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tlv) > 0 {
		for iNdEx := len(m.Tlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xfa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.OuiSubtype != nil {
		i -= len(*m.OuiSubtype)
		copy(dAtA[i:], *m.OuiSubtype)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.OuiSubtype)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x92
	}
	if m.Oui != nil {
		i -= len(*m.Oui)
		copy(dAtA[i:], *m.Oui)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Oui)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x8a
	}
	if m.Type != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x80
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xb2
	}
	if m.OuiSubtype != nil {
		i -= len(*m.OuiSubtype)
		copy(dAtA[i:], *m.OuiSubtype)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.OuiSubtype)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xaa
	}
	if m.Oui != nil {
		i -= len(*m.Oui)
		copy(dAtA[i:], *m.Oui)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Oui)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa2
	}
	if m.Type != nil {
		i = encodeVarintL2CpdOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Capability) > 0 {
		for iNdEx := len(m.Capability) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Capability[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintL2CpdOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd0
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintL2CpdOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xca
	}
	return len(dAtA) - i, nil
}

func encodeVarintL2CpdOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovL2CpdOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LldpL2Cp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Interfaces != nil {
		l = m.Interfaces.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemName != nil {
		l = len(*m.SystemName)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.SystemDescription != nil {
		l = len(*m.SystemDescription)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ChassisId != nil {
		l = len(*m.ChassisId)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ChassisIdType != nil {
		l = len(*m.ChassisIdType)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Enabled != nil {
		n += 3
	}
	if m.HelloTimer != nil {
		n += 2 + sovL2CpdOc(uint64(*m.HelloTimer))
	}
	if len(m.SuppressTlvAdvertisement) > 0 {
		for _, s := range m.SuppressTlvAdvertisement {
			l = len(s)
			n += 2 + l + sovL2CpdOc(uint64(l))
		}
	}
	if m.LocPortIdType != nil {
		l = len(*m.LocPortIdType)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FrameIn != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameIn))
	}
	if m.FrameOut != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameOut))
	}
	if m.FrameErrorIn != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameErrorIn))
	}
	if m.FrameDiscard != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameDiscard))
	}
	if m.TlvDiscard != nil {
		n += 2 + sovL2CpdOc(uint64(*m.TlvDiscard))
	}
	if m.TlvUnknown != nil {
		n += 2 + sovL2CpdOc(uint64(*m.TlvUnknown))
	}
	if m.LastClear != nil {
		l = len(*m.LastClear)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.TlvAccepted != nil {
		n += 2 + sovL2CpdOc(uint64(*m.TlvAccepted))
	}
	if m.EntriesAgedOut != nil {
		n += 2 + sovL2CpdOc(uint64(*m.EntriesAgedOut))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovL2CpdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Neighbors != nil {
		l = m.Neighbors.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Enabled != nil {
		n += 3
	}
	if m.LocPortId != nil {
		l = len(*m.LocPortId)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.LocPortDescription != nil {
		l = len(*m.LocPortDescription)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FrameIn != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameIn))
	}
	if m.FrameOut != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameOut))
	}
	if m.FrameErrorIn != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameErrorIn))
	}
	if m.FrameDiscard != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameDiscard))
	}
	if m.TlvDiscard != nil {
		n += 2 + sovL2CpdOc(uint64(*m.TlvDiscard))
	}
	if m.TlvUnknown != nil {
		n += 2 + sovL2CpdOc(uint64(*m.TlvUnknown))
	}
	if m.LastClear != nil {
		l = len(*m.LastClear)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.FrameErrorOut != nil {
		n += 2 + sovL2CpdOc(uint64(*m.FrameErrorOut))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Neighbor) > 0 {
		for _, e := range m.Neighbor {
			l = e.Size()
			n += 2 + l + sovL2CpdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.CustomTlvs != nil {
		l = m.CustomTlvs.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Capabilities != nil {
		l = m.Capabilities.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemName != nil {
		l = len(*m.SystemName)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.SystemDescription != nil {
		l = len(*m.SystemDescription)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ChassisId != nil {
		l = len(*m.ChassisId)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ChassisIdType != nil {
		l = len(*m.ChassisIdType)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Age != nil {
		n += 2 + sovL2CpdOc(uint64(*m.Age))
	}
	if m.LastUpdate != nil {
		n += 2 + sovL2CpdOc(uint64(*m.LastUpdate))
	}
	if m.PortId != nil {
		l = len(*m.PortId)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.PortIdType != nil {
		l = len(*m.PortIdType)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.PortDescription != nil {
		l = len(*m.PortDescription)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ManagementAddress != nil {
		l = len(*m.ManagementAddress)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.ManagementAddressType != nil {
		l = len(*m.ManagementAddressType)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Ttl != nil {
		n += 2 + sovL2CpdOc(uint64(*m.Ttl))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tlv) > 0 {
		for _, e := range m.Tlv {
			l = e.Size()
			n += 2 + l + sovL2CpdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovL2CpdOc(uint64(*m.Type))
	}
	if m.Oui != nil {
		l = len(*m.Oui)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.OuiSubtype != nil {
		l = len(*m.OuiSubtype)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovL2CpdOc(uint64(*m.Type))
	}
	if m.Oui != nil {
		l = len(*m.Oui)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.OuiSubtype != nil {
		l = len(*m.OuiSubtype)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Capability) > 0 {
		for _, e := range m.Capability {
			l = e.Size()
			n += 2 + l + sovL2CpdOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovL2CpdOc(uint64(l))
	}
	if m.Enabled != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovL2CpdOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozL2CpdOc(x uint64) (n int) {
	return sovL2CpdOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LldpL2Cp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lldp_l2cp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lldp_l2cp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &LldpL2CpStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interfaces == nil {
				m.Interfaces = &LldpL2CpInterfacesType{}
			}
			if err := m.Interfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemDescription = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChassisId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChassisId = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChassisIdType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChassisIdType = &s
			iNdEx = postIndex
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelloTimer", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HelloTimer = &v
		case 93:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SuppressTlvAdvertisement", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SuppressTlvAdvertisement = append(m.SuppressTlvAdvertisement, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocPortIdType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LocPortIdType = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &LldpL2CpStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameIn", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameIn = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameOut", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameOut = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameErrorIn", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameErrorIn = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameDiscard", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameDiscard = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlvDiscard", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlvDiscard = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlvUnknown", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlvUnknown = &v
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastClear", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LastClear = &s
			iNdEx = postIndex
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlvAccepted", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlvAccepted = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntriesAgedOut", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EntriesAgedOut = &v
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &LldpL2CpInterfacesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &LldpL2CpInterfacesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Neighbors == nil {
				m.Neighbors = &LldpL2CpInterfacesTypeInterfaceListNeighborsType{}
			}
			if err := m.Neighbors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocPortId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LocPortId = &s
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocPortDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LocPortDescription = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameIn", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameIn = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameOut", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameOut = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameErrorIn", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameErrorIn = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameDiscard", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameDiscard = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlvDiscard", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlvDiscard = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TlvUnknown", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TlvUnknown = &v
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastClear", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LastClear = &s
			iNdEx = postIndex
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameErrorOut", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrameErrorOut = &v
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbors_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbors_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Neighbor = append(m.Neighbor, &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList{})
			if err := m.Neighbor[len(m.Neighbor)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbor_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbor_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 66:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomTlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CustomTlvs == nil {
				m.CustomTlvs = &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType{}
			}
			if err := m.CustomTlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Capabilities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Capabilities == nil {
				m.Capabilities = &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType{}
			}
			if err := m.Capabilities.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 67:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemName = &s
			iNdEx = postIndex
		case 68:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemDescription = &s
			iNdEx = postIndex
		case 69:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChassisId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChassisId = &s
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChassisIdType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ChassisIdType = &s
			iNdEx = postIndex
		case 71:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Age", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Age = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdate", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastUpdate = &v
		case 74:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PortId = &s
			iNdEx = postIndex
		case 75:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortIdType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PortIdType = &s
			iNdEx = postIndex
		case 76:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PortDescription = &s
			iNdEx = postIndex
		case 77:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManagementAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ManagementAddress = &s
			iNdEx = postIndex
		case 78:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManagementAddressType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ManagementAddressType = &s
			iNdEx = postIndex
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Ttl = &v
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: custom_tlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: custom_tlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 79:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tlv = append(m.Tlv, &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList{})
			if err := m.Tlv[len(m.Tlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 81:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oui", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Oui = &s
			iNdEx = postIndex
		case 82:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OuiSubtype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OuiSubtype = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCustomTlvsTypeTlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 84:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oui", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Oui = &s
			iNdEx = postIndex
		case 85:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OuiSubtype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OuiSubtype = &s
			iNdEx = postIndex
		case 86:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: capabilities_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: capabilities_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Capability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Capability = append(m.Capability, &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList{})
			if err := m.Capability[len(m.Capability)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: capability_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: capability_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 88:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LldpL2CpInterfacesTypeInterfaceListNeighborsTypeNeighborListCapabilitiesTypeCapabilityListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 89:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 90:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		default:
			iNdEx = preIndex
			skippy, err := skipL2CpdOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthL2CpdOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipL2CpdOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowL2CpdOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowL2CpdOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthL2CpdOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupL2CpdOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthL2CpdOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthL2CpdOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowL2CpdOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupL2CpdOc = fmt.Errorf("proto: unexpected end of group")
)
