syntax = "proto2";
option go_package = "git.juniper.net/iceberg/healthbot-ingest-jti-native/pkg/jti/adapters/_junos/schema";
import "telemetry_top.proto";

extend JuniperNetworksSensors {
   optional lldp_l2cp jnpr_lldp_l2cp_ext = 51;
}

message lldp_l2cp {
   optional state_type state = 151;
   message state_type {
      optional bool enabled = 91;
      optional uint64 hello_timer = 92;
      repeated string suppress_tlv_advertisement = 93;
      optional string system_name = 51;
      optional string system_description = 52;
      optional string chassis_id = 53;
      optional string chassis_id_type = 54;
      optional counters_type counters = 151;
      message counters_type {
         optional uint64 frame_in = 51;
         optional uint64 frame_out = 52;
         optional uint64 frame_error_in = 53;
         optional uint64 frame_discard = 54;
         optional uint64 tlv_discard = 55;
         optional uint64 tlv_unknown = 56;
         optional string last_clear = 57;
         optional uint64 tlv_accepted = 58;
         optional uint64 entries_aged_out = 59;
      }
      optional string loc_port_id_type = 101;
   }
   optional interfaces_type interfaces = 152;
   message interfaces_type {
      message interface_list {
         optional string name = 52 [(telemetry_options).is_key = true];
         optional state_type state = 151;
         message state_type {
            optional string name = 53;
            optional bool enabled = 54;
            optional counters_type counters = 151;
            message counters_type {
               optional uint64 frame_in = 57;
               optional uint64 frame_out = 58;
               optional uint64 frame_error_in = 59;
               optional uint64 frame_discard = 60;
               optional uint64 tlv_discard = 61;
               optional uint64 tlv_unknown = 62;
               optional string last_clear = 63;
               optional uint64 frame_error_out = 64;
            }
            optional string loc_port_id = 55;
            optional string loc_port_description = 56;
         }
         optional neighbors_type neighbors = 152;
         message neighbors_type {
            message neighbor_list {
               optional string id = 66 [(telemetry_options).is_key = true];
               optional state_type state = 151;
               message state_type {
                  optional string system_name = 67;
                  optional string system_description = 68;
                  optional string chassis_id = 69;
                  optional string chassis_id_type = 70;
                  optional string id = 71;
                  optional uint64 age = 72;
                  optional int64 last_update = 73;
                  optional uint32 ttl = 79;
                  optional string port_id = 74;
                  optional string port_id_type = 75;
                  optional string port_description = 76;
                  optional string management_address = 77;
                  optional string management_address_type = 78;
               }
               optional custom_tlvs_type custom_tlvs = 152;
               message custom_tlvs_type {
                  message tlv_list {
                     optional int32 type = 80;
                     optional string oui = 81;
                     optional string oui_subtype = 82;
                     optional state_type state = 151;
                     message state_type {
                        optional int32 type = 83;
                        optional string oui = 84;
                        optional string oui_subtype = 85;
                        optional string value = 86;
                     }
                  }
                  repeated tlv_list tlv = 79;
               }
               optional capabilities_type capabilities = 153;
               message capabilities_type {
                  message capability_list {
                     optional string name = 88 [(telemetry_options).is_key = true];
                     optional state_type state = 151;
                     message state_type {
                        optional string name = 89;
                        optional bool enabled = 90;
                     }
                  }
                  repeated capability_list capability = 151;
               }
            }
            repeated neighbor_list neighbor = 151;
         }
      }
      repeated interface_list interface = 151;
   }
}
