// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pfe_ifl_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type InterfacesPfeIfl struct {
	Interface            []*InterfacesPfeIflInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *InterfacesPfeIfl) Reset()         { *m = InterfacesPfeIfl{} }
func (m *InterfacesPfeIfl) String() string { return proto.CompactTextString(m) }
func (*InterfacesPfeIfl) ProtoMessage()    {}
func (*InterfacesPfeIfl) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0}
}
func (m *InterfacesPfeIfl) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIfl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIfl.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIfl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIfl.Merge(m, src)
}
func (m *InterfacesPfeIfl) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIfl) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIfl.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIfl proto.InternalMessageInfo

func (m *InterfacesPfeIfl) GetInterface() []*InterfacesPfeIflInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type InterfacesPfeIflInterfaceList struct {
	Subinterfaces        *InterfacesPfeIflInterfaceListSubinterfacesType `protobuf:"bytes,151,opt,name=subinterfaces" json:"subinterfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *InterfacesPfeIflInterfaceList) Reset()         { *m = InterfacesPfeIflInterfaceList{} }
func (m *InterfacesPfeIflInterfaceList) String() string { return proto.CompactTextString(m) }
func (*InterfacesPfeIflInterfaceList) ProtoMessage()    {}
func (*InterfacesPfeIflInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0, 0}
}
func (m *InterfacesPfeIflInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIflInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIflInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIflInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIflInterfaceList.Merge(m, src)
}
func (m *InterfacesPfeIflInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIflInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIflInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIflInterfaceList proto.InternalMessageInfo

func (m *InterfacesPfeIflInterfaceList) GetSubinterfaces() *InterfacesPfeIflInterfaceListSubinterfacesType {
	if m != nil {
		return m.Subinterfaces
	}
	return nil
}

type InterfacesPfeIflInterfaceListSubinterfacesType struct {
	Subinterface         []*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList `protobuf:"bytes,51,rep,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                          `json:"-"`
	XXX_unrecognized     []byte                                                            `json:"-"`
	XXX_sizecache        int32                                                             `json:"-"`
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) Reset() {
	*m = InterfacesPfeIflInterfaceListSubinterfacesType{}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesPfeIflInterfaceListSubinterfacesType) ProtoMessage() {}
func (*InterfacesPfeIflInterfaceListSubinterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0, 0, 0}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesType.Merge(m, src)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesType proto.InternalMessageInfo

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) GetSubinterface() []*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList {
	if m != nil {
		return m.Subinterface
	}
	return nil
}

type InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList struct {
	State                *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                   `json:"-"`
	XXX_sizecache        int32                                                                    `json:"-"`
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) Reset() {
	*m = InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList{}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) ProtoMessage() {}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0, 0, 0, 0}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList.Merge(m, src)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList proto.InternalMessageInfo

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) GetState() *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType struct {
	Counters             *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                `json:"-"`
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) Reset() {
	*m = InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType{}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) ProtoMessage() {}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0, 0, 0, 0, 0}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType.Merge(m, src)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType proto.InternalMessageInfo

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) GetCounters() *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

type InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType struct {
	InOctets             *uint64  `protobuf:"varint,51,opt,name=in_octets,json=inOctets" json:"in_octets,omitempty"`
	InUnicastPkts        *uint64  `protobuf:"varint,52,opt,name=in_unicast_pkts,json=inUnicastPkts" json:"in_unicast_pkts,omitempty"`
	InBroadcastPkts      *uint64  `protobuf:"varint,53,opt,name=in_broadcast_pkts,json=inBroadcastPkts" json:"in_broadcast_pkts,omitempty"`
	InMulticastPkts      *uint64  `protobuf:"varint,54,opt,name=in_multicast_pkts,json=inMulticastPkts" json:"in_multicast_pkts,omitempty"`
	InDiscards           *uint64  `protobuf:"varint,55,opt,name=in_discards,json=inDiscards" json:"in_discards,omitempty"`
	InErrors             *uint64  `protobuf:"varint,56,opt,name=in_errors,json=inErrors" json:"in_errors,omitempty"`
	InUnknownProtos      *uint64  `protobuf:"varint,57,opt,name=in_unknown_protos,json=inUnknownProtos" json:"in_unknown_protos,omitempty"`
	OutOctets            *uint64  `protobuf:"varint,58,opt,name=out_octets,json=outOctets" json:"out_octets,omitempty"`
	OutUnicastPkts       *uint64  `protobuf:"varint,59,opt,name=out_unicast_pkts,json=outUnicastPkts" json:"out_unicast_pkts,omitempty"`
	OutBroadcastPkts     *uint64  `protobuf:"varint,60,opt,name=out_broadcast_pkts,json=outBroadcastPkts" json:"out_broadcast_pkts,omitempty"`
	OutMulticastPkts     *uint64  `protobuf:"varint,61,opt,name=out_multicast_pkts,json=outMulticastPkts" json:"out_multicast_pkts,omitempty"`
	OutDiscards          *uint64  `protobuf:"varint,62,opt,name=out_discards,json=outDiscards" json:"out_discards,omitempty"`
	OutErrors            *uint64  `protobuf:"varint,63,opt,name=out_errors,json=outErrors" json:"out_errors,omitempty"`
	LastClear            *uint64  `protobuf:"varint,64,opt,name=last_clear,json=lastClear" json:"last_clear,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Reset() {
	*m = InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType{}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) ProtoMessage() {
}
func (*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a4ae36ce16ed7ca, []int{0, 0, 0, 0, 0, 0}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.Merge(m, src)
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType proto.InternalMessageInfo

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInOctets() uint64 {
	if m != nil && m.InOctets != nil {
		return *m.InOctets
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInUnicastPkts() uint64 {
	if m != nil && m.InUnicastPkts != nil {
		return *m.InUnicastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInBroadcastPkts() uint64 {
	if m != nil && m.InBroadcastPkts != nil {
		return *m.InBroadcastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInMulticastPkts() uint64 {
	if m != nil && m.InMulticastPkts != nil {
		return *m.InMulticastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInDiscards() uint64 {
	if m != nil && m.InDiscards != nil {
		return *m.InDiscards
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInErrors() uint64 {
	if m != nil && m.InErrors != nil {
		return *m.InErrors
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInUnknownProtos() uint64 {
	if m != nil && m.InUnknownProtos != nil {
		return *m.InUnknownProtos
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutOctets() uint64 {
	if m != nil && m.OutOctets != nil {
		return *m.OutOctets
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutUnicastPkts() uint64 {
	if m != nil && m.OutUnicastPkts != nil {
		return *m.OutUnicastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutBroadcastPkts() uint64 {
	if m != nil && m.OutBroadcastPkts != nil {
		return *m.OutBroadcastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutMulticastPkts() uint64 {
	if m != nil && m.OutMulticastPkts != nil {
		return *m.OutMulticastPkts
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutDiscards() uint64 {
	if m != nil && m.OutDiscards != nil {
		return *m.OutDiscards
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutErrors() uint64 {
	if m != nil && m.OutErrors != nil {
		return *m.OutErrors
	}
	return 0
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetLastClear() uint64 {
	if m != nil && m.LastClear != nil {
		return *m.LastClear
	}
	return 0
}

var E_JnprInterfacesPfeIflExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*InterfacesPfeIfl)(nil),
	Field:         58,
	Name:          "jnpr_interfaces_pfe_ifl_ext",
	Tag:           "bytes,58,opt,name=jnpr_interfaces_pfe_ifl_ext",
	Filename:      "pfe_ifl_oc.proto",
}

func init() {
	proto.RegisterType((*InterfacesPfeIfl)(nil), "interfaces_pfe_ifl")
	proto.RegisterType((*InterfacesPfeIflInterfaceList)(nil), "interfaces_pfe_ifl.interface_list")
	proto.RegisterType((*InterfacesPfeIflInterfaceListSubinterfacesType)(nil), "interfaces_pfe_ifl.interface_list.subinterfaces_type")
	proto.RegisterType((*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList)(nil), "interfaces_pfe_ifl.interface_list.subinterfaces_type.subinterface_list")
	proto.RegisterType((*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType)(nil), "interfaces_pfe_ifl.interface_list.subinterfaces_type.subinterface_list.state_type")
	proto.RegisterType((*InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType)(nil), "interfaces_pfe_ifl.interface_list.subinterfaces_type.subinterface_list.state_type.counters_type")
	proto.RegisterExtension(E_JnprInterfacesPfeIflExt)
}

func init() { proto.RegisterFile("pfe_ifl_oc.proto", fileDescriptor_8a4ae36ce16ed7ca) }

var fileDescriptor_8a4ae36ce16ed7ca = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcb, 0x4e, 0x14, 0x41,
	0x14, 0x86, 0x33, 0x11, 0x74, 0x38, 0xc3, 0xb5, 0x58, 0xd0, 0x19, 0x02, 0x22, 0x0b, 0x33, 0x31,
	0xd2, 0x9d, 0x80, 0x78, 0xc1, 0x3b, 0x4a, 0x0c, 0x26, 0x2a, 0x19, 0xc3, 0xc6, 0x98, 0x14, 0x3d,
	0x3d, 0x35, 0x43, 0x75, 0x37, 0x55, 0x9d, 0xaa, 0xd3, 0x02, 0x0b, 0x9f, 0xc3, 0x8d, 0x0b, 0xd7,
	0xba, 0xf0, 0x35, 0x5c, 0xfa, 0x08, 0x86, 0xc7, 0x70, 0x65, 0xaa, 0xfa, 0x32, 0xd3, 0x8c, 0x89,
	0x89, 0x61, 0xd9, 0x7f, 0x7d, 0xf5, 0xff, 0x75, 0xfe, 0x9c, 0x86, 0xd9, 0xa4, 0xc7, 0x28, 0xef,
	0xc5, 0x54, 0x06, 0x6e, 0xa2, 0x24, 0xca, 0xe6, 0x3c, 0xb2, 0x98, 0x1d, 0x31, 0x54, 0xa7, 0x14,
	0x65, 0x92, 0x89, 0xab, 0xbf, 0xeb, 0x40, 0xb8, 0x40, 0xa6, 0x7a, 0x7e, 0xc0, 0x34, 0xcd, 0x2f,
	0x91, 0xa7, 0x30, 0x51, 0xaa, 0xce, 0xa7, 0xda, 0xca, 0xa5, 0x56, 0x63, 0x7d, 0xd5, 0x1d, 0x05,
	0x07, 0x12, 0x8d, 0xb9, 0xc6, 0xf6, 0xe0, 0x56, 0xf3, 0x4b, 0x1d, 0xa6, 0xab, 0xa7, 0xe4, 0x3d,
	0x4c, 0xe9, 0xb4, 0x33, 0x70, 0x31, 0xce, 0xb5, 0x56, 0x63, 0x7d, 0xf3, 0xdf, 0xce, 0x6e, 0xe5,
	0x22, 0xc5, 0xd3, 0x84, 0xb5, 0xab, 0x66, 0xcd, 0xef, 0x57, 0x80, 0x8c, 0x52, 0x24, 0x82, 0xc9,
	0x61, 0xd5, 0xd9, 0xb0, 0xc3, 0xbc, 0xf8, 0xaf, 0xc8, 0x8a, 0x94, 0x4d, 0x5c, 0x31, 0x6f, 0x7e,
	0xbb, 0x0c, 0x73, 0x23, 0x0c, 0xe1, 0x30, 0xae, 0xd1, 0x47, 0x56, 0xcc, 0xdb, 0xbe, 0xa0, 0x70,
	0xd7, 0xba, 0x66, 0x65, 0x64, 0x09, 0xcd, 0xaf, 0xe3, 0x00, 0x03, 0x95, 0x7c, 0x84, 0x7a, 0x20,
	0x53, 0x73, 0xa9, 0x2c, 0xfb, 0xe0, 0xe2, 0xc3, 0xdd, 0x22, 0x23, 0x7b, 0x4a, 0x19, 0xd9, 0xfc,
	0x3c, 0x06, 0x53, 0x95, 0x33, 0xb2, 0x68, 0x16, 0x8b, 0xca, 0x00, 0x19, 0x6a, 0x67, 0x63, 0xa5,
	0xd6, 0x1a, 0x6b, 0xd7, 0xb9, 0x78, 0x63, 0xbf, 0xc9, 0x75, 0x98, 0xe1, 0x82, 0xa6, 0x82, 0x07,
	0xbe, 0x46, 0x9a, 0x44, 0xa8, 0x9d, 0x5b, 0x16, 0x99, 0xe2, 0x62, 0x3f, 0x53, 0xf7, 0x22, 0xd4,
	0xe4, 0x06, 0xcc, 0x71, 0x41, 0x3b, 0x4a, 0xfa, 0xdd, 0x01, 0xb9, 0x69, 0xc9, 0x19, 0x2e, 0xb6,
	0x0b, 0x7d, 0x88, 0x3d, 0x4a, 0x63, 0x1c, 0x72, 0xbd, 0x5d, 0xb0, 0xaf, 0x0a, 0xdd, 0xb2, 0x57,
	0xa1, 0xc1, 0x05, 0xed, 0x72, 0x1d, 0xf8, 0xaa, 0xab, 0x9d, 0x3b, 0x96, 0x02, 0x2e, 0x9e, 0xe7,
	0x4a, 0xfe, 0x7a, 0xa6, 0x94, 0x54, 0xda, 0xb9, 0x5b, 0xbc, 0x7e, 0xc7, 0x7e, 0xe7, 0x49, 0xa9,
	0x88, 0x84, 0x3c, 0x16, 0xd4, 0xfe, 0x5e, 0xda, 0xb9, 0x57, 0x24, 0xed, 0x67, 0xfa, 0x9e, 0x95,
	0xc9, 0x12, 0x80, 0x4c, 0xb1, 0xe8, 0x61, 0xcb, 0x42, 0x13, 0x32, 0xc5, 0xbc, 0x88, 0x16, 0xcc,
	0x9a, 0xe3, 0x4a, 0x13, 0xf7, 0x2d, 0x34, 0x2d, 0x53, 0x1c, 0xae, 0xe2, 0x26, 0x10, 0x43, 0x9e,
	0xeb, 0xe2, 0x81, 0x65, 0x8d, 0x47, 0xb5, 0x8c, 0x9c, 0x3e, 0xd7, 0xc6, 0xc3, 0x92, 0xae, 0xd6,
	0x71, 0x0d, 0x26, 0x0d, 0x5d, 0xf6, 0xf1, 0xc8, 0x72, 0x0d, 0x99, 0x62, 0x59, 0x48, 0x3e, 0x47,
	0xde, 0xc8, 0xe3, 0x72, 0x8e, 0xbc, 0x92, 0x25, 0x80, 0xd8, 0xc4, 0x04, 0x31, 0xf3, 0x95, 0xf3,
	0x24, 0x3b, 0x36, 0xca, 0x33, 0x23, 0x6c, 0x85, 0xb0, 0x18, 0x8a, 0x44, 0xd1, 0xd1, 0x85, 0xa4,
	0xec, 0x04, 0xc9, 0x82, 0xfb, 0x32, 0x15, 0x3c, 0x61, 0xea, 0x35, 0xc3, 0x63, 0xa9, 0x22, 0xfd,
	0x96, 0x09, 0x6d, 0x72, 0xb6, 0xec, 0x22, 0xcf, 0xff, 0x65, 0x91, 0xdb, 0x0b, 0xc6, 0x70, 0xb7,
	0xd4, 0xf7, 0x7a, 0x6c, 0xb7, 0x17, 0xef, 0x9c, 0xe0, 0xf6, 0xc1, 0x8f, 0xb3, 0xe5, 0xda, 0xcf,
	0xb3, 0xe5, 0xda, 0xaf, 0xb3, 0xe5, 0xda, 0xbb, 0x76, 0x9f, 0xa3, 0x1b, 0x66, 0xee, 0xae, 0x60,
	0xe8, 0xf1, 0x80, 0x75, 0x98, 0xea, 0x7b, 0x87, 0xcc, 0x8f, 0xf1, 0xb0, 0x23, 0x71, 0x8d, 0x8b,
	0x3e, 0xd3, 0xb8, 0x16, 0x22, 0x5f, 0x13, 0x3e, 0xf2, 0x0f, 0xcc, 0x4b, 0xa2, 0xbe, 0x17, 0x22,
	0xf7, 0xfc, 0xae, 0x9f, 0x98, 0x8d, 0xf6, 0x68, 0x98, 0x0a, 0xa9, 0x3d, 0x1d, 0x1c, 0xb2, 0x23,
	0xff, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x57, 0x66, 0x8e, 0x72, 0x05, 0x00, 0x00,
}

func (m *InterfacesPfeIfl) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIfl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIfl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfeIflOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesPfeIflInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIflInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIflInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterfaces != nil {
		{
			size, err := m.Subinterfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfeIflOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subinterface) > 0 {
		for iNdEx := len(m.Subinterface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subinterface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfeIflOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfeIflOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfeIflOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastClear != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.LastClear))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.OutErrors != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.OutDiscards != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.OutMulticastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutMulticastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.OutBroadcastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutBroadcastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.OutUnicastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutUnicastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.OutOctets != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.OutOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.InUnknownProtos != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InUnknownProtos))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.InErrors != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.InDiscards != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.InMulticastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InMulticastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.InBroadcastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InBroadcastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.InUnicastPkts != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InUnicastPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InOctets != nil {
		i = encodeVarintPfeIflOc(dAtA, i, uint64(*m.InOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintPfeIflOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovPfeIflOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *InterfacesPfeIfl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovPfeIflOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesPfeIflInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Subinterfaces != nil {
		l = m.Subinterfaces.Size()
		n += 2 + l + sovPfeIflOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subinterface) > 0 {
		for _, e := range m.Subinterface {
			l = e.Size()
			n += 2 + l + sovPfeIflOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovPfeIflOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovPfeIflOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InOctets != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InOctets))
	}
	if m.InUnicastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InUnicastPkts))
	}
	if m.InBroadcastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InBroadcastPkts))
	}
	if m.InMulticastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InMulticastPkts))
	}
	if m.InDiscards != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InDiscards))
	}
	if m.InErrors != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InErrors))
	}
	if m.InUnknownProtos != nil {
		n += 2 + sovPfeIflOc(uint64(*m.InUnknownProtos))
	}
	if m.OutOctets != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutOctets))
	}
	if m.OutUnicastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutUnicastPkts))
	}
	if m.OutBroadcastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutBroadcastPkts))
	}
	if m.OutMulticastPkts != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutMulticastPkts))
	}
	if m.OutDiscards != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutDiscards))
	}
	if m.OutErrors != nil {
		n += 2 + sovPfeIflOc(uint64(*m.OutErrors))
	}
	if m.LastClear != nil {
		n += 2 + sovPfeIflOc(uint64(*m.LastClear))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPfeIflOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPfeIflOc(x uint64) (n int) {
	return sovPfeIflOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InterfacesPfeIfl) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_pfe_ifl: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_pfe_ifl: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &InterfacesPfeIflInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesPfeIflInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subinterfaces == nil {
				m.Subinterfaces = &InterfacesPfeIflInterfaceListSubinterfacesType{}
			}
			if err := m.Subinterfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subinterfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subinterfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subinterface = append(m.Subinterface, &InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList{})
			if err := m.Subinterface[len(m.Subinterface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subinterface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subinterface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesPfeIflInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InOctets = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InUnicastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InUnicastPkts = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InBroadcastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InBroadcastPkts = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InMulticastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InMulticastPkts = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InDiscards = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InErrors = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InUnknownProtos", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InUnknownProtos = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutOctets = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutUnicastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutUnicastPkts = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutBroadcastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutBroadcastPkts = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutMulticastPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutMulticastPkts = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutDiscards = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutErrors = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastClear", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastClear = &v
		default:
			iNdEx = preIndex
			skippy, err := skipPfeIflOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfeIflOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPfeIflOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPfeIflOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfeIflOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPfeIflOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPfeIflOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPfeIflOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPfeIflOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPfeIflOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPfeIflOc = fmt.Errorf("proto: unexpected end of group")
)
