// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pfe_per_prefix_v4_stats.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstancesPfePerPrefixV4 struct {
	NetworkInstance      []*NetworkInstancesPfePerPrefixV4NetworkInstanceList `protobuf:"bytes,200,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4) Reset()         { *m = NetworkInstancesPfePerPrefixV4{} }
func (m *NetworkInstancesPfePerPrefixV4) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesPfePerPrefixV4) ProtoMessage()    {}
func (*NetworkInstancesPfePerPrefixV4) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0}
}
func (m *NetworkInstancesPfePerPrefixV4) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4 proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4) GetNetworkInstance() []*NetworkInstancesPfePerPrefixV4NetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesPfePerPrefixV4NetworkInstanceList struct {
	Name                 *string                                                    `protobuf:"bytes,201,opt,name=name" json:"name,omitempty"`
	Afts                 *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType `protobuf:"bytes,200,opt,name=afts" json:"afts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) Reset() {
	*m = NetworkInstancesPfePerPrefixV4NetworkInstanceList{}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceList) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0, 0}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) GetAfts() *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType {
	if m != nil {
		return m.Afts
	}
	return nil
}

type NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType struct {
	Ipv4Unicast          *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType `protobuf:"bytes,200,opt,name=ipv4_unicast,json=ipv4Unicast" json:"ipv4_unicast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) Reset() {
	*m = NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType{}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) GetIpv4Unicast() *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType {
	if m != nil {
		return m.Ipv4Unicast
	}
	return nil
}

type NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType struct {
	Ipv4Entry            []*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList `protobuf:"bytes,200,rep,name=ipv4_entry,json=ipv4Entry" json:"ipv4_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                    `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) Reset() {
	*m = NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType{}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) GetIpv4Entry() []*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList {
	if m != nil {
		return m.Ipv4Entry
	}
	return nil
}

type NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList struct {
	Prefix               *string                                                                                         `protobuf:"bytes,202,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType `protobuf:"bytes,200,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                           `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Reset() {
	*m = NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList{}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) ProtoMessage() {
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) GetState() *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType struct {
	PacketsForwarded     *uint64  `protobuf:"varint,203,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
	OctetsForwarded      *uint64  `protobuf:"varint,204,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Reset() {
	*m = NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType{}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) ProtoMessage() {
}
func (*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_24331bc8c949f257, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) GetPacketsForwarded() uint64 {
	if m != nil && m.PacketsForwarded != nil {
		return *m.PacketsForwarded
	}
	return 0
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) GetOctetsForwarded() uint64 {
	if m != nil && m.OctetsForwarded != nil {
		return *m.OctetsForwarded
	}
	return 0
}

var E_JnprNetworkInstancesPfePerPrefixV4Ext = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstancesPfePerPrefixV4)(nil),
	Field:         143,
	Name:          "jnpr_network_instances_pfe_per_prefix_v4_ext",
	Tag:           "bytes,143,opt,name=jnpr_network_instances_pfe_per_prefix_v4_ext",
	Filename:      "pfe_per_prefix_v4_stats.proto",
}

func init() {
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4)(nil), "network_instances_pfe_per_prefix_v4")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4NetworkInstanceList)(nil), "network_instances_pfe_per_prefix_v4.network_instance_list")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType)(nil), "network_instances_pfe_per_prefix_v4.network_instance_list.afts_type")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType)(nil), "network_instances_pfe_per_prefix_v4.network_instance_list.afts_type.ipv4_unicast_type")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList)(nil), "network_instances_pfe_per_prefix_v4.network_instance_list.afts_type.ipv4_unicast_type.ipv4_entry_list")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType)(nil), "network_instances_pfe_per_prefix_v4.network_instance_list.afts_type.ipv4_unicast_type.ipv4_entry_list.state_type")
	proto.RegisterExtension(E_JnprNetworkInstancesPfePerPrefixV4Ext)
}

func init() { proto.RegisterFile("pfe_per_prefix_v4_stats.proto", fileDescriptor_24331bc8c949f257) }

var fileDescriptor_24331bc8c949f257 = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0x4f, 0x6b, 0x13, 0x41,
	0x18, 0xc6, 0x99, 0x36, 0x2d, 0x66, 0x22, 0x24, 0x1d, 0x11, 0xc3, 0x82, 0xa1, 0xf8, 0x07, 0x82,
	0x34, 0xbb, 0x50, 0x72, 0xea, 0x49, 0x8a, 0x15, 0xf4, 0x50, 0xc2, 0x8a, 0x05, 0xbd, 0x8c, 0xd3,
	0xcd, 0xbb, 0xc9, 0x6c, 0x92, 0xd9, 0x71, 0xe6, 0x4d, 0x9a, 0x78, 0xf4, 0x20, 0xde, 0xfc, 0x00,
	0x5e, 0xfd, 0x26, 0x5e, 0xea, 0x3f, 0xf0, 0x13, 0x88, 0xe4, 0x03, 0xf8, 0x19, 0x64, 0x77, 0x92,
	0xd6, 0x34, 0x1e, 0x82, 0xa8, 0xc7, 0xfc, 0xde, 0x27, 0xcf, 0xf3, 0xec, 0xfb, 0xee, 0xd2, 0xeb,
	0x3a, 0x06, 0xae, 0xc1, 0x70, 0x6d, 0x20, 0x96, 0x63, 0x3e, 0x6a, 0x72, 0x8b, 0x02, 0xad, 0xaf,
	0x4d, 0x8a, 0xa9, 0x77, 0x05, 0xa1, 0x0f, 0x03, 0x40, 0x33, 0xe1, 0x98, 0x6a, 0x07, 0x6f, 0xfc,
	0xd8, 0xa4, 0x37, 0x15, 0xe0, 0x49, 0x6a, 0x7a, 0x5c, 0x2a, 0x8b, 0x42, 0x45, 0x60, 0xf9, 0x92,
	0x11, 0x8b, 0x69, 0xe5, 0xa2, 0xac, 0x7a, 0x4a, 0xb6, 0xd7, 0xeb, 0xa5, 0xdd, 0x3d, 0x7f, 0x05,
	0x83, 0x25, 0x0d, 0xef, 0x4b, 0x8b, 0x61, 0x79, 0x86, 0x1f, 0xcc, 0xa8, 0xf7, 0x6d, 0x83, 0x5e,
	0xfd, 0xad, 0x94, 0x79, 0xb4, 0xa0, 0xc4, 0x00, 0xaa, 0x1f, 0xc8, 0x36, 0xa9, 0x17, 0xf7, 0x37,
	0x5e, 0xde, 0x5d, 0xbb, 0x44, 0xc2, 0x9c, 0xb1, 0x27, 0xb4, 0x20, 0x62, 0xb4, 0x59, 0x23, 0x52,
	0x2f, 0xed, 0xde, 0xfb, 0xf3, 0x46, 0x7e, 0xe6, 0xc3, 0x71, 0xa2, 0x21, 0xcc, 0x2d, 0xbd, 0x2f,
	0x05, 0x5a, 0x3c, 0x63, 0xec, 0x05, 0xbd, 0x2c, 0xf5, 0xa8, 0xc9, 0x87, 0x4a, 0x46, 0xc2, 0xe2,
	0x3c, 0xf0, 0xe8, 0x6f, 0x04, 0xfa, 0xbf, 0x3a, 0xbb, 0x0a, 0xa5, 0x0c, 0x3d, 0x76, 0xc4, 0x7b,
	0xbf, 0x4e, 0xb7, 0x96, 0x24, 0xec, 0x15, 0xa1, 0x34, 0xa7, 0xa0, 0xd0, 0x4c, 0xe6, 0x37, 0x89,
	0xff, 0x4d, 0x21, 0xff, 0x3c, 0xc9, 0xdd, 0xaf, 0x98, 0x81, 0x83, 0xec, 0xb7, 0xf7, 0x6e, 0x8d,
	0x96, 0x2f, 0x8c, 0x59, 0x8d, 0x6e, 0xba, 0xb4, 0xea, 0xc7, 0x85, 0xab, 0xcd, 0x28, 0x7b, 0x4d,
	0xe8, 0x46, 0xf6, 0x8a, 0xc2, 0x7c, 0x91, 0xcf, 0xff, 0x4f, 0x6f, 0x3f, 0x0f, 0x75, 0x3b, 0x76,
	0x05, 0xbc, 0x98, 0xd2, 0x73, 0xc8, 0x76, 0xe8, 0x96, 0x16, 0x51, 0x0f, 0xd0, 0xf2, 0x38, 0x35,
	0x27, 0xc2, 0xb4, 0xa1, 0x5d, 0xfd, 0x94, 0x75, 0x2c, 0x84, 0x95, 0xd9, 0xe4, 0xfe, 0x7c, 0xc0,
	0xee, 0xd0, 0x4a, 0x1a, 0xe1, 0xa2, 0xf8, 0xb3, 0x13, 0x97, 0xdd, 0xe0, 0x4c, 0xbb, 0xf7, 0x96,
	0xd0, 0x9d, 0x44, 0x69, 0xc3, 0x57, 0x78, 0x50, 0x0e, 0x63, 0x64, 0xd7, 0xfc, 0x87, 0x43, 0x25,
	0x35, 0x98, 0x43, 0xf7, 0x07, 0xfb, 0x08, 0x94, 0x4d, 0x8d, 0xad, 0xbe, 0x71, 0x2b, 0xbb, 0xb5,
	0xca, 0xca, 0xc2, 0xdb, 0x59, 0xe6, 0xe1, 0xe2, 0xc7, 0x66, 0x5b, 0x31, 0xb4, 0xc0, 0xb4, 0x72,
	0xd1, 0x51, 0xf3, 0x60, 0x8c, 0xfb, 0xcf, 0x4e, 0xa7, 0x35, 0xf2, 0x75, 0x5a, 0x23, 0xdf, 0xa7,
	0x35, 0xf2, 0x34, 0xec, 0x48, 0xf4, 0x13, 0x97, 0x9e, 0xa5, 0x04, 0x32, 0x82, 0x63, 0x30, 0x9d,
	0xa0, 0x0b, 0xa2, 0x8f, 0xdd, 0xe3, 0x14, 0x1b, 0x52, 0x75, 0xc0, 0x62, 0x23, 0x41, 0xd9, 0x50,
	0x02, 0xe5, 0x08, 0x02, 0xdd, 0xeb, 0x04, 0x09, 0xca, 0x40, 0xb4, 0x85, 0x46, 0x30, 0x36, 0xe0,
	0xc9, 0x50, 0xa5, 0x36, 0xb0, 0x51, 0x17, 0x06, 0xe2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e,
	0x37, 0x33, 0x0f, 0xa5, 0x04, 0x00, 0x00,
}

func (m *NetworkInstancesPfePerPrefixV4) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xc
			i--
			dAtA[i] = 0xc2
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xca
	}
	if m.Afts != nil {
		{
			size, err := m.Afts.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ipv4Unicast != nil {
		{
			size, err := m.Ipv4Unicast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ipv4Entry) > 0 {
		for iNdEx := len(m.Ipv4Entry) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ipv4Entry[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xc
			i--
			dAtA[i] = 0xc2
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OctetsForwarded != nil {
		i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(*m.OctetsForwarded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xe0
	}
	if m.PacketsForwarded != nil {
		i = encodeVarintPfePerPrefixV4Stats(dAtA, i, uint64(*m.PacketsForwarded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd8
	}
	return len(dAtA) - i, nil
}

func encodeVarintPfePerPrefixV4Stats(dAtA []byte, offset int, v uint64) int {
	offset -= sovPfePerPrefixV4Stats(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstancesPfePerPrefixV4) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Afts != nil {
		l = m.Afts.Size()
		n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ipv4Unicast != nil {
		l = m.Ipv4Unicast.Size()
		n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ipv4Entry) > 0 {
		for _, e := range m.Ipv4Entry {
			l = e.Size()
			n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
	}
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovPfePerPrefixV4Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PacketsForwarded != nil {
		n += 2 + sovPfePerPrefixV4Stats(uint64(*m.PacketsForwarded))
	}
	if m.OctetsForwarded != nil {
		n += 2 + sovPfePerPrefixV4Stats(uint64(*m.OctetsForwarded))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPfePerPrefixV4Stats(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPfePerPrefixV4Stats(x uint64) (n int) {
	return sovPfePerPrefixV4Stats(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstancesPfePerPrefixV4) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_pfe_per_prefix_v4: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_pfe_per_prefix_v4: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesPfePerPrefixV4NetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Afts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Afts == nil {
				m.Afts = &NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType{}
			}
			if err := m.Afts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: afts_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: afts_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Unicast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4Unicast == nil {
				m.Ipv4Unicast = &NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType{}
			}
			if err := m.Ipv4Unicast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_unicast_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_unicast_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Entry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv4Entry = append(m.Ipv4Entry, &NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList{})
			if err := m.Ipv4Entry[len(m.Ipv4Entry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_entry_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_entry_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV4NetworkInstanceListAftsTypeIpv4UnicastTypeIpv4EntryListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 203:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketsForwarded", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PacketsForwarded = &v
		case 204:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OctetsForwarded", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OctetsForwarded = &v
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV4Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV4Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPfePerPrefixV4Stats(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPfePerPrefixV4Stats
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfePerPrefixV4Stats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPfePerPrefixV4Stats
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPfePerPrefixV4Stats
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPfePerPrefixV4Stats
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPfePerPrefixV4Stats        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPfePerPrefixV4Stats          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPfePerPrefixV4Stats = fmt.Errorf("proto: unexpected end of group")
)
