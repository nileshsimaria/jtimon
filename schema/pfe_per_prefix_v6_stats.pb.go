// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pfe_per_prefix_v6_stats.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstancesPfePerPrefixV6 struct {
	NetworkInstance      []*NetworkInstancesPfePerPrefixV6NetworkInstanceList `protobuf:"bytes,205,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                             `json:"-"`
	XXX_unrecognized     []byte                                               `json:"-"`
	XXX_sizecache        int32                                                `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6) Reset()         { *m = NetworkInstancesPfePerPrefixV6{} }
func (m *NetworkInstancesPfePerPrefixV6) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesPfePerPrefixV6) ProtoMessage()    {}
func (*NetworkInstancesPfePerPrefixV6) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0}
}
func (m *NetworkInstancesPfePerPrefixV6) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6 proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6) GetNetworkInstance() []*NetworkInstancesPfePerPrefixV6NetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesPfePerPrefixV6NetworkInstanceList struct {
	Name                 *string                                                    `protobuf:"bytes,206,opt,name=name" json:"name,omitempty"`
	Afts                 *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType `protobuf:"bytes,205,opt,name=afts" json:"afts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) Reset() {
	*m = NetworkInstancesPfePerPrefixV6NetworkInstanceList{}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceList) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0, 0}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) GetAfts() *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType {
	if m != nil {
		return m.Afts
	}
	return nil
}

type NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType struct {
	Ipv6Unicast          *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType `protobuf:"bytes,205,opt,name=ipv6_unicast,json=ipv6Unicast" json:"ipv6_unicast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) Reset() {
	*m = NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType{}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) GetIpv6Unicast() *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType {
	if m != nil {
		return m.Ipv6Unicast
	}
	return nil
}

type NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType struct {
	Ipv6Entry            []*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList `protobuf:"bytes,205,rep,name=ipv6_entry,json=ipv6Entry" json:"ipv6_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                    `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) Reset() {
	*m = NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType{}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) ProtoMessage() {}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) GetIpv6Entry() []*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList {
	if m != nil {
		return m.Ipv6Entry
	}
	return nil
}

type NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList struct {
	Prefix               *string                                                                                         `protobuf:"bytes,207,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType `protobuf:"bytes,205,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                           `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Reset() {
	*m = NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList{}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) ProtoMessage() {
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) GetState() *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType struct {
	PacketsForwarded     *uint64  `protobuf:"varint,208,opt,name=packets_forwarded,json=packetsForwarded" json:"packets_forwarded,omitempty"`
	OctetsForwarded      *uint64  `protobuf:"varint,209,opt,name=octets_forwarded,json=octetsForwarded" json:"octets_forwarded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Reset() {
	*m = NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType{}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) ProtoMessage() {
}
func (*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_893d61141269cb38, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.Merge(m, src)
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType proto.InternalMessageInfo

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) GetPacketsForwarded() uint64 {
	if m != nil && m.PacketsForwarded != nil {
		return *m.PacketsForwarded
	}
	return 0
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) GetOctetsForwarded() uint64 {
	if m != nil && m.OctetsForwarded != nil {
		return *m.OctetsForwarded
	}
	return 0
}

var E_JnprNetworkInstancesPfePerPrefixV6Ext = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstancesPfePerPrefixV6)(nil),
	Field:         144,
	Name:          "jnpr_network_instances_pfe_per_prefix_v6_ext",
	Tag:           "bytes,144,opt,name=jnpr_network_instances_pfe_per_prefix_v6_ext",
	Filename:      "pfe_per_prefix_v6_stats.proto",
}

func init() {
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6)(nil), "network_instances_pfe_per_prefix_v6")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6NetworkInstanceList)(nil), "network_instances_pfe_per_prefix_v6.network_instance_list")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType)(nil), "network_instances_pfe_per_prefix_v6.network_instance_list.afts_type")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType)(nil), "network_instances_pfe_per_prefix_v6.network_instance_list.afts_type.ipv6_unicast_type")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList)(nil), "network_instances_pfe_per_prefix_v6.network_instance_list.afts_type.ipv6_unicast_type.ipv6_entry_list")
	proto.RegisterType((*NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType)(nil), "network_instances_pfe_per_prefix_v6.network_instance_list.afts_type.ipv6_unicast_type.ipv6_entry_list.state_type")
	proto.RegisterExtension(E_JnprNetworkInstancesPfePerPrefixV6Ext)
}

func init() { proto.RegisterFile("pfe_per_prefix_v6_stats.proto", fileDescriptor_893d61141269cb38) }

var fileDescriptor_893d61141269cb38 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0x4f, 0x6b, 0x13, 0x41,
	0x18, 0xc6, 0x99, 0x36, 0x2d, 0x66, 0x22, 0x24, 0x1d, 0x11, 0xc3, 0x82, 0xa1, 0xf8, 0x07, 0x82,
	0x34, 0xbb, 0xd0, 0x43, 0x0e, 0x3d, 0x49, 0xb1, 0x82, 0x1e, 0x4a, 0x58, 0xb1, 0xa0, 0x97, 0x71,
	0xba, 0x79, 0x37, 0x99, 0x4d, 0x32, 0x3b, 0xce, 0xbc, 0x49, 0x13, 0x8f, 0x1e, 0xc4, 0xa3, 0x77,
	0xaf, 0x7e, 0x13, 0x2f, 0x5e, 0xaa, 0xf5, 0x0b, 0x88, 0xe4, 0x03, 0xf8, 0x19, 0x64, 0x77, 0x92,
	0xd6, 0x34, 0x1e, 0x82, 0xa8, 0xc7, 0xfc, 0xde, 0x27, 0xcf, 0xf3, 0xec, 0xfb, 0xee, 0xd2, 0x9b,
	0x3a, 0x06, 0xae, 0xc1, 0x70, 0x6d, 0x20, 0x96, 0x63, 0x3e, 0x6a, 0x72, 0x8b, 0x02, 0xad, 0xaf,
	0x4d, 0x8a, 0xa9, 0x77, 0x0d, 0xa1, 0x0f, 0x03, 0x40, 0x33, 0xe1, 0x98, 0x6a, 0x07, 0x6f, 0xfd,
	0xd8, 0xa4, 0xb7, 0x15, 0xe0, 0x49, 0x6a, 0x7a, 0x5c, 0x2a, 0x8b, 0x42, 0x45, 0x60, 0xf9, 0x92,
	0x11, 0x8b, 0x69, 0xe5, 0xb2, 0xac, 0x7a, 0x4a, 0xb6, 0xd7, 0xeb, 0xa5, 0xdd, 0x3d, 0x7f, 0x05,
	0x83, 0x25, 0x0d, 0xef, 0x4b, 0x8b, 0x61, 0x79, 0x86, 0x1f, 0xcd, 0xa8, 0xf7, 0x6d, 0x83, 0x5e,
	0xff, 0xad, 0x94, 0x79, 0xb4, 0xa0, 0xc4, 0x00, 0xaa, 0x9f, 0xc9, 0x36, 0xa9, 0x17, 0xf7, 0x37,
	0x5e, 0xdf, 0x5f, 0xbb, 0x42, 0xc2, 0x9c, 0xb1, 0x67, 0xb4, 0x20, 0x62, 0xb4, 0x59, 0x23, 0x52,
	0x2f, 0xed, 0x3e, 0xf8, 0xf3, 0x46, 0x7e, 0xe6, 0xc3, 0x71, 0xa2, 0x21, 0xcc, 0x2d, 0xbd, 0xd3,
	0x02, 0x2d, 0x9e, 0x33, 0xf6, 0x8a, 0x5e, 0x95, 0x7a, 0xd4, 0xe4, 0x43, 0x25, 0x23, 0x61, 0x71,
	0x1e, 0x78, 0xf4, 0x37, 0x02, 0xfd, 0x5f, 0x9d, 0x5d, 0x85, 0x52, 0x86, 0x9e, 0x3a, 0xe2, 0x7d,
	0x5c, 0xa7, 0x5b, 0x4b, 0x12, 0xf6, 0x86, 0x50, 0x9a, 0x53, 0x50, 0x68, 0x26, 0xf3, 0x9b, 0xc4,
	0xff, 0xa6, 0x90, 0x7f, 0x91, 0xe4, 0xee, 0x57, 0xcc, 0xc0, 0x41, 0xf6, 0xdb, 0xfb, 0xb0, 0x46,
	0xcb, 0x97, 0xc6, 0xac, 0x46, 0x37, 0x5d, 0x5a, 0xf5, 0xcb, 0xc2, 0xd5, 0x66, 0x94, 0xbd, 0x25,
	0x74, 0x23, 0x7b, 0x45, 0x61, 0xbe, 0xc8, 0x97, 0xff, 0xa7, 0xb7, 0x9f, 0x87, 0xba, 0x1d, 0xbb,
	0x02, 0x5e, 0x4c, 0xe9, 0x05, 0x64, 0x3b, 0x74, 0x4b, 0x8b, 0xa8, 0x07, 0x68, 0x79, 0x9c, 0x9a,
	0x13, 0x61, 0xda, 0xd0, 0xae, 0x9e, 0x65, 0x1d, 0x0b, 0x61, 0x65, 0x36, 0x79, 0x38, 0x1f, 0xb0,
	0x7b, 0xb4, 0x92, 0x46, 0xb8, 0x28, 0xfe, 0xea, 0xc4, 0x65, 0x37, 0x38, 0xd7, 0xee, 0xbd, 0x27,
	0x74, 0x27, 0x51, 0xda, 0xf0, 0x15, 0x1e, 0x94, 0xc3, 0x18, 0xd9, 0x0d, 0xff, 0xf1, 0x50, 0x49,
	0x0d, 0xe6, 0xd0, 0xfd, 0xc1, 0x3e, 0x01, 0x65, 0x53, 0x63, 0xab, 0xef, 0xdc, 0xca, 0xee, 0xac,
	0xb2, 0xb2, 0xf0, 0x6e, 0x96, 0x79, 0xb8, 0xf8, 0xb1, 0xd9, 0x56, 0x0c, 0x2d, 0x30, 0xad, 0x5c,
	0x74, 0xd4, 0x3c, 0x18, 0xe3, 0xfe, 0x8b, 0x4f, 0xd3, 0x1a, 0x39, 0x9b, 0xd6, 0xc8, 0xf7, 0x69,
	0x8d, 0x3c, 0x0f, 0x3b, 0x12, 0xfd, 0xc4, 0xa5, 0x67, 0x29, 0x81, 0x8c, 0xe0, 0x18, 0x4c, 0x27,
	0xe8, 0x82, 0xe8, 0x63, 0xf7, 0x38, 0xc5, 0x86, 0x54, 0x1d, 0xb0, 0xd8, 0x48, 0x50, 0x36, 0x94,
	0x40, 0x39, 0x82, 0x40, 0xf7, 0x3a, 0x41, 0x82, 0x32, 0x10, 0x6d, 0xa1, 0x11, 0x8c, 0x0d, 0x78,
	0x32, 0x54, 0xa9, 0x0d, 0x6c, 0xd4, 0x85, 0x81, 0xf8, 0x19, 0x00, 0x00, 0xff, 0xff, 0xac, 0x32,
	0x59, 0xa3, 0xa5, 0x04, 0x00, 0x00,
}

func (m *NetworkInstancesPfePerPrefixV6) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xc
			i--
			dAtA[i] = 0xea
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xf2
	}
	if m.Afts != nil {
		{
			size, err := m.Afts.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ipv6Unicast != nil {
		{
			size, err := m.Ipv6Unicast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ipv6Entry) > 0 {
		for iNdEx := len(m.Ipv6Entry) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ipv6Entry[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xc
			i--
			dAtA[i] = 0xea
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xfa
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xea
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OctetsForwarded != nil {
		i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(*m.OctetsForwarded))
		i--
		dAtA[i] = 0xd
		i--
		dAtA[i] = 0x88
	}
	if m.PacketsForwarded != nil {
		i = encodeVarintPfePerPrefixV6Stats(dAtA, i, uint64(*m.PacketsForwarded))
		i--
		dAtA[i] = 0xd
		i--
		dAtA[i] = 0x80
	}
	return len(dAtA) - i, nil
}

func encodeVarintPfePerPrefixV6Stats(dAtA []byte, offset int, v uint64) int {
	offset -= sovPfePerPrefixV6Stats(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstancesPfePerPrefixV6) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Afts != nil {
		l = m.Afts.Size()
		n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ipv6Unicast != nil {
		l = m.Ipv6Unicast.Size()
		n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ipv6Entry) > 0 {
		for _, e := range m.Ipv6Entry {
			l = e.Size()
			n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
	}
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovPfePerPrefixV6Stats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PacketsForwarded != nil {
		n += 2 + sovPfePerPrefixV6Stats(uint64(*m.PacketsForwarded))
	}
	if m.OctetsForwarded != nil {
		n += 2 + sovPfePerPrefixV6Stats(uint64(*m.OctetsForwarded))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPfePerPrefixV6Stats(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPfePerPrefixV6Stats(x uint64) (n int) {
	return sovPfePerPrefixV6Stats(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstancesPfePerPrefixV6) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_pfe_per_prefix_v6: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_pfe_per_prefix_v6: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesPfePerPrefixV6NetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Afts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Afts == nil {
				m.Afts = &NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType{}
			}
			if err := m.Afts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 206:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: afts_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: afts_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6Unicast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6Unicast == nil {
				m.Ipv6Unicast = &NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType{}
			}
			if err := m.Ipv6Unicast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_unicast_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_unicast_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6Entry", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv6Entry = append(m.Ipv6Entry, &NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList{})
			if err := m.Ipv6Entry[len(m.Ipv6Entry)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_entry_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_entry_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 207:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesPfePerPrefixV6NetworkInstanceListAftsTypeIpv6UnicastTypeIpv6EntryListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 208:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketsForwarded", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PacketsForwarded = &v
		case 209:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OctetsForwarded", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OctetsForwarded = &v
		default:
			iNdEx = preIndex
			skippy, err := skipPfePerPrefixV6Stats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPfePerPrefixV6Stats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPfePerPrefixV6Stats(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPfePerPrefixV6Stats
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPfePerPrefixV6Stats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPfePerPrefixV6Stats
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPfePerPrefixV6Stats
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPfePerPrefixV6Stats
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPfePerPrefixV6Stats        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPfePerPrefixV6Stats          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPfePerPrefixV6Stats = fmt.Errorf("proto: unexpected end of group")
)
