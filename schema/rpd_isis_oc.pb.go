// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpd_isis_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstancesIsis struct {
	NetworkInstance      []*NetworkInstancesIsisNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *NetworkInstancesIsis) Reset()         { *m = NetworkInstancesIsis{} }
func (m *NetworkInstancesIsis) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesIsis) ProtoMessage()    {}
func (*NetworkInstancesIsis) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0}
}
func (m *NetworkInstancesIsis) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsis.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsis.Merge(m, src)
}
func (m *NetworkInstancesIsis) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsis) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsis.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsis proto.InternalMessageInfo

func (m *NetworkInstancesIsis) GetNetworkInstance() []*NetworkInstancesIsisNetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceList struct {
	Name                 *string                                               `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Protocols            *NetworkInstancesIsisNetworkInstanceListProtocolsType `protobuf:"bytes,151,opt,name=protocols" json:"protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceList{}
}
func (m *NetworkInstancesIsisNetworkInstanceList) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesIsisNetworkInstanceList) ProtoMessage()    {}
func (*NetworkInstancesIsisNetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceList) GetProtocols() *NetworkInstancesIsisNetworkInstanceListProtocolsType {
	if m != nil {
		return m.Protocols
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsType struct {
	Protocol             *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType `protobuf:"bytes,151,opt,name=protocol" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                          `json:"-"`
	XXX_unrecognized     []byte                                                            `json:"-"`
	XXX_sizecache        int32                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsType) ProtoMessage() {}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) GetProtocol() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType {
	if m != nil {
		return m.Protocol
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType struct {
	Isis                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType `protobuf:"bytes,151,opt,name=isis" json:"isis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) ProtoMessage() {}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) GetIsis() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType {
	if m != nil {
		return m.Isis
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType struct {
	Levels               *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType     `protobuf:"bytes,151,opt,name=levels" json:"levels,omitempty"`
	Interfaces           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType `protobuf:"bytes,152,opt,name=interfaces" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) ProtoMessage() {}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) GetLevels() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType {
	if m != nil {
		return m.Levels
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) GetInterfaces() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType struct {
	Level                []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList `protobuf:"bytes,151,rep,name=level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                          `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) GetLevel() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList {
	if m != nil {
		return m.Level
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList struct {
	LevelNumber          *uint32                                                                                                             `protobuf:"varint,51,opt,name=level_number,json=levelNumber" json:"level_number,omitempty"`
	LinkStateDatabase    *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType   `protobuf:"bytes,151,opt,name=link_state_database,json=linkStateDatabase" json:"link_state_database,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType               `protobuf:"bytes,152,opt,name=state" json:"state,omitempty"`
	SystemLevelCounters  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType `protobuf:"bytes,153,opt,name=system_level_counters,json=systemLevelCounters" json:"system_level_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) GetLevelNumber() uint32 {
	if m != nil && m.LevelNumber != nil {
		return *m.LevelNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) GetLinkStateDatabase() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType {
	if m != nil {
		return m.LinkStateDatabase
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) GetSystemLevelCounters() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType {
	if m != nil {
		return m.SystemLevelCounters
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType struct {
	Lsp                  []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList `protobuf:"bytes,151,rep,name=lsp" json:"lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) GetLsp() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList {
	if m != nil {
		return m.Lsp
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList struct {
	LspId                *string                                                                                                                                   `protobuf:"bytes,51,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType         `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Tlvs                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType          `protobuf:"bytes,152,opt,name=tlvs" json:"tlvs,omitempty"`
	UndefinedTlvs        *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType `protobuf:"bytes,153,opt,name=undefined_tlvs,json=undefinedTlvs" json:"undefined_tlvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) GetLspId() string {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) GetTlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType {
	if m != nil {
		return m.Tlvs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) GetUndefinedTlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType {
	if m != nil {
		return m.UndefinedTlvs
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType struct {
	LspId                *string  `protobuf:"bytes,51,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	MaximumAreaAddresses *uint32  `protobuf:"varint,52,opt,name=maximum_area_addresses,json=maximumAreaAddresses" json:"maximum_area_addresses,omitempty"`
	Version              *uint32  `protobuf:"varint,53,opt,name=version" json:"version,omitempty"`
	Version2             *uint32  `protobuf:"varint,54,opt,name=version2" json:"version2,omitempty"`
	IdLength             *uint32  `protobuf:"varint,55,opt,name=id_length,json=idLength" json:"id_length,omitempty"`
	PduType              *string  `protobuf:"bytes,56,opt,name=pdu_type,json=pduType" json:"pdu_type,omitempty"`
	RemainingLifetime    *uint32  `protobuf:"varint,57,opt,name=remaining_lifetime,json=remainingLifetime" json:"remaining_lifetime,omitempty"`
	SequenceNumber       *uint32  `protobuf:"varint,58,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	Checksum             *uint32  `protobuf:"varint,59,opt,name=checksum" json:"checksum,omitempty"`
	PduLength            *uint32  `protobuf:"varint,60,opt,name=pdu_length,json=pduLength" json:"pdu_length,omitempty"`
	Flags                []string `protobuf:"bytes,62,rep,name=flags" json:"flags,omitempty"`
	IsType               *uint32  `protobuf:"varint,63,opt,name=is_type,json=isType" json:"is_type,omitempty"`
	LspInstallTime       *uint64  `protobuf:"varint,61,opt,name=lsp_install_time,json=lspInstallTime" json:"lsp_install_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetLspId() string {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetMaximumAreaAddresses() uint32 {
	if m != nil && m.MaximumAreaAddresses != nil {
		return *m.MaximumAreaAddresses
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetVersion2() uint32 {
	if m != nil && m.Version2 != nil {
		return *m.Version2
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetIdLength() uint32 {
	if m != nil && m.IdLength != nil {
		return *m.IdLength
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetPduType() string {
	if m != nil && m.PduType != nil {
		return *m.PduType
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetRemainingLifetime() uint32 {
	if m != nil && m.RemainingLifetime != nil {
		return *m.RemainingLifetime
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetSequenceNumber() uint32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetChecksum() uint32 {
	if m != nil && m.Checksum != nil {
		return *m.Checksum
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetPduLength() uint32 {
	if m != nil && m.PduLength != nil {
		return *m.PduLength
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetIsType() uint32 {
	if m != nil && m.IsType != nil {
		return *m.IsType
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) GetLspInstallTime() uint64 {
	if m != nil && m.LspInstallTime != nil {
		return *m.LspInstallTime
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType struct {
	Tlv                  []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList `protobuf:"bytes,151,rep,name=tlv" json:"tlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) GetTlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList {
	if m != nil {
		return m.Tlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList struct {
	Type                     *string                                                                                                                                                             `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	State                    *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType                    `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	AreaAddress              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType              `protobuf:"bytes,152,opt,name=area_address,json=areaAddress" json:"area_address,omitempty"`
	LspBufferSize            *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType            `protobuf:"bytes,158,opt,name=lsp_buffer_size,json=lspBufferSize" json:"lsp_buffer_size,omitempty"`
	Nlpid                    *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType                    `protobuf:"bytes,153,opt,name=nlpid" json:"nlpid,omitempty"`
	Hostname                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType                 `protobuf:"bytes,154,opt,name=hostname" json:"hostname,omitempty"`
	Ipv4InterfaceAddresses   *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType   `protobuf:"bytes,156,opt,name=ipv4_interface_addresses,json=ipv4InterfaceAddresses" json:"ipv4_interface_addresses,omitempty"`
	Ipv6InterfaceAddresses   *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType   `protobuf:"bytes,157,opt,name=ipv6_interface_addresses,json=ipv6InterfaceAddresses" json:"ipv6_interface_addresses,omitempty"`
	Ipv4TeRouterId           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType           `protobuf:"bytes,155,opt,name=ipv4_te_router_id,json=ipv4TeRouterId" json:"ipv4_te_router_id,omitempty"`
	Ipv4Srlgs                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType                `protobuf:"bytes,163,opt,name=ipv4_srlgs,json=ipv4Srlgs" json:"ipv4_srlgs,omitempty"`
	RouterCapabilities       *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType       `protobuf:"bytes,162,opt,name=router_capabilities,json=routerCapabilities" json:"router_capabilities,omitempty"`
	ExtendedIsReachability   *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType   `protobuf:"bytes,161,opt,name=extended_is_reachability,json=extendedIsReachability" json:"extended_is_reachability,omitempty"`
	ExtendedIpv4Reachability *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType `protobuf:"bytes,159,opt,name=extended_ipv4_reachability,json=extendedIpv4Reachability" json:"extended_ipv4_reachability,omitempty"`
	Ipv6Reachability         *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType         `protobuf:"bytes,160,opt,name=ipv6_reachability,json=ipv6Reachability" json:"ipv6_reachability,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                                                                                                                            `json:"-"`
	XXX_unrecognized         []byte                                                                                                                                                              `json:"-"`
	XXX_sizecache            int32                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetAreaAddress() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType {
	if m != nil {
		return m.AreaAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetLspBufferSize() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType {
	if m != nil {
		return m.LspBufferSize
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetNlpid() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType {
	if m != nil {
		return m.Nlpid
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetHostname() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType {
	if m != nil {
		return m.Hostname
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetIpv4InterfaceAddresses() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType {
	if m != nil {
		return m.Ipv4InterfaceAddresses
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetIpv6InterfaceAddresses() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType {
	if m != nil {
		return m.Ipv6InterfaceAddresses
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetIpv4TeRouterId() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType {
	if m != nil {
		return m.Ipv4TeRouterId
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetIpv4Srlgs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType {
	if m != nil {
		return m.Ipv4Srlgs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetRouterCapabilities() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType {
	if m != nil {
		return m.RouterCapabilities
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetExtendedIsReachability() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType {
	if m != nil {
		return m.ExtendedIsReachability
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetExtendedIpv4Reachability() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType {
	if m != nil {
		return m.ExtendedIpv4Reachability
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) GetIpv6Reachability() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType {
	if m != nil {
		return m.Ipv6Reachability
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType struct {
	Type                 *string  `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType struct {
	Size_                *uint32  `protobuf:"varint,51,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) GetSize_() uint32 {
	if m != nil && m.Size_ != nil {
		return *m.Size_
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType struct {
	Nlpid                []string `protobuf:"bytes,51,rep,name=nlpid" json:"nlpid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) GetNlpid() []string {
	if m != nil {
		return m.Nlpid
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType struct {
	Hname                *string  `protobuf:"bytes,51,opt,name=hname" json:"hname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) GetHname() string {
	if m != nil && m.Hname != nil {
		return *m.Hname
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 6}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 6, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 7}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType struct {
	TeRouterId           *string  `protobuf:"bytes,51,opt,name=te_router_id,json=teRouterId" json:"te_router_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 7, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) GetTeRouterId() string {
	if m != nil && m.TeRouterId != nil {
		return *m.TeRouterId
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType struct {
	Ipv4Srlg             []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList `protobuf:"bytes,151,rep,name=ipv4_srlg,json=ipv4Srlg" json:"ipv4_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 8}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) GetIpv4Srlg() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList {
	if m != nil {
		return m.Ipv4Srlg
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList struct {
	InstanceNumber       *uint32                                                                                                                                                                   `protobuf:"varint,51,opt,name=instance_number,json=instanceNumber" json:"instance_number,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 8, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) GetInstanceNumber() uint32 {
	if m != nil && m.InstanceNumber != nil {
		return *m.InstanceNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType struct {
	InstanceNumber       *uint32  `protobuf:"varint,51,opt,name=instance_number,json=instanceNumber" json:"instance_number,omitempty"`
	SystemId             *string  `protobuf:"bytes,52,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	PsnNumber            *uint32  `protobuf:"varint,53,opt,name=psn_number,json=psnNumber" json:"psn_number,omitempty"`
	Flags                []string `protobuf:"bytes,57,rep,name=flags" json:"flags,omitempty"`
	Ipv4InterfaceAddress *string  `protobuf:"bytes,54,opt,name=ipv4_interface_address,json=ipv4InterfaceAddress" json:"ipv4_interface_address,omitempty"`
	Ipv4NeighborAddress  *string  `protobuf:"bytes,55,opt,name=ipv4_neighbor_address,json=ipv4NeighborAddress" json:"ipv4_neighbor_address,omitempty"`
	SrlgValue            []uint32 `protobuf:"varint,56,rep,name=srlg_value,json=srlgValue" json:"srlg_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 8, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetInstanceNumber() uint32 {
	if m != nil && m.InstanceNumber != nil {
		return *m.InstanceNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetPsnNumber() uint32 {
	if m != nil && m.PsnNumber != nil {
		return *m.PsnNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetIpv4InterfaceAddress() string {
	if m != nil && m.Ipv4InterfaceAddress != nil {
		return *m.Ipv4InterfaceAddress
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetIpv4NeighborAddress() string {
	if m != nil && m.Ipv4NeighborAddress != nil {
		return *m.Ipv4NeighborAddress
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) GetSrlgValue() []uint32 {
	if m != nil {
		return m.SrlgValue
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType struct {
	Capability           []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList `protobuf:"bytes,151,rep,name=capability" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) GetCapability() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList {
	if m != nil {
		return m.Capability
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList struct {
	InstanceNumber       *uint32                                                                                                                                                                                         `protobuf:"varint,51,opt,name=instance_number,json=instanceNumber" json:"instance_number,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType            `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Subtlvs              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType          `protobuf:"bytes,152,opt,name=subtlvs" json:"subtlvs,omitempty"`
	UndefinedSubtlvs     *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType `protobuf:"bytes,153,opt,name=undefined_subtlvs,json=undefinedSubtlvs" json:"undefined_subtlvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) GetInstanceNumber() uint32 {
	if m != nil && m.InstanceNumber != nil {
		return *m.InstanceNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) GetSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType {
	if m != nil {
		return m.Subtlvs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) GetUndefinedSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType {
	if m != nil {
		return m.UndefinedSubtlvs
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType struct {
	InstanceNumber       *uint32  `protobuf:"varint,51,opt,name=instance_number,json=instanceNumber" json:"instance_number,omitempty"`
	RouterId             *string  `protobuf:"bytes,52,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	Flags                []string `protobuf:"bytes,53,rep,name=flags" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) GetInstanceNumber() uint32 {
	if m != nil && m.InstanceNumber != nil {
		return *m.InstanceNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) GetRouterId() string {
	if m != nil && m.RouterId != nil {
		return *m.RouterId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType struct {
	Subtlv               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList `protobuf:"bytes,151,rep,name=subtlv" json:"subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) GetSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList {
	if m != nil {
		return m.Subtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList struct {
	Type                     *string                                                                                                                                                                                                                      `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	State                    *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType                    `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	SegmentRoutingAlgorithms *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType `protobuf:"bytes,152,opt,name=segment_routing_algorithms,json=segmentRoutingAlgorithms" json:"segment_routing_algorithms,omitempty"`
	SegmentRoutingCapability *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType `protobuf:"bytes,153,opt,name=segment_routing_capability,json=segmentRoutingCapability" json:"segment_routing_capability,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                                                                                                                                                                                     `json:"-"`
	XXX_unrecognized         []byte                                                                                                                                                                                                                       `json:"-"`
	XXX_sizecache            int32                                                                                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) GetSegmentRoutingAlgorithms() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType {
	if m != nil {
		return m.SegmentRoutingAlgorithms
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) GetSegmentRoutingCapability() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType {
	if m != nil {
		return m.SegmentRoutingCapability
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType struct {
	Type                 *string  `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType struct {
	Algorithm            []string `protobuf:"bytes,51,rep,name=algorithm" json:"algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) GetAlgorithm() []string {
	if m != nil {
		return m.Algorithm
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType           `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	SrgbDescriptors      *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType `protobuf:"bytes,152,opt,name=srgb_descriptors,json=srgbDescriptors" json:"srgb_descriptors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) GetSrgbDescriptors() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType {
	if m != nil {
		return m.SrgbDescriptors
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType struct {
	Flags                []string `protobuf:"bytes,51,rep,name=flags" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType struct {
	SrgbDescriptor       []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList `protobuf:"bytes,151,rep,name=srgb_descriptor,json=srgbDescriptor" json:"srgb_descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 2, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) GetSrgbDescriptor() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList {
	if m != nil {
		return m.SrgbDescriptor
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList struct {
	Range                *uint32                                                                                                                                                                                                                                                                    `protobuf:"varint,51,opt,name=range" json:"range,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 2, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) GetRange() uint32 {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType struct {
	Range                *uint32  `protobuf:"varint,51,opt,name=range" json:"range,omitempty"`
	Label                *string  `protobuf:"bytes,52,opt,name=label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 1, 0, 2, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) GetRange() uint32 {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType struct {
	UndefinedSubtlv      []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList `protobuf:"bytes,151,rep,name=undefined_subtlv,json=undefinedSubtlv" json:"undefined_subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) GetUndefinedSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList {
	if m != nil {
		return m.UndefinedSubtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList struct {
	Type                 *uint32                                                                                                                                                                                                                     `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType struct {
	Type                 *uint32  `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	Length               *uint32  `protobuf:"varint,52,opt,name=length" json:"length,omitempty"`
	Value                *string  `protobuf:"bytes,53,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType struct {
	Neighbors            *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType `protobuf:"bytes,151,opt,name=neighbors" json:"neighbors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                          `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) GetNeighbors() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType struct {
	Neighbor             []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) GetNeighbor() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList {
	if m != nil {
		return m.Neighbor
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList struct {
	SystemId             *string                                                                                                                                                                                                        `protobuf:"bytes,51,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType            `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Subtlvs              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType          `protobuf:"bytes,152,opt,name=subtlvs" json:"subtlvs,omitempty"`
	UndefinedSubtlvs     *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType `protobuf:"bytes,153,opt,name=undefined_subtlvs,json=undefinedSubtlvs" json:"undefined_subtlvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                          `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) GetSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType {
	if m != nil {
		return m.Subtlvs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) GetUndefinedSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType {
	if m != nil {
		return m.UndefinedSubtlvs
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType struct {
	SystemId             *string  `protobuf:"bytes,51,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	Metric               *uint32  `protobuf:"varint,52,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) GetMetric() uint32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType struct {
	Subtlv               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList `protobuf:"bytes,151,rep,name=subtlv" json:"subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) GetSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList {
	if m != nil {
		return m.Subtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList struct {
	Type                       *string                                                                                                                                                                                                                                       `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	State                      *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType                      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	AdminGroup                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType                 `protobuf:"bytes,160,opt,name=admin_group,json=adminGroup" json:"admin_group,omitempty"`
	LinkId                     *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType                     `protobuf:"bytes,154,opt,name=link_id,json=linkId" json:"link_id,omitempty"`
	Ipv4InterfaceAddress       *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType       `protobuf:"bytes,152,opt,name=ipv4_interface_address,json=ipv4InterfaceAddress" json:"ipv4_interface_address,omitempty"`
	Ipv4NeighborAddress        *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType        `protobuf:"bytes,153,opt,name=ipv4_neighbor_address,json=ipv4NeighborAddress" json:"ipv4_neighbor_address,omitempty"`
	MaxLinkBandwidth           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType           `protobuf:"bytes,155,opt,name=max_link_bandwidth,json=maxLinkBandwidth" json:"max_link_bandwidth,omitempty"`
	MaxReservableLinkBandwidth *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType `protobuf:"bytes,156,opt,name=max_reservable_link_bandwidth,json=maxReservableLinkBandwidth" json:"max_reservable_link_bandwidth,omitempty"`
	UnreservedBandwidth        *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType        `protobuf:"bytes,157,opt,name=unreserved_bandwidth,json=unreservedBandwidth" json:"unreserved_bandwidth,omitempty"`
	Ipv6InterfaceAddress       *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType       `protobuf:"bytes,163,opt,name=ipv6_interface_address,json=ipv6InterfaceAddress" json:"ipv6_interface_address,omitempty"`
	Ipv6NeighborAddress        *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType        `protobuf:"bytes,164,opt,name=ipv6_neighbor_address,json=ipv6NeighborAddress" json:"ipv6_neighbor_address,omitempty"`
	TeDefaultMetric            *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType            `protobuf:"bytes,158,opt,name=te_default_metric,json=teDefaultMetric" json:"te_default_metric,omitempty"`
	BandwidthConstraints       *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType       `protobuf:"bytes,159,opt,name=bandwidth_constraints,json=bandwidthConstraints" json:"bandwidth_constraints,omitempty"`
	AdjacencySids              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType              `protobuf:"bytes,161,opt,name=adjacency_sids,json=adjacencySids" json:"adjacency_sids,omitempty"`
	LanAdjacencySids           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType           `protobuf:"bytes,162,opt,name=lan_adjacency_sids,json=lanAdjacencySids" json:"lan_adjacency_sids,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                                                                                                                                                                                                                      `json:"-"`
	XXX_unrecognized           []byte                                                                                                                                                                                                                                        `json:"-"`
	XXX_sizecache              int32                                                                                                                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetAdminGroup() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType {
	if m != nil {
		return m.AdminGroup
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetLinkId() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType {
	if m != nil {
		return m.LinkId
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetIpv4InterfaceAddress() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType {
	if m != nil {
		return m.Ipv4InterfaceAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetIpv4NeighborAddress() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType {
	if m != nil {
		return m.Ipv4NeighborAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetMaxLinkBandwidth() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType {
	if m != nil {
		return m.MaxLinkBandwidth
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetMaxReservableLinkBandwidth() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType {
	if m != nil {
		return m.MaxReservableLinkBandwidth
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetUnreservedBandwidth() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType {
	if m != nil {
		return m.UnreservedBandwidth
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetIpv6InterfaceAddress() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType {
	if m != nil {
		return m.Ipv6InterfaceAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetIpv6NeighborAddress() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType {
	if m != nil {
		return m.Ipv6NeighborAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetTeDefaultMetric() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType {
	if m != nil {
		return m.TeDefaultMetric
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetBandwidthConstraints() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType {
	if m != nil {
		return m.BandwidthConstraints
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetAdjacencySids() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType {
	if m != nil {
		return m.AdjacencySids
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) GetLanAdjacencySids() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType {
	if m != nil {
		return m.LanAdjacencySids
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType struct {
	Type                 *string  `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType struct {
	AdminGroup           []uint32 `protobuf:"varint,51,rep,name=admin_group,json=adminGroup" json:"admin_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) GetAdminGroup() []uint32 {
	if m != nil {
		return m.AdminGroup
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType struct {
	Local                *uint32  `protobuf:"varint,51,opt,name=local" json:"local,omitempty"`
	Remote               *uint32  `protobuf:"varint,52,opt,name=remote" json:"remote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) GetLocal() uint32 {
	if m != nil && m.Local != nil {
		return *m.Local
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) GetRemote() uint32 {
	if m != nil && m.Remote != nil {
		return *m.Remote
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 3}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 3, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 4}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 4, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 5}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType struct {
	Bandwidth            *string  `protobuf:"bytes,51,opt,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 5, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) GetBandwidth() string {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 6}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType struct {
	Bandwidth            *string  `protobuf:"bytes,51,opt,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 6, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) GetBandwidth() string {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType struct {
	SetupPriority        []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList `protobuf:"bytes,151,rep,name=setup_priority,json=setupPriority" json:"setup_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 7}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) GetSetupPriority() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList {
	if m != nil {
		return m.SetupPriority
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList struct {
	Priority             *uint32                                                                                                                                                                                                                                                          `protobuf:"varint,51,opt,name=priority" json:"priority,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 7, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) GetPriority() uint32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType struct {
	Priority             *uint32  `protobuf:"varint,51,opt,name=priority" json:"priority,omitempty"`
	Bandwidth            *string  `protobuf:"bytes,52,opt,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 7, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) GetPriority() uint32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) GetBandwidth() string {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 8}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 8, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 9}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType struct {
	Address              []string `protobuf:"bytes,51,rep,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 9, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) GetAddress() []string {
	if m != nil {
		return m.Address
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 10}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType struct {
	Metric               *uint32  `protobuf:"varint,51,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 10, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) GetMetric() uint32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType struct {
	BandwidthConstraint  []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList `protobuf:"bytes,151,rep,name=bandwidth_constraint,json=bandwidthConstraint" json:"bandwidth_constraint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) GetBandwidthConstraint() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList {
	if m != nil {
		return m.BandwidthConstraint
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList struct {
	ModelId              *uint32                                                                                                                                                                                                                                                                       `protobuf:"varint,51,opt,name=model_id,json=modelId" json:"model_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType       `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Constraints          *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType `protobuf:"bytes,152,opt,name=constraints" json:"constraints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) GetModelId() uint32 {
	if m != nil && m.ModelId != nil {
		return *m.ModelId
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) GetConstraints() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType {
	if m != nil {
		return m.Constraints
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType struct {
	ModelId              *uint32  `protobuf:"varint,51,opt,name=model_id,json=modelId" json:"model_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) GetModelId() uint32 {
	if m != nil && m.ModelId != nil {
		return *m.ModelId
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType struct {
	Constraint           []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList `protobuf:"bytes,151,rep,name=constraint" json:"constraint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) GetConstraint() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList {
	if m != nil {
		return m.Constraint
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList struct {
	ConstraintId         *uint32                                                                                                                                                                                                                                                                                              `protobuf:"varint,51,opt,name=constraint_id,json=constraintId" json:"constraint_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                                                                `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) GetConstraintId() uint32 {
	if m != nil && m.ConstraintId != nil {
		return *m.ConstraintId
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType struct {
	ConstraintId         *uint32  `protobuf:"varint,51,opt,name=constraint_id,json=constraintId" json:"constraint_id,omitempty"`
	Bandwidth            *string  `protobuf:"bytes,52,opt,name=bandwidth" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 11, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) GetConstraintId() uint32 {
	if m != nil && m.ConstraintId != nil {
		return *m.ConstraintId
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) GetBandwidth() string {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType struct {
	AdjSid               *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType `protobuf:"bytes,151,opt,name=adj_sid,json=adjSid" json:"adj_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 12}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) GetAdjSid() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType {
	if m != nil {
		return m.AdjSid
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 12, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType struct {
	Value                *uint32  `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	Flags                []string `protobuf:"bytes,52,rep,name=flags" json:"flags,omitempty"`
	Weight               *uint32  `protobuf:"varint,53,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 12, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType struct {
	LanAdjSid            *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType `protobuf:"bytes,151,opt,name=lan_adj_sid,json=lanAdjSid" json:"lan_adj_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 13}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) GetLanAdjSid() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType {
	if m != nil {
		return m.LanAdjSid
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 13, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType struct {
	Value                *uint32  `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	Flags                []string `protobuf:"bytes,52,rep,name=flags" json:"flags,omitempty"`
	Weight               *uint32  `protobuf:"varint,53,opt,name=weight" json:"weight,omitempty"`
	NeighborId           *string  `protobuf:"bytes,54,opt,name=neighbor_id,json=neighborId" json:"neighbor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 1, 0, 13, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) GetNeighborId() string {
	if m != nil && m.NeighborId != nil {
		return *m.NeighborId
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType struct {
	UndefinedSubtlv      []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList `protobuf:"bytes,151,rep,name=undefined_subtlv,json=undefinedSubtlv" json:"undefined_subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) GetUndefinedSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList {
	if m != nil {
		return m.UndefinedSubtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList struct {
	Type                 *uint32                                                                                                                                                                                                                                    `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType struct {
	Type                 *uint32  `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	Length               *uint32  `protobuf:"varint,52,opt,name=length" json:"length,omitempty"`
	Value                *string  `protobuf:"bytes,53,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType struct {
	Prefixes             *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType `protobuf:"bytes,151,opt,name=prefixes" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) GetPrefixes() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType struct {
	Prefix               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList `protobuf:"bytes,151,rep,name=prefix" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) GetPrefix() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList struct {
	Prefix               *string                                                                                                                                                                                                       `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType            `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Subtlvs              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType          `protobuf:"bytes,152,opt,name=subtlvs" json:"subtlvs,omitempty"`
	UndefinedSubtlvs     *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType `protobuf:"bytes,153,opt,name=undefined_subtlvs,json=undefinedSubtlvs" json:"undefined_subtlvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) GetSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType {
	if m != nil {
		return m.Subtlvs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) GetUndefinedSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType {
	if m != nil {
		return m.UndefinedSubtlvs
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType struct {
	UpDown               *bool    `protobuf:"varint,51,opt,name=up_down,json=upDown" json:"up_down,omitempty"`
	SBit                 *bool    `protobuf:"varint,52,opt,name=s_bit,json=sBit" json:"s_bit,omitempty"`
	Prefix               *string  `protobuf:"bytes,54,opt,name=prefix" json:"prefix,omitempty"`
	Metric               *uint32  `protobuf:"varint,53,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) GetUpDown() bool {
	if m != nil && m.UpDown != nil {
		return *m.UpDown
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) GetSBit() bool {
	if m != nil && m.SBit != nil {
		return *m.SBit
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) GetMetric() uint32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType struct {
	Subtlv               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList `protobuf:"bytes,151,rep,name=subtlv" json:"subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) GetSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList {
	if m != nil {
		return m.Subtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList struct {
	Type                 *string                                                                                                                                                                                                                      `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Tag                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType        `protobuf:"bytes,152,opt,name=tag" json:"tag,omitempty"`
	PrefixSids           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType `protobuf:"bytes,153,opt,name=prefix_sids,json=prefixSids" json:"prefix_sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetTag() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetPrefixSids() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType {
	if m != nil {
		return m.PrefixSids
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType struct {
	Type                 *string  `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                          `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType struct {
	Tag32                []uint32 `protobuf:"varint,51,rep,name=tag32" json:"tag32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) GetTag32() []uint32 {
	if m != nil {
		return m.Tag32
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType struct {
	PrefixSid            []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList `protobuf:"bytes,151,rep,name=prefix_sid,json=prefixSid" json:"prefix_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) GetPrefixSid() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList {
	if m != nil {
		return m.PrefixSid
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList struct {
	Value                *uint32                                                                                                                                                                                                                                            `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType struct {
	Value                *uint32  `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	Flags                []string `protobuf:"bytes,53,rep,name=flags" json:"flags,omitempty"`
	Algorithm            *uint32  `protobuf:"varint,52,opt,name=algorithm" json:"algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 1, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetAlgorithm() uint32 {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType struct {
	UndefinedSubtlv      []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList `protobuf:"bytes,151,rep,name=undefined_subtlv,json=undefinedSubtlv" json:"undefined_subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) GetUndefinedSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList {
	if m != nil {
		return m.UndefinedSubtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList struct {
	Type                 *uint32                                                                                                                                                                                                                                   `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType struct {
	Type                 *uint32  `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	Length               *uint32  `protobuf:"varint,52,opt,name=length" json:"length,omitempty"`
	Value                *string  `protobuf:"bytes,53,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 11, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType struct {
	Prefixes             *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType `protobuf:"bytes,151,opt,name=prefixes" json:"prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) GetPrefixes() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType {
	if m != nil {
		return m.Prefixes
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType struct {
	Prefix               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList `protobuf:"bytes,151,rep,name=prefix" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) GetPrefix() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList struct {
	Prefix               *string                                                                                                                                                                                               `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType            `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Subtlvs              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType          `protobuf:"bytes,152,opt,name=subtlvs" json:"subtlvs,omitempty"`
	UndefinedSubtlvs     *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType `protobuf:"bytes,153,opt,name=undefined_subtlvs,json=undefinedSubtlvs" json:"undefined_subtlvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) GetSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType {
	if m != nil {
		return m.Subtlvs
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) GetUndefinedSubtlvs() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType {
	if m != nil {
		return m.UndefinedSubtlvs
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType struct {
	UpDown               *bool    `protobuf:"varint,52,opt,name=up_down,json=upDown" json:"up_down,omitempty"`
	XBit                 *bool    `protobuf:"varint,53,opt,name=x_bit,json=xBit" json:"x_bit,omitempty"`
	SBit                 *bool    `protobuf:"varint,54,opt,name=s_bit,json=sBit" json:"s_bit,omitempty"`
	Prefix               *string  `protobuf:"bytes,51,opt,name=prefix" json:"prefix,omitempty"`
	Metric               *uint32  `protobuf:"varint,55,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) GetUpDown() bool {
	if m != nil && m.UpDown != nil {
		return *m.UpDown
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) GetXBit() bool {
	if m != nil && m.XBit != nil {
		return *m.XBit
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) GetSBit() bool {
	if m != nil && m.SBit != nil {
		return *m.SBit
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) GetMetric() uint32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType struct {
	Subtlv               []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList `protobuf:"bytes,151,rep,name=subtlv" json:"subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) GetSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList {
	if m != nil {
		return m.Subtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList struct {
	Type                 *string                                                                                                                                                                                                              `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Tag                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType        `protobuf:"bytes,152,opt,name=tag" json:"tag,omitempty"`
	PrefixSids           *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType `protobuf:"bytes,153,opt,name=prefix_sids,json=prefixSids" json:"prefix_sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetTag() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) GetPrefixSids() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType {
	if m != nil {
		return m.PrefixSids
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType struct {
	Type                 *string  `protobuf:"bytes,51,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType struct {
	Tag32                []uint32 `protobuf:"varint,51,rep,name=tag32" json:"tag32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) GetTag32() []uint32 {
	if m != nil {
		return m.Tag32
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType struct {
	PrefixSid            []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList `protobuf:"bytes,151,rep,name=prefix_sid,json=prefixSid" json:"prefix_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                            `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                              `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                               `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) GetPrefixSid() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList {
	if m != nil {
		return m.PrefixSid
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList struct {
	Value                *uint32                                                                                                                                                                                                                                    `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType struct {
	Value                *uint32  `protobuf:"varint,51,opt,name=value" json:"value,omitempty"`
	Flags                []string `protobuf:"bytes,53,rep,name=flags" json:"flags,omitempty"`
	Algorithm            *uint32  `protobuf:"varint,52,opt,name=algorithm" json:"algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 1, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) GetAlgorithm() uint32 {
	if m != nil && m.Algorithm != nil {
		return *m.Algorithm
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType struct {
	UndefinedSubtlv      []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList `protobuf:"bytes,151,rep,name=undefined_subtlv,json=undefinedSubtlv" json:"undefined_subtlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) GetUndefinedSubtlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList {
	if m != nil {
		return m.UndefinedSubtlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList struct {
	Type                 *uint32                                                                                                                                                                                                                           `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType struct {
	Type                 *uint32  `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	Length               *uint32  `protobuf:"varint,52,opt,name=length" json:"length,omitempty"`
	Value                *string  `protobuf:"bytes,53,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType struct {
	UndefinedTlv         []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList `protobuf:"bytes,151,rep,name=undefined_tlv,json=undefinedTlv" json:"undefined_tlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) GetUndefinedTlv() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList {
	if m != nil {
		return m.UndefinedTlv
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList struct {
	Type                 *uint32                                                                                                                                                            `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType struct {
	Type                 *uint32  `protobuf:"varint,51,opt,name=type" json:"type,omitempty"`
	Length               *uint32  `protobuf:"varint,52,opt,name=length" json:"length,omitempty"`
	Value                *string  `protobuf:"bytes,53,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) GetLength() uint32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType struct {
	LevelNumber          *uint32  `protobuf:"varint,51,opt,name=level_number,json=levelNumber" json:"level_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) GetLevelNumber() uint32 {
	if m != nil && m.LevelNumber != nil {
		return *m.LevelNumber
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType struct {
	CorruptedLsps              *uint32  `protobuf:"varint,51,opt,name=corrupted_lsps,json=corruptedLsps" json:"corrupted_lsps,omitempty"`
	DatabaseOverloads          *uint32  `protobuf:"varint,52,opt,name=database_overloads,json=databaseOverloads" json:"database_overloads,omitempty"`
	ManualAddressDropFromAreas *uint32  `protobuf:"varint,53,opt,name=manual_address_drop_from_areas,json=manualAddressDropFromAreas" json:"manual_address_drop_from_areas,omitempty"`
	ExceedMaxSeqNums           *uint32  `protobuf:"varint,54,opt,name=exceed_max_seq_nums,json=exceedMaxSeqNums" json:"exceed_max_seq_nums,omitempty"`
	SeqNumSkips                *uint32  `protobuf:"varint,55,opt,name=seq_num_skips,json=seqNumSkips" json:"seq_num_skips,omitempty"`
	OwnLspPurges               *uint32  `protobuf:"varint,56,opt,name=own_lsp_purges,json=ownLspPurges" json:"own_lsp_purges,omitempty"`
	IdLenMismatch              *uint32  `protobuf:"varint,57,opt,name=id_len_mismatch,json=idLenMismatch" json:"id_len_mismatch,omitempty"`
	PartChanges                *uint32  `protobuf:"varint,58,opt,name=part_changes,json=partChanges" json:"part_changes,omitempty"`
	MaxAreaAddressMismatches   *uint32  `protobuf:"varint,59,opt,name=max_area_address_mismatches,json=maxAreaAddressMismatches" json:"max_area_address_mismatches,omitempty"`
	AuthFails                  *uint32  `protobuf:"varint,60,opt,name=auth_fails,json=authFails" json:"auth_fails,omitempty"`
	SpfRuns                    *uint32  `protobuf:"varint,61,opt,name=spf_runs,json=spfRuns" json:"spf_runs,omitempty"`
	AuthTypeFails              *uint32  `protobuf:"varint,62,opt,name=auth_type_fails,json=authTypeFails" json:"auth_type_fails,omitempty"`
	LspErrors                  *uint32  `protobuf:"varint,63,opt,name=lsp_errors,json=lspErrors" json:"lsp_errors,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 0, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetCorruptedLsps() uint32 {
	if m != nil && m.CorruptedLsps != nil {
		return *m.CorruptedLsps
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetDatabaseOverloads() uint32 {
	if m != nil && m.DatabaseOverloads != nil {
		return *m.DatabaseOverloads
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetManualAddressDropFromAreas() uint32 {
	if m != nil && m.ManualAddressDropFromAreas != nil {
		return *m.ManualAddressDropFromAreas
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetExceedMaxSeqNums() uint32 {
	if m != nil && m.ExceedMaxSeqNums != nil {
		return *m.ExceedMaxSeqNums
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetSeqNumSkips() uint32 {
	if m != nil && m.SeqNumSkips != nil {
		return *m.SeqNumSkips
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetOwnLspPurges() uint32 {
	if m != nil && m.OwnLspPurges != nil {
		return *m.OwnLspPurges
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetIdLenMismatch() uint32 {
	if m != nil && m.IdLenMismatch != nil {
		return *m.IdLenMismatch
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetPartChanges() uint32 {
	if m != nil && m.PartChanges != nil {
		return *m.PartChanges
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetMaxAreaAddressMismatches() uint32 {
	if m != nil && m.MaxAreaAddressMismatches != nil {
		return *m.MaxAreaAddressMismatches
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetAuthFails() uint32 {
	if m != nil && m.AuthFails != nil {
		return *m.AuthFails
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetSpfRuns() uint32 {
	if m != nil && m.SpfRuns != nil {
		return *m.SpfRuns
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetAuthTypeFails() uint32 {
	if m != nil && m.AuthTypeFails != nil {
		return *m.AuthTypeFails
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) GetLspErrors() uint32 {
	if m != nil && m.LspErrors != nil {
		return *m.LspErrors
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType struct {
	Interface            []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) GetInterface() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList struct {
	InterfaceId          *string                                                                                                                 `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType           `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	CircuitCounters      *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType `protobuf:"bytes,152,opt,name=circuit_counters,json=circuitCounters" json:"circuit_counters,omitempty"`
	PacketCounters       *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType  `protobuf:"bytes,153,opt,name=packet_counters,json=packetCounters" json:"packet_counters,omitempty"`
	Levels               *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType          `protobuf:"bytes,154,opt,name=levels" json:"levels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) GetCircuitCounters() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType {
	if m != nil {
		return m.CircuitCounters
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) GetPacketCounters() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType {
	if m != nil {
		return m.PacketCounters
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) GetLevels() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType {
	if m != nil {
		return m.Levels
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType struct {
	InterfaceId          *string  `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType struct {
	AdjChanges               *uint32  `protobuf:"varint,51,opt,name=adj_changes,json=adjChanges" json:"adj_changes,omitempty"`
	InitFails                *uint32  `protobuf:"varint,52,opt,name=init_fails,json=initFails" json:"init_fails,omitempty"`
	RejectedAdj              *uint32  `protobuf:"varint,53,opt,name=rejected_adj,json=rejectedAdj" json:"rejected_adj,omitempty"`
	IdFieldLenMismatches     *uint32  `protobuf:"varint,54,opt,name=id_field_len_mismatches,json=idFieldLenMismatches" json:"id_field_len_mismatches,omitempty"`
	MaxAreaAddressMismatches *uint32  `protobuf:"varint,55,opt,name=max_area_address_mismatches,json=maxAreaAddressMismatches" json:"max_area_address_mismatches,omitempty"`
	AuthTypeFails            *uint32  `protobuf:"varint,56,opt,name=auth_type_fails,json=authTypeFails" json:"auth_type_fails,omitempty"`
	AuthFails                *uint32  `protobuf:"varint,57,opt,name=auth_fails,json=authFails" json:"auth_fails,omitempty"`
	LanDisChanges            *uint32  `protobuf:"varint,58,opt,name=lan_dis_changes,json=lanDisChanges" json:"lan_dis_changes,omitempty"`
	AdjNumber                *uint32  `protobuf:"varint,59,opt,name=adj_number,json=adjNumber" json:"adj_number,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetAdjChanges() uint32 {
	if m != nil && m.AdjChanges != nil {
		return *m.AdjChanges
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetInitFails() uint32 {
	if m != nil && m.InitFails != nil {
		return *m.InitFails
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetRejectedAdj() uint32 {
	if m != nil && m.RejectedAdj != nil {
		return *m.RejectedAdj
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetIdFieldLenMismatches() uint32 {
	if m != nil && m.IdFieldLenMismatches != nil {
		return *m.IdFieldLenMismatches
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetMaxAreaAddressMismatches() uint32 {
	if m != nil && m.MaxAreaAddressMismatches != nil {
		return *m.MaxAreaAddressMismatches
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetAuthTypeFails() uint32 {
	if m != nil && m.AuthTypeFails != nil {
		return *m.AuthTypeFails
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetAuthFails() uint32 {
	if m != nil && m.AuthFails != nil {
		return *m.AuthFails
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetLanDisChanges() uint32 {
	if m != nil && m.LanDisChanges != nil {
		return *m.LanDisChanges
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) GetAdjNumber() uint32 {
	if m != nil && m.AdjNumber != nil {
		return *m.AdjNumber
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType struct {
	Lsp                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType     `protobuf:"bytes,151,opt,name=lsp" json:"lsp,omitempty"`
	Iih                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType     `protobuf:"bytes,152,opt,name=iih" json:"iih,omitempty"`
	Ish                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType     `protobuf:"bytes,155,opt,name=ish" json:"ish,omitempty"`
	Esh                  *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType     `protobuf:"bytes,156,opt,name=esh" json:"esh,omitempty"`
	Psnp                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType    `protobuf:"bytes,153,opt,name=psnp" json:"psnp,omitempty"`
	Csnp                 *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType    `protobuf:"bytes,154,opt,name=csnp" json:"csnp,omitempty"`
	Unknown              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType `protobuf:"bytes,157,opt,name=unknown" json:"unknown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetLsp() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType {
	if m != nil {
		return m.Lsp
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetIih() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType {
	if m != nil {
		return m.Iih
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetIsh() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType {
	if m != nil {
		return m.Ish
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetEsh() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType {
	if m != nil {
		return m.Esh
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetPsnp() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType {
	if m != nil {
		return m.Psnp
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetCsnp() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType {
	if m != nil {
		return m.Csnp
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) GetUnknown() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType {
	if m != nil {
		return m.Unknown
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 3}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 3, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 4}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 4, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 5}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 5, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType struct {
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 6}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType struct {
	Received             *uint32  `protobuf:"varint,51,opt,name=received" json:"received,omitempty"`
	Processed            *uint32  `protobuf:"varint,53,opt,name=processed" json:"processed,omitempty"`
	Dropped              *uint32  `protobuf:"varint,52,opt,name=dropped" json:"dropped,omitempty"`
	Sent                 *uint32  `protobuf:"varint,54,opt,name=sent" json:"sent,omitempty"`
	Retransmit           *uint32  `protobuf:"varint,55,opt,name=retransmit" json:"retransmit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 2, 6, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) GetReceived() uint32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) GetProcessed() uint32 {
	if m != nil && m.Processed != nil {
		return *m.Processed
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) GetDropped() uint32 {
	if m != nil && m.Dropped != nil {
		return *m.Dropped
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) GetSent() uint32 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) GetRetransmit() uint32 {
	if m != nil && m.Retransmit != nil {
		return *m.Retransmit
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType struct {
	Level                []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList `protobuf:"bytes,151,rep,name=level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) GetLevel() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList {
	if m != nil {
		return m.Level
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList struct {
	LevelNumber          *uint32                                                                                                                                `protobuf:"varint,51,opt,name=level_number,json=levelNumber" json:"level_number,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType       `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Adjacencies          *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType `protobuf:"bytes,152,opt,name=adjacencies" json:"adjacencies,omitempty"`
	AfiSafi              *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType     `protobuf:"bytes,153,opt,name=afi_safi,json=afiSafi" json:"afi_safi,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) GetLevelNumber() uint32 {
	if m != nil && m.LevelNumber != nil {
		return *m.LevelNumber
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) GetAdjacencies() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType {
	if m != nil {
		return m.Adjacencies
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) GetAfiSafi() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType {
	if m != nil {
		return m.AfiSafi
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType struct {
	LevelNumber          *uint32  `protobuf:"varint,51,opt,name=level_number,json=levelNumber" json:"level_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) GetLevelNumber() uint32 {
	if m != nil && m.LevelNumber != nil {
		return *m.LevelNumber
	}
	return 0
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType struct {
	Adjacency            []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList `protobuf:"bytes,151,rep,name=adjacency" json:"adjacency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 1}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) GetAdjacency() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList {
	if m != nil {
		return m.Adjacency
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList struct {
	SystemId             *string                                                                                                                                                      `protobuf:"bytes,51,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType struct {
	SystemId                  *string  `protobuf:"bytes,51,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	NeighborSnpa              *string  `protobuf:"bytes,52,opt,name=neighbor_snpa,json=neighborSnpa" json:"neighbor_snpa,omitempty"`
	LocalExtendedCircuitId    *uint32  `protobuf:"varint,53,opt,name=local_extended_circuit_id,json=localExtendedCircuitId" json:"local_extended_circuit_id,omitempty"`
	NeighborExtendedCircuitId *uint32  `protobuf:"varint,54,opt,name=neighbor_extended_circuit_id,json=neighborExtendedCircuitId" json:"neighbor_extended_circuit_id,omitempty"`
	Priority                  *uint32  `protobuf:"varint,55,opt,name=priority" json:"priority,omitempty"`
	DisSystemId               *string  `protobuf:"bytes,56,opt,name=dis_system_id,json=disSystemId" json:"dis_system_id,omitempty"`
	NeighborCircuitType       *string  `protobuf:"bytes,57,opt,name=neighbor_circuit_type,json=neighborCircuitType" json:"neighbor_circuit_type,omitempty"`
	AdjacencyType             *string  `protobuf:"bytes,58,opt,name=adjacency_type,json=adjacencyType" json:"adjacency_type,omitempty"`
	AdjacencyState            *string  `protobuf:"bytes,59,opt,name=adjacency_state,json=adjacencyState" json:"adjacency_state,omitempty"`
	RemainingHoldTime         *uint32  `protobuf:"varint,66,opt,name=remaining_hold_time,json=remainingHoldTime" json:"remaining_hold_time,omitempty"`
	UpTime                    *uint32  `protobuf:"varint,60,opt,name=up_time,json=upTime" json:"up_time,omitempty"`
	MultiTopology             *bool    `protobuf:"varint,61,opt,name=multi_topology,json=multiTopology" json:"multi_topology,omitempty"`
	Topology                  []string `protobuf:"bytes,62,rep,name=topology" json:"topology,omitempty"`
	RestartSupport            *bool    `protobuf:"varint,63,opt,name=restart_support,json=restartSupport" json:"restart_support,omitempty"`
	RestartSuppress           *bool    `protobuf:"varint,64,opt,name=restart_suppress,json=restartSuppress" json:"restart_suppress,omitempty"`
	RestartStatus             *bool    `protobuf:"varint,65,opt,name=restart_status,json=restartStatus" json:"restart_status,omitempty"`
	AreaAddress               []string `protobuf:"bytes,67,rep,name=area_address,json=areaAddress" json:"area_address,omitempty"`
	Nlpid                     []string `protobuf:"bytes,68,rep,name=nlpid" json:"nlpid,omitempty"`
	Ipv4NeighborAddress       []string `protobuf:"bytes,69,rep,name=ipv4_neighbor_address,json=ipv4NeighborAddress" json:"ipv4_neighbor_address,omitempty"`
	Ipv6NeighborAddress       []string `protobuf:"bytes,70,rep,name=ipv6_neighbor_address,json=ipv6NeighborAddress" json:"ipv6_neighbor_address,omitempty"`
	LanAdjacencyState         *string  `protobuf:"bytes,71,opt,name=lan_adjacency_state,json=lanAdjacencyState" json:"lan_adjacency_state,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetSystemId() string {
	if m != nil && m.SystemId != nil {
		return *m.SystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetNeighborSnpa() string {
	if m != nil && m.NeighborSnpa != nil {
		return *m.NeighborSnpa
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetLocalExtendedCircuitId() uint32 {
	if m != nil && m.LocalExtendedCircuitId != nil {
		return *m.LocalExtendedCircuitId
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetNeighborExtendedCircuitId() uint32 {
	if m != nil && m.NeighborExtendedCircuitId != nil {
		return *m.NeighborExtendedCircuitId
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetPriority() uint32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetDisSystemId() string {
	if m != nil && m.DisSystemId != nil {
		return *m.DisSystemId
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetNeighborCircuitType() string {
	if m != nil && m.NeighborCircuitType != nil {
		return *m.NeighborCircuitType
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetAdjacencyType() string {
	if m != nil && m.AdjacencyType != nil {
		return *m.AdjacencyType
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetAdjacencyState() string {
	if m != nil && m.AdjacencyState != nil {
		return *m.AdjacencyState
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetRemainingHoldTime() uint32 {
	if m != nil && m.RemainingHoldTime != nil {
		return *m.RemainingHoldTime
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetUpTime() uint32 {
	if m != nil && m.UpTime != nil {
		return *m.UpTime
	}
	return 0
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetMultiTopology() bool {
	if m != nil && m.MultiTopology != nil {
		return *m.MultiTopology
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetTopology() []string {
	if m != nil {
		return m.Topology
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetRestartSupport() bool {
	if m != nil && m.RestartSupport != nil {
		return *m.RestartSupport
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetRestartSuppress() bool {
	if m != nil && m.RestartSuppress != nil {
		return *m.RestartSuppress
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetRestartStatus() bool {
	if m != nil && m.RestartStatus != nil {
		return *m.RestartStatus
	}
	return false
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetAreaAddress() []string {
	if m != nil {
		return m.AreaAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetNlpid() []string {
	if m != nil {
		return m.Nlpid
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetIpv4NeighborAddress() []string {
	if m != nil {
		return m.Ipv4NeighborAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetIpv6NeighborAddress() []string {
	if m != nil {
		return m.Ipv6NeighborAddress
	}
	return nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) GetLanAdjacencyState() string {
	if m != nil && m.LanAdjacencyState != nil {
		return *m.LanAdjacencyState
	}
	return ""
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType struct {
	Af                   []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList `protobuf:"bytes,151,rep,name=af" json:"af,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 2}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) GetAf() []*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList {
	if m != nil {
		return m.Af
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList struct {
	AfiName              *string                                                                                                                                           `protobuf:"bytes,51,opt,name=afi_name,json=afiName" json:"afi_name,omitempty"`
	SafiName             *string                                                                                                                                           `protobuf:"bytes,52,opt,name=safi_name,json=safiName" json:"safi_name,omitempty"`
	State                *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) GetAfiName() string {
	if m != nil && m.AfiName != nil {
		return *m.AfiName
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) GetSafiName() string {
	if m != nil && m.SafiName != nil {
		return *m.SafiName
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) GetState() *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType struct {
	AfiName              *string  `protobuf:"bytes,51,opt,name=afi_name,json=afiName" json:"afi_name,omitempty"`
	SafiName             *string  `protobuf:"bytes,52,opt,name=safi_name,json=safiName" json:"safi_name,omitempty"`
	Metric               *uint32  `protobuf:"varint,53,opt,name=metric" json:"metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) Reset() {
	*m = NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType{}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) ProtoMessage() {
}
func (*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_69a37f0f83887bca, []int{0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 0, 0}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType.Merge(m, src)
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType proto.InternalMessageInfo

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) GetAfiName() string {
	if m != nil && m.AfiName != nil {
		return *m.AfiName
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) GetSafiName() string {
	if m != nil && m.SafiName != nil {
		return *m.SafiName
	}
	return ""
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) GetMetric() uint32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

var E_JnprNetworkInstancesIsisExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstancesIsis)(nil),
	Field:         65,
	Name:          "jnpr_network_instances_isis_ext",
	Tag:           "bytes,65,opt,name=jnpr_network_instances_isis_ext",
	Filename:      "rpd_isis_oc.proto",
}

func init() {
	proto.RegisterType((*NetworkInstancesIsis)(nil), "network_instances_isis")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceList)(nil), "network_instances_isis.network_instance_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsType)(nil), "network_instances_isis.network_instance_list.protocols_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.area_address_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.area_address_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.lsp_buffer_size_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.lsp_buffer_size_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.nlpid_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.nlpid_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.hostname_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.hostname_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_interface_addresses_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_interface_addresses_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_interface_addresses_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_interface_addresses_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_te_router_id_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_te_router_id_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_srlgs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_srlgs_type.ipv4_srlg_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv4_srlgs_type.ipv4_srlg_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_algorithms_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_algorithms_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_capability_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_capability_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_capability_type.srgb_descriptors_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_capability_type.srgb_descriptors_type.srgb_descriptor_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.subtlvs_type.subtlv_list.segment_routing_capability_type.srgb_descriptors_type.srgb_descriptor_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.undefined_subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.undefined_subtlvs_type.undefined_subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.router_capabilities_type.capability_list.undefined_subtlvs_type.undefined_subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.admin_group_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.admin_group_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.link_id_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.link_id_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv4_interface_address_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv4_interface_address_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv4_neighbor_address_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv4_neighbor_address_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.max_link_bandwidth_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.max_link_bandwidth_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.max_reservable_link_bandwidth_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.max_reservable_link_bandwidth_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.unreserved_bandwidth_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.unreserved_bandwidth_type.setup_priority_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.unreserved_bandwidth_type.setup_priority_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv6_interface_address_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv6_interface_address_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv6_neighbor_address_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.ipv6_neighbor_address_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.te_default_metric_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.te_default_metric_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type.bandwidth_constraint_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type.bandwidth_constraint_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type.bandwidth_constraint_list.constraints_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type.bandwidth_constraint_list.constraints_type.constraint_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.bandwidth_constraints_type.bandwidth_constraint_list.constraints_type.constraint_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.adjacency_sids_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.adjacency_sids_type.adj_sid_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.adjacency_sids_type.adj_sid_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.lan_adjacency_sids_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.lan_adjacency_sids_type.lan_adj_sid_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.subtlvs_type.subtlv_list.lan_adjacency_sids_type.lan_adj_sid_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.undefined_subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.undefined_subtlvs_type.undefined_subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_is_reachability_type.neighbors_type.neighbor_list.undefined_subtlvs_type.undefined_subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.tag_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.tag_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type.prefix_sid_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type.prefix_sid_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type.undefined_subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.extended_ipv4_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type.undefined_subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.tag_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.tag_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type.prefix_sid_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.subtlvs_type.subtlv_list.prefix_sids_type.prefix_sid_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type.undefined_subtlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.tlvs_type.tlv_list.ipv6_reachability_type.prefixes_type.prefix_list.undefined_subtlvs_type.undefined_subtlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.undefined_tlvs_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.undefined_tlvs_type.undefined_tlv_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.link_state_database_type.lsp_list.undefined_tlvs_type.undefined_tlv_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.system_level_counters_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.levels_type.level_list.system_level_counters_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.circuit_counters_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.circuit_counters_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.lsp_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.lsp_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.iih_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.iih_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.ish_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.ish_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.esh_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.esh_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.psnp_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.psnp_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.csnp_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.csnp_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.unknown_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.packet_counters_type.unknown_type.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.adjacencies_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.adjacencies_type.adjacency_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.adjacencies_type.adjacency_list.state_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.afi_safi_type")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.afi_safi_type.af_list")
	proto.RegisterType((*NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType)(nil), "network_instances_isis.network_instance_list.protocols_type.protocol_type.isis_type.interfaces_type.interface_list.levels_type.level_list.afi_safi_type.af_list.state_type")
	proto.RegisterExtension(E_JnprNetworkInstancesIsisExt)
}

func init() { proto.RegisterFile("rpd_isis_oc.proto", fileDescriptor_69a37f0f83887bca) }

var fileDescriptor_69a37f0f83887bca = []byte{
	// 5457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x69, 0x90, 0x1c, 0xc5,
	0x95, 0x7f, 0x54, 0xcd, 0xd5, 0xf3, 0xe6, 0x54, 0xce, 0x68, 0xd4, 0x2a, 0x21, 0x24, 0x64, 0x0e,
	0xfd, 0x1d, 0xa1, 0x51, 0x84, 0x8e, 0x41, 0xe2, 0xb4, 0x0e, 0xf0, 0x7f, 0x1c, 0x42, 0x26, 0x7a,
	0x14, 0x8e, 0xd8, 0x23, 0xa2, 0xa8, 0xe9, 0xca, 0xe9, 0xa9, 0x51, 0x75, 0x75, 0x51, 0x59, 0x3d,
	0x1a, 0xf9, 0xc3, 0x7a, 0xb9, 0x0c, 0x5e, 0x23, 0x1b, 0x03, 0x42, 0x80, 0x38, 0x24, 0x0c, 0x5e,
	0x0c, 0xc8, 0xc6, 0x20, 0x2e, 0x07, 0xbb, 0x28, 0xcc, 0x62, 0x03, 0x36, 0x36, 0xde, 0xb0, 0xd7,
	0x2c, 0x38, 0x30, 0xab, 0x5d, 0x58, 0x07, 0x96, 0x96, 0xc5, 0xc0, 0x6e, 0xd8, 0x78, 0xd9, 0x8d,
	0xca, 0xa3, 0xba, 0x2a, 0xbb, 0x7a, 0x34, 0x92, 0x90, 0xe8, 0x9e, 0xee, 0x6f, 0x9d, 0xef, 0x65,
	0x75, 0xbd, 0xf7, 0xcb, 0xcc, 0x97, 0x99, 0xbf, 0x3c, 0x0a, 0xe6, 0x78, 0xae, 0xa9, 0x5b, 0xc4,
	0x22, 0x7a, 0x21, 0x3b, 0xe8, 0x7a, 0x05, 0xbf, 0xa0, 0xf5, 0xf9, 0xd8, 0xc6, 0x79, 0xec, 0x7b,
	0xdb, 0x75, 0xbf, 0xe0, 0x32, 0xe1, 0x92, 0x7f, 0x7c, 0x57, 0x85, 0x01, 0x07, 0xfb, 0xdb, 0x0a,
	0xde, 0x56, 0xdd, 0x72, 0x88, 0x6f, 0x38, 0x59, 0x4c, 0xe8, 0x93, 0xe8, 0xcf, 0xa0, 0x57, 0xd6,
	0xa4, 0x77, 0x29, 0x8b, 0x9b, 0x96, 0x76, 0xac, 0x58, 0x36, 0x98, 0xfc, 0x4c, 0x99, 0x58, 0xb7,
	0x2d, 0xe2, 0x67, 0x7a, 0xb8, 0x78, 0x98, 0x4b, 0xb5, 0xd7, 0xfe, 0x53, 0x85, 0xb9, 0x89, 0x79,
	0xd1, 0x7c, 0x68, 0x76, 0x8c, 0x3c, 0x4e, 0xaf, 0x5c, 0xac, 0x2c, 0x6d, 0x5f, 0xdf, 0x72, 0xe5,
	0x67, 0xd4, 0x94, 0x92, 0xa1, 0x22, 0xf4, 0x17, 0xd0, 0x4e, 0xad, 0xce, 0x16, 0x6c, 0x12, 0x58,
	0xa2, 0x2c, 0xed, 0x58, 0x71, 0xde, 0x51, 0x59, 0x32, 0x18, 0x3e, 0xaf, 0xfb, 0xdb, 0x5d, 0x9c,
	0x29, 0xfd, 0x9f, 0xf6, 0xfc, 0x3b, 0x2a, 0x74, 0xc7, 0xd5, 0x28, 0x07, 0x29, 0x21, 0x11, 0xef,
	0xfb, 0xdc, 0xf1, 0xbc, 0x2f, 0x4c, 0xb2, 0xb7, 0x87, 0x7f, 0xae, 0xfd, 0xf8, 0x3f, 0x54, 0xe8,
	0x8a, 0x29, 0x91, 0x05, 0xcd, 0xc1, 0xff, 0x8a, 0xf7, 0x6e, 0xf9, 0xf8, 0xde, 0x3b, 0x48, 0xeb,
	0x05, 0xb5, 0x80, 0xbe, 0x42, 0x7b, 0xe9, 0xb0, 0x0a, 0xed, 0xa1, 0x10, 0x6d, 0x87, 0x56, 0x1b,
	0x4f, 0xe2, 0x12, 0xc6, 0x97, 0x9d, 0x88, 0x77, 0x0f, 0xb2, 0x77, 0x30, 0x3b, 0xf8, 0x0b, 0xd1,
	0x35, 0x0a, 0x80, 0xe5, 0xf8, 0xd8, 0x1b, 0x33, 0xb2, 0x98, 0xa4, 0x6f, 0x65, 0xef, 0x37, 0x4f,
	0xc8, 0xfb, 0x4b, 0xef, 0x61, 0x36, 0x44, 0x5e, 0xac, 0xed, 0xdb, 0xa7, 0x42, 0x47, 0xc4, 0x40,
	0x74, 0xa5, 0x02, 0x2d, 0x34, 0x2d, 0x5a, 0xc0, 0xd6, 0x13, 0x8d, 0x09, 0xfb, 0xcd, 0xda, 0x0f,
	0x7b, 0xb5, 0xb6, 0xeb, 0x21, 0x15, 0xa0, 0x24, 0x46, 0x4b, 0xa1, 0x93, 0xa5, 0x9c, 0x62, 0x7e,
	0x14, 0x7b, 0xb4, 0xc9, 0x74, 0x89, 0x26, 0xc3, 0xcc, 0xdf, 0x4c, 0x35, 0xe8, 0x71, 0x05, 0xfa,
	0x6c, 0xcb, 0xd9, 0xaa, 0x13, 0xdf, 0xf0, 0xb1, 0x6e, 0x1a, 0xbe, 0x31, 0x6a, 0x10, 0x2c, 0x0a,
	0xf8, 0x6a, 0xe5, 0x24, 0x7a, 0x33, 0x98, 0x60, 0x08, 0x2b, 0x81, 0x39, 0x81, 0x66, 0x24, 0x50,
	0x6c, 0xe4, 0x72, 0xb4, 0x43, 0x81, 0x16, 0x9a, 0x55, 0xd4, 0x85, 0xc9, 0x93, 0x69, 0x29, 0x33,
	0x92, 0xda, 0xc6, 0xac, 0x40, 0x4f, 0x2b, 0x30, 0x97, 0x6c, 0x27, 0x3e, 0xce, 0xeb, 0x2c, 0x5f,
	0xb6, 0x50, 0x0c, 0xaa, 0x0d, 0x49, 0xdf, 0xc6, 0xec, 0xfb, 0xf2, 0x49, 0x85, 0x32, 0xd1, 0x14,
	0x66, 0x70, 0x1f, 0xd3, 0x6d, 0x0a, 0x54, 0x1b, 0xb8, 0x46, 0x7b, 0x68, 0xaf, 0x0a, 0xe9, 0x4a,
	0xf8, 0xa3, 0xbd, 0x0a, 0x34, 0xd9, 0xc4, 0x15, 0x55, 0x7c, 0x47, 0x55, 0xd4, 0x8a, 0x41, 0x9b,
	0xb8, 0xac, 0x15, 0x04, 0xb6, 0x69, 0x6f, 0xdf, 0xad, 0x42, 0x4a, 0x88, 0xd0, 0x29, 0xd0, 0x1a,
	0xfc, 0xb6, 0xcc, 0x78, 0x77, 0xd1, 0x62, 0x13, 0x77, 0xd8, 0x44, 0x0f, 0x87, 0x95, 0x87, 0xd7,
	0xf3, 0x5b, 0xab, 0xcb, 0xa3, 0x84, 0xfa, 0xb5, 0x4f, 0x81, 0x66, 0xdf, 0x9e, 0x0c, 0x43, 0xdf,
	0xae, 0x2a, 0xb3, 0x38, 0xb0, 0x8d, 0x77, 0x1d, 0xc1, 0x4f, 0xf4, 0xa2, 0x02, 0xdd, 0x45, 0xc7,
	0xc4, 0x63, 0x96, 0x83, 0x4d, 0x9d, 0x5a, 0xce, 0x1b, 0xc2, 0xde, 0x2a, 0xb3, 0x3c, 0x6e, 0x25,
	0xf3, 0xa1, 0x2b, 0x14, 0x6e, 0xb1, 0x27, 0x89, 0xf6, 0x68, 0x13, 0x40, 0xa9, 0x48, 0xd0, 0xdc,
	0x78, 0xe5, 0x12, 0xb5, 0x6a, 0x15, 0x0c, 0xe4, 0x8d, 0x29, 0x2b, 0x5f, 0xcc, 0xeb, 0x86, 0x87,
	0x0d, 0xdd, 0x30, 0x4d, 0x0f, 0x13, 0x82, 0x49, 0x7a, 0x55, 0x10, 0x7f, 0x33, 0xfd, 0x5c, 0xbb,
	0xce, 0xc3, 0xc6, 0x3a, 0xa1, 0x43, 0x69, 0x68, 0x9b, 0xc4, 0x1e, 0xb1, 0x0a, 0x4e, 0x7a, 0x35,
	0xcd, 0x26, 0x92, 0x48, 0x83, 0x14, 0xff, 0xb9, 0x22, 0x3d, 0x44, 0x55, 0x61, 0x1a, 0x2d, 0x80,
	0x76, 0xcb, 0xd4, 0x6d, 0xec, 0xe4, 0xfc, 0xf1, 0xf4, 0xd9, 0x4c, 0x69, 0x99, 0x9b, 0x68, 0x1a,
	0xcd, 0x87, 0x94, 0x6b, 0x16, 0xa9, 0xad, 0xe9, 0x35, 0xd4, 0xc2, 0x36, 0xd7, 0x2c, 0x6e, 0x09,
	0x4c, 0x5f, 0x06, 0xc8, 0xc3, 0x79, 0xc3, 0x72, 0x2c, 0x27, 0xa7, 0xdb, 0xd6, 0x18, 0xf6, 0xad,
	0x3c, 0x4e, 0xaf, 0xa5, 0x7f, 0x30, 0x27, 0xd4, 0x6c, 0xe2, 0x0a, 0x74, 0x16, 0xf4, 0x10, 0x7c,
	0x79, 0x11, 0x07, 0x85, 0xc1, 0xfb, 0x92, 0x73, 0x68, 0xde, 0x6e, 0x21, 0xe6, 0xfd, 0x88, 0x06,
	0xa9, 0xec, 0x38, 0xce, 0x6e, 0x25, 0xc5, 0x7c, 0xfa, 0x5c, 0x66, 0x8e, 0x48, 0xa3, 0x85, 0x00,
	0x81, 0x39, 0xdc, 0xd8, 0xf3, 0xa8, 0xb6, 0xdd, 0x35, 0x8b, 0xdc, 0xda, 0x7e, 0x68, 0x19, 0xb3,
	0x8d, 0x1c, 0x49, 0x5f, 0xb0, 0xb8, 0x29, 0x00, 0x93, 0x26, 0xd0, 0x3c, 0x68, 0xe3, 0x25, 0x9b,
	0xbe, 0x90, 0x3e, 0xd1, 0x6a, 0x11, 0xea, 0xc1, 0x52, 0xe8, 0xa5, 0xe0, 0x07, 0x75, 0xc4, 0xb6,
	0x75, 0x6a, 0xff, 0xf9, 0x8b, 0x95, 0xa5, 0xcd, 0x99, 0xee, 0xa0, 0x18, 0x98, 0x78, 0x8b, 0x95,
	0xc7, 0xda, 0x97, 0x6f, 0x52, 0xa1, 0x3d, 0x2c, 0x53, 0xb4, 0x5f, 0x81, 0x26, 0xdf, 0x9e, 0x14,
	0x41, 0x6c, 0x4f, 0xb5, 0x36, 0xa0, 0xe0, 0x17, 0x8f, 0x6b, 0xbe, 0x3d, 0xa9, 0x1d, 0xf8, 0x86,
	0x0a, 0x29, 0x21, 0x0a, 0x06, 0xc1, 0x14, 0x93, 0xf8, 0x20, 0x98, 0xfa, 0xf7, 0xac, 0x1c, 0xd4,
	0x1e, 0xac, 0x7a, 0x0f, 0x13, 0xe2, 0xdc, 0xaf, 0x14, 0xe8, 0x8c, 0xb6, 0x1e, 0x11, 0xef, 0x1e,
	0xa9, 0x7e, 0x67, 0xa2, 0x66, 0x33, 0x9f, 0x3a, 0x8c, 0x52, 0x53, 0x47, 0xbf, 0x51, 0xa0, 0x27,
	0x78, 0x7c, 0xb4, 0x38, 0x36, 0x86, 0x3d, 0x9d, 0x58, 0x5f, 0xc4, 0xe9, 0xbb, 0x98, 0x73, 0x8f,
	0x55, 0xbf, 0x73, 0x92, 0xe5, 0x3c, 0x4c, 0xda, 0xc4, 0x5d, 0x4f, 0x85, 0x23, 0xd6, 0x17, 0x59,
	0x0d, 0x74, 0x6c, 0xd7, 0x32, 0x45, 0xa8, 0xaf, 0x81, 0x1a, 0x48, 0xed, 0xe5, 0x35, 0x90, 0xfe,
	0x46, 0x3f, 0x51, 0x20, 0x35, 0x5e, 0x20, 0x3e, 0x9d, 0x6c, 0xde, 0xce, 0x1c, 0xf9, 0x4e, 0xf5,
	0x3b, 0x22, 0x4c, 0xe6, 0x33, 0x48, 0x91, 0x44, 0x7f, 0x54, 0x20, 0x6d, 0xb9, 0x93, 0xab, 0xf4,
	0x70, 0x16, 0x13, 0xe9, 0x98, 0xee, 0x60, 0xee, 0xfd, 0x7d, 0xf5, 0xbb, 0x57, 0xc9, 0x05, 0xe6,
	0xee, 0x40, 0xa0, 0x1e, 0x16, 0xda, 0x52, 0xe7, 0xca, 0x9d, 0x1f, 0x4a, 0x74, 0xfe, 0xce, 0x5a,
	0x72, 0x7e, 0x68, 0x7a, 0xe7, 0x87, 0x12, 0x9c, 0xff, 0x37, 0x05, 0xe6, 0x50, 0xd8, 0x7c, 0xac,
	0x7b, 0x85, 0xa2, 0x8f, 0xbd, 0x60, 0xc8, 0xb2, 0x9b, 0x79, 0xfd, 0x44, 0x8d, 0x14, 0x79, 0xd4,
	0x76, 0xe6, 0x6e, 0x77, 0x20, 0xdf, 0x82, 0x33, 0x54, 0x3a, 0x6c, 0xa2, 0x9f, 0x2b, 0x00, 0x34,
	0x2b, 0xf1, 0xec, 0x1c, 0x49, 0x7f, 0x93, 0xf9, 0xf7, 0x70, 0x8d, 0xf8, 0x47, 0x8d, 0xe6, 0x9c,
	0x53, 0x20, 0x18, 0x09, 0xd2, 0xe8, 0x90, 0x02, 0x7d, 0xdc, 0xed, 0xac, 0xe1, 0x1a, 0xa3, 0x96,
	0x6d, 0xf9, 0x16, 0x26, 0xe9, 0x7b, 0x98, 0x73, 0x4f, 0x55, 0xbf, 0x73, 0x09, 0xd6, 0x33, 0x2f,
	0x11, 0xd3, 0x6c, 0x88, 0x28, 0x68, 0x33, 0xc5, 0x53, 0x3e, 0x76, 0x4c, 0x6c, 0xea, 0x16, 0xd1,
	0x3d, 0x6c, 0x64, 0xc7, 0x99, 0x7a, 0x7b, 0x7a, 0x6f, 0xcd, 0x34, 0xd3, 0x4a, 0x2e, 0xf0, 0x66,
	0x2a, 0xd4, 0xc3, 0x24, 0x13, 0x51, 0xa2, 0xbf, 0x56, 0x41, 0x2b, 0x3d, 0x19, 0xd4, 0x89, 0x98,
	0xfb, 0x77, 0x33, 0xf7, 0x0f, 0xd4, 0x92, 0xfb, 0xb2, 0x13, 0x0c, 0x80, 0xb0, 0x88, 0x87, 0xdd,
	0xc9, 0x55, 0x31, 0x08, 0xde, 0x62, 0x91, 0x6a, 0x28, 0xee, 0xf9, 0x9e, 0x5a, 0x8a, 0x54, 0x43,
	0x09, 0x0e, 0xf7, 0x06, 0xf2, 0xa8, 0xa3, 0xda, 0xe2, 0xd8, 0x3c, 0x12, 0x45, 0x07, 0xf3, 0x6c,
	0x14, 0xaf, 0xdd, 0xa4, 0xc2, 0x9c, 0xb2, 0x81, 0x24, 0xfa, 0xa5, 0x3c, 0xb6, 0xff, 0xbb, 0x1a,
	0x1c, 0x0e, 0x97, 0x8f, 0xf6, 0xb5, 0x33, 0x63, 0x78, 0xa4, 0xa1, 0x4d, 0x8c, 0xfa, 0x57, 0xd2,
	0xb9, 0xa0, 0x48, 0x06, 0xa8, 0xf4, 0x27, 0x8d, 0x40, 0xd1, 0x2b, 0x32, 0x30, 0x07, 0x6a, 0x73,
	0x28, 0x9d, 0x80, 0x4d, 0x59, 0x5d, 0xa1, 0x33, 0x06, 0x4a, 0xe5, 0x66, 0xe8, 0x6f, 0xed, 0x0a,
	0x15, 0xa0, 0x34, 0x7e, 0x45, 0x3f, 0x95, 0xb1, 0x78, 0xbc, 0x96, 0x86, 0xdf, 0x09, 0x08, 0x2c,
	0x89, 0x21, 0xd0, 0x2f, 0x26, 0x17, 0xac, 0x6e, 0xb0, 0x84, 0x76, 0xad, 0x0a, 0x5d, 0xb1, 0xa1,
	0x6f, 0x30, 0x1e, 0x88, 0xc3, 0xf0, 0x54, 0x8d, 0x0d, 0xde, 0x67, 0x82, 0xc4, 0x78, 0x69, 0x29,
	0x2c, 0xc3, 0x12, 0xda, 0x83, 0x2a, 0x2c, 0x9c, 0x76, 0x94, 0x8c, 0xfe, 0x45, 0x46, 0xe6, 0x85,
	0x1a, 0x1f, 0xf7, 0x1f, 0x47, 0x44, 0xe1, 0x68, 0x0d, 0xcd, 0x3a, 0xb4, 0x86, 0x4e, 0x04, 0x5a,
	0xf7, 0xa9, 0x30, 0x90, 0x3c, 0x1c, 0x47, 0xaf, 0xca, 0x30, 0xfd, 0xa0, 0x56, 0x67, 0x16, 0x09,
	0xf8, 0x0c, 0xc6, 0xf0, 0x59, 0x0c, 0x9d, 0xb1, 0xa9, 0x14, 0x6b, 0x7e, 0xe0, 0x87, 0x73, 0x11,
	0x6d, 0x5f, 0x2b, 0xf4, 0x48, 0xc3, 0x7a, 0xf4, 0xba, 0x02, 0xed, 0xa1, 0x4c, 0xb0, 0x8f, 0xcf,
	0xd4, 0xdc, 0xf4, 0xa4, 0x94, 0x66, 0xe4, 0x64, 0x4a, 0xcc, 0x56, 0xb4, 0x27, 0x9b, 0xa1, 0x3b,
	0xae, 0x44, 0x83, 0xd0, 0x13, 0xda, 0x9f, 0xb4, 0x06, 0xd9, 0x2d, 0xb4, 0x9c, 0x3e, 0x3e, 0x28,
	0x57, 0xa2, 0x17, 0x6b, 0x1d, 0x9f, 0x84, 0xca, 0x74, 0x83, 0x1a, 0xab, 0x4d, 0x67, 0x55, 0xc0,
	0xa8, 0x0c, 0x9c, 0x05, 0xd0, 0xce, 0x97, 0xf3, 0x2c, 0x93, 0x2e, 0x25, 0xb4, 0x67, 0x52, 0x4c,
	0x30, 0x6c, 0x52, 0x72, 0x9d, 0x38, 0xe2, 0x0f, 0x56, 0x73, 0x72, 0x9d, 0x38, 0xfc, 0xd9, 0x90,
	0x5c, 0x5f, 0x1b, 0x25, 0xd7, 0x57, 0xf1, 0xd6, 0x5c, 0x16, 0x29, 0xe8, 0x3a, 0x43, 0x7b, 0xa6,
	0x3f, 0x89, 0x4e, 0x41, 0x2b, 0x60, 0x2e, 0x7d, 0xca, 0xc1, 0x56, 0x6e, 0x7c, 0xb4, 0xe0, 0x85,
	0x0f, 0x9d, 0x4d, 0x1f, 0xea, 0x0b, 0x94, 0x9b, 0xb9, 0x4e, 0x3c, 0xb3, 0x10, 0x80, 0x42, 0x32,
	0x69, 0xd8, 0x45, 0x9c, 0x5e, 0xb3, 0xb8, 0x29, 0x30, 0x2f, 0x90, 0x7c, 0x21, 0x10, 0x68, 0x6f,
	0x9e, 0x05, 0xe9, 0x4a, 0x33, 0x45, 0xf4, 0x3b, 0x05, 0x20, 0x94, 0x6e, 0x17, 0x2d, 0xe7, 0x85,
	0xda, 0x9d, 0xfb, 0x0e, 0x96, 0xbc, 0x61, 0x6d, 0x28, 0xe2, 0x9e, 0xf6, 0xea, 0x19, 0xd0, 0x23,
	0xe9, 0x8f, 0xba, 0x19, 0x1d, 0x92, 0x9b, 0xd1, 0x2f, 0x66, 0x0f, 0x58, 0x09, 0x6b, 0x05, 0xbf,
	0x57, 0xa0, 0x8d, 0x14, 0x47, 0xa3, 0xcb, 0xa2, 0xff, 0x34, 0x9b, 0x1c, 0x66, 0xae, 0x31, 0x97,
	0x85, 0xa3, 0xe8, 0xeb, 0x2a, 0xcc, 0x29, 0x2d, 0x59, 0x0a, 0xf7, 0x39, 0xe1, 0xfe, 0xc6, 0x2c,
	0x72, 0xbf, 0xcc, 0x49, 0x3e, 0xa9, 0x0e, 0xe5, 0x23, 0x4c, 0xac, 0x8d, 0x1f, 0x73, 0x58, 0x2d,
	0x75, 0xe5, 0x3c, 0xac, 0x7a, 0x82, 0x54, 0x0c, 0xe3, 0xe6, 0xea, 0x48, 0xdc, 0xd4, 0x7e, 0x91,
	0x86, 0xce, 0xa8, 0x31, 0xe8, 0x4f, 0x0a, 0xb4, 0x32, 0x81, 0x08, 0x4f, 0x07, 0x67, 0x69, 0x05,
	0xe4, 0x09, 0x16, 0xb7, 0xb8, 0xcf, 0xda, 0x3f, 0x0c, 0x40, 0x47, 0x44, 0x3e, 0xdd, 0xea, 0xe4,
	0x35, 0xaa, 0x14, 0x9a, 0x0e, 0xd7, 0x01, 0x50, 0x09, 0x31, 0xeb, 0x07, 0x2a, 0x68, 0x04, 0xe7,
	0xf2, 0xd8, 0xf1, 0xe9, 0x48, 0xd2, 0x72, 0x72, 0xba, 0x61, 0xe7, 0x0a, 0x9e, 0xe5, 0x8f, 0xe7,
	0xc3, 0x30, 0x76, 0xa5, 0x5a, 0x0f, 0xe0, 0x54, 0x84, 0x81, 0xf3, 0x85, 0x3c, 0x43, 0x86, 0xe9,
	0xd7, 0x85, 0xea, 0x44, 0x10, 0x23, 0x23, 0x85, 0xdb, 0xea, 0x18, 0xc4, 0xc8, 0x83, 0x49, 0x20,
	0x6e, 0x28, 0x0d, 0x38, 0x8e, 0xcc, 0x45, 0x7e, 0xa0, 0xc2, 0xa2, 0x23, 0x14, 0x12, 0xba, 0x4f,
	0x6e, 0xd7, 0x3b, 0x1a, 0x55, 0x37, 0x69, 0x26, 0xf9, 0xe9, 0x18, 0xda, 0xa7, 0x40, 0x7b, 0xf8,
	0x08, 0x9f, 0x6b, 0x97, 0x04, 0xda, 0xe1, 0x8e, 0x72, 0xdc, 0xa5, 0x72, 0x6d, 0xe0, 0x9e, 0x84,
	0x4a, 0x42, 0xbc, 0x7d, 0x4e, 0x85, 0x5e, 0xe2, 0xe5, 0x46, 0x75, 0x13, 0x93, 0xac, 0x67, 0xb9,
	0x7e, 0xc1, 0x0b, 0xa3, 0xec, 0xad, 0x0d, 0xc8, 0xf0, 0xa0, 0x0c, 0x0e, 0x43, 0xaf, 0x27, 0x10,
	0x6f, 0x2c, 0x49, 0xcb, 0x19, 0x48, 0x36, 0x3c, 0x5a, 0x19, 0x1d, 0x1e, 0x3d, 0xd6, 0x0a, 0x73,
	0x13, 0xff, 0x0e, 0xbd, 0xa2, 0x42, 0x8f, 0xa4, 0x11, 0x03, 0xa6, 0x7d, 0x8d, 0x42, 0xa8, 0x50,
	0x08, 0xb2, 0x94, 0x8d, 0xbd, 0xba, 0xe3, 0x25, 0xa3, 0x1d, 0x68, 0x82, 0xfe, 0xa4, 0x8c, 0x68,
	0x01, 0xb4, 0x78, 0x86, 0x93, 0xc3, 0xf1, 0x29, 0x23, 0x93, 0xa1, 0x97, 0xe5, 0xf0, 0xf1, 0x64,
	0xa3, 0x18, 0x8e, 0xa6, 0x18, 0x12, 0x22, 0xfc, 0x1a, 0xb9, 0x85, 0x44, 0xd0, 0x17, 0xb0, 0xf7,
	0x43, 0x8b, 0x6d, 0x8c, 0x62, 0x9b, 0xcf, 0x37, 0x58, 0x42, 0xfb, 0x4d, 0x0b, 0x0c, 0x24, 0xcf,
	0x76, 0xd0, 0x37, 0x55, 0xe8, 0x95, 0x55, 0xa2, 0xe5, 0xfc, 0xd7, 0xac, 0x9f, 0xec, 0x95, 0x89,
	0xf9, 0xa9, 0x21, 0x69, 0x0a, 0xa8, 0xdd, 0xd5, 0x04, 0x73, 0x13, 0xb3, 0xc6, 0x66, 0x24, 0x5d,
	0xf1, 0x19, 0xc9, 0x6d, 0x72, 0x13, 0xb8, 0x42, 0xad, 0x4f, 0x3c, 0x13, 0xea, 0xf2, 0xe6, 0x8a,
	0x63, 0xc3, 0x2e, 0x8e, 0xde, 0x00, 0xb4, 0xf2, 0x0d, 0xbd, 0x6c, 0x73, 0x33, 0x4f, 0x05, 0x35,
	0x9c, 0x71, 0x7d, 0xab, 0x59, 0x0d, 0xa7, 0x09, 0xed, 0x15, 0x1f, 0x16, 0x4e, 0xbb, 0x3b, 0x02,
	0x1d, 0x56, 0xa0, 0x5d, 0x10, 0x8b, 0xe1, 0xf9, 0xa2, 0x97, 0x6a, 0x7c, 0xcf, 0xc7, 0x60, 0xe8,
	0x11, 0xdf, 0xe1, 0x13, 0xa6, 0xb5, 0x1f, 0x7a, 0xd0, 0x1d, 0xd7, 0xa2, 0x3f, 0x28, 0x90, 0x12,
	0x22, 0xd1, 0xc6, 0x5f, 0x9b, 0x5d, 0x08, 0x84, 0x49, 0xbe, 0x86, 0x20, 0x92, 0xda, 0x13, 0x2e,
	0x74, 0xc5, 0x74, 0x68, 0x49, 0x94, 0xf5, 0x8e, 0x11, 0x0a, 0x25, 0xf2, 0xfb, 0x23, 0x99, 0xef,
	0x7c, 0x6b, 0x36, 0xc3, 0x95, 0x30, 0xba, 0xbd, 0x5a, 0x2d, 0x63, 0x40, 0x7f, 0x3b, 0xbb, 0x21,
	0x48, 0xe4, 0x44, 0xf7, 0x4e, 0xc7, 0x89, 0xfe, 0x7e, 0x56, 0x03, 0x32, 0x63, 0x96, 0x74, 0x5d,
	0x2c, 0xa4, 0x2f, 0x28, 0x6b, 0x5d, 0x91, 0x66, 0x35, 0x00, 0xad, 0x79, 0xec, 0x7b, 0x56, 0x56,
	0xc4, 0x76, 0x96, 0xd2, 0xae, 0xcf, 0x4a, 0xf4, 0xe7, 0xd7, 0x54, 0x99, 0xfe, 0x7c, 0xbf, 0x6e,
	0x6a, 0x5f, 0x22, 0x21, 0xfa, 0xf6, 0x65, 0x33, 0x26, 0x44, 0x77, 0xc9, 0xc3, 0x8f, 0xff, 0xad,
	0x4b, 0xe8, 0x12, 0x82, 0xda, 0xfd, 0x2a, 0x74, 0x18, 0x66, 0xde, 0x72, 0xf4, 0x9c, 0x57, 0x28,
	0xba, 0x62, 0x1f, 0xe0, 0x35, 0x6a, 0x5d, 0xe2, 0x13, 0x41, 0x82, 0x1f, 0x47, 0xa6, 0x92, 0xcf,
	0x06, 0x02, 0x74, 0x87, 0x0a, 0x6d, 0xd4, 0x52, 0xcb, 0x14, 0x47, 0x15, 0xae, 0xa8, 0x4f, 0x98,
	0x38, 0x0a, 0xe2, 0xd4, 0xb8, 0xe5, 0x6c, 0x1d, 0x36, 0xd1, 0xf3, 0x6a, 0xc5, 0x85, 0x6e, 0xde,
	0x5b, 0xde, 0x50, 0x9f, 0x68, 0x25, 0x83, 0xc2, 0xc0, 0x4b, 0x5e, 0xfc, 0x7f, 0x4e, 0xad, 0xb4,
	0xfa, 0xcf, 0xbb, 0xd9, 0xaf, 0xd7, 0x31, 0x92, 0x32, 0x26, 0xfc, 0xa0, 0x75, 0xd2, 0x86, 0x88,
	0xa7, 0x55, 0x40, 0x79, 0x63, 0x4a, 0xa7, 0x0e, 0x8c, 0x1a, 0x8e, 0xb9, 0xcd, 0x32, 0xfd, 0x71,
	0x71, 0x2a, 0xe3, 0xfa, 0xfa, 0x04, 0xb1, 0x1c, 0x10, 0x3e, 0x8a, 0xc9, 0x1b, 0x53, 0x9b, 0x2c,
	0x67, 0xeb, 0x7a, 0x21, 0x46, 0xbf, 0x56, 0x61, 0x61, 0x90, 0xdb, 0xc3, 0x04, 0x7b, 0x93, 0xc6,
	0xa8, 0x8d, 0x65, 0x24, 0xf9, 0x91, 0xa6, 0x5d, 0xf5, 0x8b, 0x64, 0x45, 0x6c, 0x18, 0xa8, 0x5a,
	0xde, 0x98, 0xca, 0x84, 0x59, 0xe2, 0xf0, 0x3e, 0xab, 0x42, 0x7f, 0xd1, 0x61, 0x7f, 0x80, 0xcd,
	0x08, 0xaa, 0xfc, 0xac, 0xd4, 0xd7, 0xea, 0x13, 0xd5, 0x24, 0x48, 0x78, 0x1b, 0x2f, 0xa9, 0x4a,
	0x28, 0xf2, 0x6e, 0x27, 0x61, 0x27, 0xa6, 0x38, 0x9d, 0x54, 0xbf, 0xdd, 0xce, 0xd0, 0x74, 0xdd,
	0xce, 0x50, 0xa5, 0x6e, 0x67, 0xa8, 0xbc, 0xdb, 0xb9, 0xb7, 0xde, 0xbb, 0x9d, 0xa1, 0x69, 0xba,
	0x9d, 0x21, 0xb9, 0xdb, 0x79, 0x4a, 0x85, 0x39, 0x81, 0xd1, 0x78, 0xcc, 0x28, 0xda, 0xbe, 0xce,
	0xa7, 0x77, 0xfc, 0xf8, 0xf1, 0x57, 0xeb, 0x13, 0xc3, 0x32, 0x3c, 0xf8, 0xd2, 0x97, 0x8f, 0x37,
	0x32, 0xf1, 0x25, 0x54, 0x8a, 0x7e, 0xa8, 0xc2, 0xdc, 0x52, 0xb3, 0xcf, 0x16, 0x1c, 0xe2, 0x7b,
	0x86, 0xe5, 0xf8, 0x44, 0x9c, 0xcd, 0xaa, 0xd3, 0x3a, 0x98, 0x88, 0x09, 0x6f, 0xcc, 0xa1, 0x6e,
	0x43, 0x49, 0x85, 0xbe, 0xa7, 0x42, 0xb7, 0x61, 0x4e, 0x18, 0x59, 0xec, 0x64, 0xb7, 0xeb, 0xc4,
	0x32, 0x89, 0x38, 0xdc, 0x77, 0x5d, 0xbd, 0xce, 0xed, 0xa2, 0x60, 0xf0, 0x33, 0xf5, 0xa1, 0x70,
	0xc4, 0x32, 0xd9, 0x78, 0xd1, 0x36, 0x1c, 0x5d, 0xc2, 0xed, 0x9e, 0xba, 0x1e, 0x2f, 0x96, 0x03,
	0xc2, 0xc7, 0x8b, 0xb6, 0xe1, 0xac, 0x8b, 0xc2, 0x37, 0x83, 0x4d, 0x2e, 0x87, 0x54, 0xe8, 0x95,
	0xe7, 0xd8, 0xe8, 0x7e, 0x99, 0x9c, 0xb9, 0xa1, 0x41, 0x3e, 0x54, 0xd8, 0xd8, 0xb2, 0x2c, 0x86,
	0xf0, 0xa2, 0x38, 0x75, 0xb3, 0x92, 0x6e, 0xf8, 0x8e, 0x30, 0x16, 0xda, 0xbb, 0x2a, 0x74, 0x46,
	0xe7, 0xea, 0xe8, 0x5e, 0x19, 0xea, 0xeb, 0x1b, 0x04, 0x46, 0x02, 0xcc, 0xe7, 0xc8, 0xab, 0xcb,
	0x76, 0x21, 0x6b, 0xd8, 0x62, 0x75, 0x99, 0x26, 0xd0, 0x00, 0xb4, 0x7a, 0x38, 0x5f, 0xf0, 0xb1,
	0xe0, 0x6d, 0x59, 0x4a, 0xfb, 0x50, 0x85, 0x05, 0xd3, 0xcc, 0xf8, 0xd1, 0xa3, 0x72, 0x11, 0xec,
	0x6e, 0xb0, 0x22, 0x12, 0x46, 0xc7, 0x71, 0x76, 0xea, 0x0f, 0x2a, 0x68, 0x95, 0x59, 0x02, 0xf4,
	0x88, 0x0c, 0xfe, 0xed, 0x0d, 0x22, 0xc5, 0xfb, 0xb8, 0xb0, 0xff, 0x6f, 0x15, 0xe6, 0x55, 0x20,
	0x17, 0xd0, 0x77, 0x65, 0xe0, 0x77, 0x35, 0xc8, 0x97, 0x08, 0x3e, 0x33, 0xd9, 0xc3, 0x58, 0xe2,
	0x07, 0x58, 0x8f, 0x5a, 0x12, 0x68, 0x3b, 0x9a, 0x60, 0xc9, 0x91, 0xc9, 0x08, 0xf4, 0x7d, 0xb9,
	0x10, 0xee, 0x69, 0xf0, 0x36, 0xc9, 0x50, 0x1d, 0x67, 0x79, 0xec, 0x6f, 0x85, 0xf9, 0x15, 0x69,
	0x0c, 0xf4, 0x63, 0x15, 0xba, 0x09, 0xf6, 0x8b, 0xae, 0xee, 0x7a, 0x56, 0xc1, 0x8b, 0x1c, 0xb7,
	0xba, 0xa7, 0xc1, 0xf8, 0x48, 0xc5, 0x10, 0x83, 0x89, 0x2d, 0xff, 0x75, 0x51, 0xe1, 0xa5, 0x5c,
	0xa6, 0x3d, 0xdf, 0x04, 0x7d, 0x09, 0xd9, 0xd0, 0x69, 0x90, 0x0a, 0xe1, 0x8d, 0x6d, 0x48, 0x0a,
	0xc5, 0xe8, 0x39, 0xb9, 0x3d, 0xec, 0x6b, 0xe0, 0x7f, 0x44, 0xfc, 0x13, 0x9a, 0xc6, 0xc5, 0xb1,
	0xa6, 0xa1, 0xc9, 0xc0, 0x47, 0x10, 0x8f, 0x35, 0x9b, 0x55, 0x72, 0xb3, 0xe1, 0x43, 0xa7, 0xa1,
	0xc6, 0xd0, 0xe9, 0x98, 0x99, 0xbd, 0xe3, 0x1f, 0x3a, 0x0d, 0x35, 0x86, 0x4e, 0xc7, 0x48, 0x06,
	0x1e, 0x07, 0xf6, 0xef, 0xa8, 0x30, 0x90, 0xcc, 0x90, 0xa1, 0xef, 0xc8, 0xb8, 0xdf, 0xd2, 0x20,
	0x10, 0x4b, 0xf0, 0x24, 0x60, 0x7e, 0x7a, 0x0c, 0xf3, 0xd2, 0xf6, 0x9a, 0x95, 0xb1, 0xed, 0x35,
	0xbb, 0x7b, 0x41, 0xab, 0xcc, 0xa9, 0xa1, 0xd7, 0x55, 0xe8, 0x4f, 0x52, 0x8b, 0x9e, 0xfa, 0xdb,
	0x0d, 0x16, 0x32, 0x8e, 0x58, 0xa2, 0x8a, 0x75, 0xd8, 0x7d, 0x09, 0xfc, 0xa4, 0xb6, 0xbb, 0x0b,
	0xe6, 0x57, 0x7c, 0x04, 0x2d, 0x86, 0x54, 0xbe, 0x60, 0x62, 0x5b, 0x6c, 0x98, 0x0a, 0x3b, 0xef,
	0x36, 0x2a, 0x1e, 0x36, 0xd1, 0x4f, 0xe4, 0x66, 0xb1, 0xbf, 0x51, 0x22, 0x33, 0x2d, 0x91, 0x84,
	0x6d, 0x40, 0xaf, 0xab, 0xd0, 0x11, 0x25, 0xdb, 0xf9, 0x8e, 0x8d, 0xef, 0x37, 0x40, 0x9d, 0x31,
	0xa8, 0x65, 0xbc, 0x7c, 0x14, 0x50, 0xed, 0xac, 0x58, 0x54, 0x9a, 0x2f, 0xd7, 0xef, 0xb0, 0x62,
	0x6b, 0x57, 0xb6, 0x41, 0x6f, 0x59, 0x38, 0x3a, 0xa4, 0x02, 0x94, 0x07, 0xa1, 0x17, 0x1b, 0xa5,
	0x73, 0xcc, 0xa5, 0x33, 0x28, 0x47, 0xa9, 0x08, 0xbe, 0xda, 0x47, 0x4d, 0xd0, 0x23, 0x87, 0xa4,
	0x4f, 0x43, 0x57, 0x44, 0x24, 0xc7, 0xa5, 0xce, 0x92, 0x6e, 0xd8, 0x44, 0x87, 0xe5, 0xe0, 0xf4,
	0xcb, 0x46, 0x49, 0x7d, 0x6c, 0x25, 0x95, 0xd0, 0xe5, 0x7f, 0x3e, 0xd6, 0xb8, 0x3e, 0x95, 0x58,
	0x52, 0x52, 0x11, 0x4d, 0x3f, 0x13, 0x79, 0xab, 0x05, 0xfa, 0x12, 0xd6, 0x3c, 0xd0, 0xc3, 0x6a,
	0x30, 0x84, 0x9b, 0x08, 0x24, 0xa2, 0x68, 0x77, 0x36, 0x56, 0xd3, 0x38, 0x3a, 0x83, 0x1c, 0x19,
	0xbe, 0x2d, 0xd0, 0x30, 0x27, 0x46, 0x2c, 0x53, 0xdb, 0xdd, 0x04, 0x9d, 0x51, 0x05, 0x7a, 0x52,
	0x6e, 0x1c, 0x7b, 0x1a, 0x08, 0x26, 0x21, 0x98, 0x50, 0xcf, 0x2f, 0x95, 0xd7, 0x25, 0xd8, 0xe9,
	0x1f, 0xbe, 0x2e, 0x41, 0x13, 0xa5, 0xd3, 0xa2, 0xab, 0xa2, 0x97, 0x10, 0x0d, 0x40, 0xeb, 0xb6,
	0xc0, 0x2c, 0x9f, 0xdf, 0x5a, 0xc4, 0x53, 0xda, 0xb7, 0x5a, 0x61, 0x5e, 0x85, 0x05, 0x3e, 0xf4,
	0x8c, 0x0a, 0x1d, 0x5c, 0x17, 0xad, 0xf0, 0x77, 0x36, 0x96, 0x41, 0xa3, 0x45, 0x16, 0x41, 0x88,
	0x9f, 0x3b, 0x62, 0xeb, 0xa2, 0x41, 0xdd, 0x7f, 0xbe, 0x09, 0x7a, 0x65, 0x3d, 0x3a, 0x20, 0xd7,
	0xff, 0xfb, 0x1b, 0x80, 0x4e, 0x07, 0x68, 0x42, 0x3b, 0xb8, 0xfc, 0xe3, 0x6e, 0x07, 0x68, 0x11,
	0x74, 0x84, 0x66, 0x5b, 0x26, 0xbf, 0x99, 0x0b, 0x84, 0x68, 0xd8, 0xd4, 0xae, 0x6a, 0xad, 0x78,
	0x6c, 0xf4, 0xb1, 0x69, 0x8e, 0x8d, 0xce, 0xee, 0xbd, 0x16, 0xc7, 0x77, 0x90, 0xf4, 0xe1, 0x63,
	0x39, 0x48, 0xfa, 0xa0, 0xdc, 0x7a, 0x6e, 0x6a, 0x20, 0x7c, 0xf2, 0x8e, 0x96, 0x5e, 0x77, 0x3a,
	0x2c, 0x3a, 0xc2, 0xcd, 0xd3, 0xe8, 0x90, 0x02, 0x29, 0xd7, 0xc3, 0x63, 0xd6, 0x14, 0x0e, 0xcf,
	0x96, 0xfe, 0xb4, 0xe6, 0x2f, 0xd4, 0x1e, 0x14, 0x2e, 0x85, 0x1f, 0x0d, 0x64, 0x49, 0xed, 0x83,
	0xd3, 0xa0, 0x2b, 0xa6, 0x43, 0xef, 0x2b, 0xd0, 0xca, 0x24, 0x22, 0x0a, 0xbc, 0x3a, 0xcb, 0xdc,
	0xe7, 0x29, 0x7e, 0x1c, 0x8b, 0x25, 0xb4, 0x43, 0x8b, 0xa0, 0x23, 0x22, 0x47, 0x0b, 0x43, 0x14,
	0x62, 0x07, 0xb2, 0xb8, 0x10, 0xfd, 0x8f, 0x7c, 0x9c, 0xf4, 0xcd, 0x59, 0x0c, 0x52, 0x02, 0xe3,
	0x72, 0x55, 0xf9, 0x69, 0xd2, 0x7f, 0x9f, 0xd5, 0x08, 0x24, 0x1e, 0x26, 0xdd, 0x33, 0xdd, 0x61,
	0xd2, 0x77, 0x67, 0x33, 0x1e, 0x33, 0x3e, 0x4b, 0x3a, 0x11, 0x8b, 0xe1, 0xf3, 0xa0, 0xad, 0xe8,
	0xea, 0x66, 0x61, 0x9b, 0x43, 0x9b, 0x55, 0x2a, 0xd3, 0x5a, 0x74, 0x37, 0x16, 0xb6, 0x39, 0xa8,
	0x0f, 0x5a, 0x88, 0x3e, 0x6a, 0xf9, 0x34, 0x8e, 0xa7, 0x32, 0xcd, 0x64, 0xbd, 0xe5, 0x07, 0xd1,
	0x9d, 0xb7, 0x41, 0x36, 0xa2, 0x11, 0x8d, 0xaf, 0xc4, 0x8a, 0xaf, 0x8e, 0xb1, 0xe2, 0xf7, 0x22,
	0xe9, 0xd0, 0xe9, 0x8e, 0xb2, 0x43, 0xa7, 0xef, 0xd5, 0x4b, 0x25, 0x4d, 0x3c, 0x73, 0x7a, 0x55,
	0xef, 0x8c, 0xcf, 0x9c, 0xde, 0x22, 0x8f, 0x54, 0x3e, 0xaa, 0x47, 0xe4, 0x12, 0x22, 0xdf, 0x0d,
	0x2a, 0x34, 0xf9, 0x46, 0x4e, 0x44, 0xbd, 0x3f, 0xd5, 0x25, 0x2c, 0xbe, 0x91, 0x63, 0xa0, 0x04,
	0x50, 0xa0, 0xbf, 0x55, 0xc3, 0xbe, 0x93, 0xee, 0x38, 0xe6, 0x01, 0xf0, 0x6a, 0xb5, 0x1e, 0xa1,
	0x89, 0x00, 0xc1, 0x0f, 0xe1, 0x32, 0xc9, 0x0c, 0xf7, 0x18, 0xbf, 0xac, 0x42, 0x4a, 0xa0, 0x8b,
	0xee, 0x96, 0x1b, 0xe1, 0xb5, 0x6a, 0x3d, 0xd7, 0xb6, 0x99, 0x7c, 0xed, 0xc0, 0x37, 0x72, 0x2b,
	0x57, 0xf0, 0xcd, 0xc4, 0x2c, 0xa1, 0xed, 0x68, 0x85, 0x5e, 0xb9, 0x54, 0x82, 0x69, 0x2f, 0x94,
	0x84, 0xa2, 0x7b, 0xb8, 0xb9, 0x51, 0x65, 0x23, 0x4f, 0x11, 0xcb, 0x64, 0xfd, 0x47, 0x7b, 0x58,
	0x85, 0xb5, 0x03, 0x4d, 0xd0, 0x23, 0xa9, 0xd1, 0x82, 0x18, 0x85, 0x11, 0x5e, 0x1f, 0xc6, 0x98,
	0x8c, 0x27, 0xe4, 0x3a, 0x7c, 0x77, 0x03, 0xe3, 0x04, 0x8c, 0x13, 0xea, 0xf6, 0x17, 0x8e, 0x86,
	0x27, 0x8a, 0x5e, 0x3e, 0x1c, 0xbf, 0x33, 0x92, 0xcd, 0x8c, 0x23, 0x77, 0x46, 0x5e, 0x51, 0x99,
	0x0c, 0xda, 0x3f, 0x0d, 0x19, 0x34, 0xab, 0x63, 0xcf, 0xf1, 0x71, 0x41, 0xdf, 0x3d, 0x16, 0x2e,
	0xe8, 0x01, 0xb9, 0x61, 0xdc, 0xd8, 0x00, 0xf8, 0xa4, 0x51, 0x41, 0xb7, 0x7c, 0x8a, 0x9f, 0xbb,
	0x2d, 0x67, 0x80, 0xfe, 0x35, 0x81, 0x01, 0x7a, 0xae, 0x56, 0x3f, 0x2c, 0x56, 0x91, 0xf8, 0xd9,
	0x59, 0x46, 0xfc, 0xfc, 0xae, 0x8c, 0xf8, 0xf9, 0xf9, 0xec, 0xf0, 0x3a, 0x91, 0xef, 0xd9, 0x79,
	0x74, 0x7c, 0xcf, 0xfb, 0x32, 0xdf, 0xf3, 0xeb, 0xd9, 0x87, 0x4d, 0xc2, 0x64, 0xe7, 0x8f, 0xe5,
	0x9f, 0x4d, 0x78, 0x7d, 0x36, 0x3a, 0x9e, 0xc8, 0xee, 0xec, 0x9a, 0x8e, 0xdd, 0xf9, 0xed, 0x2c,
	0x84, 0x61, 0xc6, 0xa4, 0xce, 0x97, 0x2a, 0x91, 0x3a, 0xab, 0x64, 0x52, 0x67, 0x8a, 0x92, 0x3a,
	0xab, 0x19, 0xa9, 0x33, 0xb5, 0xde, 0xf2, 0x4b, 0x4c, 0xcf, 0x50, 0x22, 0xd3, 0xb3, 0xb2, 0x02,
	0xd3, 0x73, 0x76, 0x8c, 0xe9, 0x79, 0x73, 0x8e, 0xc4, 0xf4, 0x5c, 0x5d, 0xc6, 0xf4, 0xbc, 0x3d,
	0xcb, 0xeb, 0x69, 0x22, 0xc1, 0xf3, 0x52, 0xcf, 0x8c, 0x09, 0x9e, 0x1d, 0xf2, 0xf0, 0xe3, 0x83,
	0x3a, 0x02, 0x2c, 0x21, 0xd4, 0x5d, 0x1b, 0xe7, 0x75, 0xde, 0xab, 0x27, 0x34, 0xe2, 0x74, 0xce,
	0x5d, 0xc9, 0x74, 0xce, 0x87, 0xf5, 0x84, 0xc8, 0x71, 0xb2, 0x38, 0x3f, 0x8a, 0xb2, 0x38, 0xb5,
	0x48, 0xa5, 0x7e, 0xfc, 0x75, 0xeb, 0x18, 0xc9, 0x9b, 0x0f, 0x5b, 0x12, 0xc8, 0x9b, 0x87, 0x12,
	0xc9, 0x9b, 0x1a, 0xb8, 0x9b, 0xe4, 0xc4, 0x55, 0xd0, 0xe9, 0x38, 0x9b, 0x27, 0x8e, 0x96, 0xb3,
	0xa9, 0xc5, 0x53, 0x1b, 0x27, 0x0f, 0xda, 0x93, 0x48, 0xd5, 0xbc, 0x53, 0xf9, 0xba, 0xf7, 0x07,
	0xa7, 0xa1, 0x6a, 0x3e, 0xaa, 0x9b, 0xc1, 0xe9, 0x4c, 0x19, 0x9a, 0x6f, 0x1d, 0x0b, 0x43, 0xb3,
	0x57, 0x6e, 0x06, 0x5f, 0x51, 0xeb, 0x1b, 0xd7, 0x93, 0x40, 0xcc, 0xfc, 0xac, 0x19, 0xfa, 0x4a,
	0xef, 0x2e, 0x55, 0xf7, 0xd7, 0x14, 0xe8, 0x8a, 0xc9, 0x45, 0x5d, 0xdf, 0x5f, 0x65, 0x75, 0x3d,
	0xc1, 0xf8, 0xb8, 0x8c, 0xd5, 0xd0, 0xce, 0x50, 0xb6, 0xc5, 0x9e, 0xd4, 0xfe, 0x59, 0x05, 0x54,
	0x9e, 0x69, 0xba, 0xba, 0xf9, 0x2b, 0x99, 0x90, 0x78, 0xa6, 0x26, 0x71, 0x38, 0x09, 0x35, 0x6a,
	0x79, 0xec, 0xff, 0x4e, 0x83, 0x4e, 0xe6, 0x46, 0xec, 0x83, 0x7f, 0x1d, 0x54, 0xc6, 0xbe, 0xf6,
	0xa7, 0x7d, 0xd0, 0x02, 0x1a, 0xbf, 0xf1, 0x9a, 0x65, 0xcd, 0x16, 0x8a, 0x8e, 0x8f, 0xc5, 0xdd,
	0xfb, 0xdf, 0x96, 0x91, 0xff, 0xc6, 0x49, 0x45, 0xbe, 0xb2, 0x65, 0x09, 0x58, 0x3e, 0xd0, 0x1c,
	0x73, 0xfe, 0x0c, 0xe8, 0xce, 0x16, 0x3c, 0xaf, 0xe8, 0xfa, 0xd8, 0xd4, 0x6d, 0xe2, 0x12, 0xee,
	0x7e, 0x57, 0x28, 0xdd, 0x44, 0x5c, 0x82, 0x96, 0x01, 0x0a, 0x0b, 0xb5, 0x30, 0x89, 0x3d, 0xbb,
	0x60, 0x98, 0x84, 0x63, 0x3d, 0x47, 0x68, 0x3e, 0x2f, 0x14, 0x68, 0x3d, 0x9c, 0x9a, 0x37, 0x9c,
	0xa2, 0x61, 0x87, 0xe7, 0x49, 0x4d, 0xaf, 0xe0, 0xea, 0x63, 0x5e, 0x21, 0xaf, 0x1b, 0x1e, 0x36,
	0x08, 0xdf, 0xa6, 0xa1, 0xb1, 0x5c, 0xfc, 0x9e, 0xb9, 0x8d, 0x5e, 0xc1, 0xbd, 0xd8, 0x2b, 0xe4,
	0xd7, 0x05, 0x39, 0xd0, 0x32, 0xe8, 0xc3, 0x53, 0x59, 0x8c, 0x4d, 0x3d, 0x6f, 0x4c, 0xe9, 0x04,
	0x5f, 0x1e, 0x94, 0x0f, 0xfb, 0xc6, 0x6c, 0x57, 0xa6, 0x97, 0xa9, 0x2e, 0x31, 0xa6, 0x46, 0xf0,
	0xe5, 0x9b, 0x8b, 0x79, 0x82, 0x96, 0x40, 0x17, 0xcf, 0xa3, 0x93, 0xad, 0x96, 0x4b, 0x38, 0x3d,
	0xd0, 0x41, 0xa8, 0x7e, 0x24, 0x10, 0xa1, 0xd3, 0xa1, 0xbb, 0xb0, 0xcd, 0x09, 0xdc, 0xd4, 0xdd,
	0xa2, 0x97, 0xc3, 0x24, 0xbd, 0x86, 0x9d, 0xa4, 0x28, 0x6c, 0x73, 0x36, 0x11, 0xf7, 0x52, 0x2a,
	0x43, 0x67, 0x42, 0x4f, 0xd0, 0xad, 0x63, 0x47, 0xcf, 0x5b, 0x24, 0x6f, 0xf8, 0xd9, 0xf1, 0xf4,
	0x5a, 0x86, 0x89, 0x65, 0x6e, 0xc2, 0xce, 0x25, 0x5c, 0x18, 0xd4, 0x1b, 0xd7, 0xf0, 0x7c, 0x3d,
	0x3b, 0x6e, 0x38, 0xc1, 0x7f, 0x9d, 0xc3, 0x5e, 0x18, 0xc8, 0x36, 0x30, 0x11, 0x3a, 0x1f, 0x16,
	0x04, 0xc6, 0x07, 0x2e, 0x87, 0x48, 0x88, 0x3f, 0xc5, 0x24, 0x7d, 0x2e, 0x7d, 0x22, 0x9d, 0x37,
	0xa6, 0x02, 0x97, 0x39, 0x0a, 0x97, 0x84, 0x7a, 0xb4, 0x10, 0xc0, 0x28, 0xfa, 0xe3, 0xfa, 0x98,
	0x61, 0xd9, 0x24, 0x7d, 0x1e, 0x1f, 0x0a, 0x14, 0xfd, 0xf1, 0x8b, 0x03, 0x01, 0x9a, 0x0f, 0x29,
	0xe2, 0x8e, 0xe9, 0x5e, 0xd1, 0x21, 0xe9, 0xf3, 0xd9, 0xa1, 0x2b, 0xe2, 0x8e, 0x65, 0x8a, 0x0e,
	0xf5, 0x81, 0x3e, 0x19, 0x94, 0x31, 0x7f, 0xfc, 0x02, 0xe6, 0x43, 0x20, 0xde, 0xb2, 0xdd, 0xc5,
	0xec, 0x2f, 0x16, 0x02, 0x04, 0x68, 0x60, 0xcf, 0x2b, 0x78, 0x24, 0x7d, 0x21, 0x7b, 0x83, 0x4d,
	0xdc, 0x8b, 0xa8, 0x40, 0xfb, 0xea, 0x05, 0xd0, 0x13, 0x9e, 0xcb, 0xe6, 0x95, 0xfd, 0x46, 0x05,
	0xda, 0x43, 0x99, 0x08, 0xb9, 0xe4, 0x84, 0xd4, 0x77, 0xe9, 0xd5, 0xa5, 0x34, 0x1f, 0xcf, 0x86,
	0x69, 0xed, 0xe0, 0x79, 0xd0, 0x1d, 0xd7, 0xa2, 0xa5, 0xd0, 0x59, 0x92, 0xc8, 0x5f, 0x81, 0xe8,
	0x08, 0x55, 0xc3, 0x26, 0xda, 0x29, 0x37, 0xdf, 0xbf, 0xfa, 0x04, 0xbc, 0x49, 0xe0, 0x1f, 0x1e,
	0x57, 0xa0, 0x37, 0x6b, 0x79, 0xd9, 0xa2, 0xe5, 0x87, 0xcd, 0x5a, 0x90, 0x11, 0x5f, 0x51, 0x3e,
	0x09, 0x1b, 0x65, 0x6b, 0xf8, 0x9d, 0x87, 0x5c, 0xbc, 0x81, 0x4b, 0xd1, 0xa3, 0x0a, 0xf4, 0xb8,
	0x46, 0x76, 0x2b, 0x8e, 0xd8, 0xcd, 0x29, 0x83, 0xeb, 0x3e, 0x11, 0xbb, 0x25, 0x63, 0x98, 0xd9,
	0xdd, 0x4c, 0x1a, 0x5a, 0x7d, 0xab, 0x12, 0x74, 0x22, 0x41, 0x84, 0x15, 0xb7, 0xa1, 0x7f, 0xe9,
	0x93, 0xb0, 0x35, 0x12, 0xe4, 0x33, 0xdc, 0x9e, 0xf2, 0x0e, 0xab, 0xbc, 0x66, 0xc7, 0xaa, 0xb4,
	0xf6, 0x74, 0x33, 0xcc, 0x4d, 0x2c, 0x2c, 0xf4, 0x90, 0x5c, 0xd9, 0x6f, 0xae, 0x9e, 0x9a, 0x94,
	0xd0, 0x5d, 0xbd, 0xa7, 0x96, 0xdf, 0x10, 0x37, 0x11, 0x86, 0x5c, 0xd6, 0x57, 0x81, 0x61, 0x4e,
	0x88, 0x88, 0xbb, 0x10, 0xc0, 0x72, 0x2c, 0x9f, 0xc7, 0x3c, 0x3e, 0x7b, 0x0a, 0x24, 0x2c, 0xde,
	0x9d, 0x06, 0x9d, 0x1e, 0x9e, 0xc0, 0xd9, 0xa0, 0xb7, 0x33, 0xcc, 0x09, 0xde, 0x0d, 0x75, 0x08,
	0xd9, 0x3a, 0x73, 0x02, 0xad, 0x86, 0x79, 0x96, 0xa9, 0x8f, 0x59, 0xd8, 0x8e, 0x77, 0x02, 0x58,
	0xf4, 0x3d, 0xfd, 0x96, 0x79, 0x71, 0xa0, 0x8d, 0xf4, 0x05, 0x47, 0x0e, 0xf5, 0x67, 0x1f, 0x21,
	0xd4, 0x27, 0x04, 0xec, 0x35, 0x15, 0x02, 0x76, 0xa4, 0x4b, 0x58, 0x2b, 0x77, 0x09, 0x67, 0x42,
	0x8f, 0x6d, 0x38, 0xba, 0x69, 0x11, 0xa9, 0x5b, 0xea, 0xb2, 0x0d, 0x67, 0xa3, 0x45, 0x22, 0x30,
	0x05, 0x38, 0xf2, 0x11, 0xcf, 0xb9, 0xfc, 0x6f, 0xcc, 0x09, 0x3e, 0xde, 0x79, 0xe1, 0x14, 0xe8,
	0x4f, 0x6a, 0x33, 0xe8, 0x3e, 0x05, 0x9a, 0x6c, 0xe2, 0x9e, 0xe0, 0x71, 0xce, 0x31, 0xb4, 0x66,
	0x3a, 0xca, 0x64, 0x84, 0xa5, 0x4d, 0x5c, 0x6a, 0xa7, 0x65, 0x8d, 0x8b, 0x68, 0x59, 0x45, 0x76,
	0x5a, 0x16, 0xbf, 0xfc, 0x39, 0xb0, 0x8f, 0xd9, 0x49, 0xc2, 0x1b, 0xdc, 0xab, 0xc9, 0x4e, 0x12,
	0xda, 0x49, 0x98, 0x9d, 0x98, 0x84, 0xf7, 0xa3, 0x57, 0x91, 0x9d, 0x38, 0xb4, 0x13, 0x93, 0x71,
	0x74, 0xbf, 0x02, 0xcd, 0x2e, 0x71, 0x5c, 0xd1, 0xdd, 0xdc, 0x58, 0x3d, 0x86, 0x06, 0x66, 0x31,
	0x4b, 0xa9, 0x85, 0xd4, 0xd4, 0x6c, 0x60, 0xea, 0xed, 0x55, 0x67, 0x6a, 0xb6, 0x64, 0x6a, 0xf0,
	0x13, 0x7d, 0x4f, 0x81, 0xb6, 0xa2, 0xb3, 0xd5, 0x29, 0x6c, 0x73, 0xc4, 0x5d, 0xee, 0x3b, 0xab,
	0xc7, 0x5a, 0x6e, 0x19, 0x5f, 0xaa, 0xe5, 0x29, 0xed, 0x15, 0x15, 0x52, 0x22, 0x26, 0xa0, 0xfd,
	0x72, 0xa7, 0x77, 0x47, 0xf5, 0x05, 0xae, 0x84, 0xce, 0xef, 0x66, 0x45, 0xbe, 0x88, 0xca, 0xc3,
	0x59, 0x6c, 0x4d, 0x62, 0x71, 0x04, 0x3c, 0x4c, 0xa3, 0x53, 0xa0, 0xdd, 0xf5, 0x0a, 0x59, 0x4c,
	0x08, 0x36, 0x79, 0xaf, 0x56, 0x12, 0xa0, 0x34, 0xb4, 0x05, 0x13, 0x30, 0x17, 0x9b, 0xbc, 0x4b,
	0x14, 0xc9, 0x60, 0x32, 0x4d, 0xb0, 0xe3, 0xf3, 0xae, 0x8d, 0xfe, 0x46, 0xa7, 0x02, 0x78, 0xd8,
	0xf7, 0x0c, 0x87, 0xe4, 0x2d, 0x9f, 0xf7, 0x5c, 0x11, 0x09, 0x85, 0x56, 0x84, 0xb1, 0xaa, 0x86,
	0x56, 0x18, 0x59, 0x63, 0xd0, 0x92, 0x5a, 0x80, 0x96, 0xd4, 0x22, 0xb4, 0xb8, 0x16, 0xa0, 0xc5,
	0x35, 0x07, 0xed, 0xab, 0x2a, 0xb4, 0x87, 0xdd, 0x1b, 0x7a, 0x4c, 0xc6, 0xf6, 0xce, 0x2a, 0xec,
	0x84, 0x6b, 0x0b, 0xdc, 0x6c, 0x4d, 0x80, 0x9b, 0xad, 0x3d, 0x70, 0xdf, 0x50, 0xa1, 0x33, 0x3a,
	0x7e, 0x40, 0x4f, 0xca, 0xf8, 0xee, 0xa9, 0xce, 0x81, 0x4e, 0xed, 0x40, 0xfc, 0xa3, 0xb9, 0xd0,
	0x11, 0xe1, 0x34, 0xd0, 0x3d, 0x0a, 0xb4, 0xd0, 0xb4, 0xe0, 0x0e, 0xff, 0x46, 0xf9, 0x84, 0x69,
	0x96, 0x08, 0x97, 0x9e, 0x61, 0xa6, 0x69, 0x37, 0xf6, 0x03, 0x94, 0xa4, 0x68, 0x69, 0xd2, 0x12,
	0x41, 0xc8, 0x25, 0x46, 0x56, 0x0a, 0xd0, 0x3e, 0xb9, 0xfe, 0xec, 0xac, 0x22, 0xef, 0x12, 0x38,
	0xc6, 0x67, 0x14, 0xca, 0xa8, 0xd0, 0x4b, 0x2b, 0x2c, 0x1c, 0xd2, 0x8b, 0xbb, 0xab, 0xc9, 0xea,
	0x88, 0x7d, 0xfc, 0x22, 0xb2, 0x88, 0x24, 0x88, 0x88, 0x29, 0x63, 0xcc, 0xd2, 0x89, 0x31, 0x66,
	0x89, 0x69, 0xdf, 0xad, 0x55, 0x65, 0x3e, 0x37, 0x8e, 0x4f, 0x50, 0x8c, 0x31, 0x6b, 0xc4, 0x18,
	0xb3, 0x8e, 0x7e, 0x11, 0xea, 0x67, 0x00, 0xbd, 0x32, 0x14, 0xe8, 0x45, 0x05, 0xda, 0xc3, 0x4b,
	0x47, 0x44, 0x8b, 0x7a, 0xa0, 0x9a, 0x4b, 0x2f, 0x72, 0x4f, 0x10, 0x63, 0xf1, 0xc3, 0xb4, 0x76,
	0x38, 0x15, 0xfd, 0xc4, 0xcb, 0x8c, 0x3f, 0xe4, 0xfc, 0x92, 0xdc, 0xe6, 0x1e, 0xab, 0x21, 0xff,
	0x13, 0x02, 0xf9, 0x5b, 0xad, 0x33, 0xff, 0xda, 0xee, 0xa7, 0x22, 0x5f, 0xbe, 0x26, 0x8e, 0x6b,
	0xf0, 0xab, 0xbf, 0x3a, 0x85, 0x70, 0xc4, 0x71, 0x0d, 0xb4, 0x16, 0xe6, 0xd3, 0x6f, 0x3c, 0xe8,
	0xe1, 0x61, 0x0d, 0x41, 0xbf, 0x5a, 0x22, 0xfc, 0x0f, 0xd0, 0x0c, 0x17, 0x71, 0xfd, 0x06, 0xa6,
	0x1e, 0x36, 0xd1, 0x85, 0x70, 0x4a, 0xf8, 0xff, 0x49, 0x4f, 0xb3, 0x9e, 0x60, 0xbe, 0xc8, 0x53,
	0xfe, 0x07, 0xd1, 0xdb, 0x93, 0xcf, 0x96, 0x6e, 0x4f, 0x5e, 0x02, 0x5d, 0xa6, 0x45, 0xf4, 0x92,
	0x77, 0x6b, 0x18, 0x93, 0x6d, 0x5a, 0x64, 0x44, 0x38, 0xb8, 0x02, 0xe6, 0x86, 0x06, 0x88, 0xf7,
	0xd2, 0xe5, 0xdf, 0xb5, 0x34, 0x6f, 0x9f, 0x50, 0xf2, 0x37, 0x6e, 0xe1, 0x8b, 0x9a, 0x25, 0x90,
	0x69, 0xe6, 0x73, 0x68, 0xe6, 0xd2, 0xd7, 0x71, 0x68, 0xb6, 0xb3, 0xa0, 0x27, 0x72, 0x5f, 0x0f,
	0xad, 0x40, 0xe7, 0xd2, 0x7c, 0xa5, 0xa7, 0x47, 0x68, 0x90, 0x1c, 0x84, 0x3e, 0x0f, 0xe7, 0x0d,
	0xcb, 0xb1, 0x9c, 0x9c, 0x3e, 0x5e, 0xb0, 0x4d, 0xdd, 0xb7, 0xf2, 0x38, 0xbd, 0x9e, 0x2d, 0x7f,
	0x86, 0xaa, 0xff, 0x5f, 0xb0, 0xcd, 0x2d, 0x56, 0x5e, 0x6c, 0x7f, 0xa6, 0x79, 0xd8, 0xa2, 0x5d,
	0x6b, 0xd1, 0xa5, 0x8a, 0x33, 0xa0, 0x3b, 0x5f, 0xb4, 0x7d, 0x4b, 0xf7, 0x0b, 0x6e, 0xc1, 0x2e,
	0xe4, 0xb6, 0xd3, 0x75, 0xbb, 0x54, 0xa6, 0x8b, 0x4a, 0xb7, 0x70, 0x61, 0x80, 0x59, 0x98, 0xe1,
	0x02, 0xba, 0x35, 0x28, 0x4c, 0x07, 0x46, 0x7b, 0x98, 0xf8, 0x86, 0xe7, 0xeb, 0xa4, 0xe8, 0xba,
	0x05, 0xcf, 0xa7, 0xcb, 0x76, 0xa9, 0x4c, 0x37, 0x17, 0x8f, 0x30, 0x29, 0xfa, 0x7f, 0xd0, 0x1b,
	0xcd, 0x48, 0x6f, 0xe9, 0xfd, 0x0c, 0xcd, 0xd9, 0x13, 0xc9, 0x49, 0xbf, 0xef, 0x75, 0x06, 0x74,
	0x87, 0x59, 0x7d, 0xc3, 0x2f, 0x92, 0xf4, 0x3a, 0x66, 0x96, 0xc8, 0x48, 0x85, 0x41, 0x8c, 0x8a,
	0xd2, 0xdb, 0xe9, 0x0d, 0xd4, 0xb4, 0x0e, 0xa3, 0x44, 0x68, 0xa3, 0x7e, 0x68, 0x71, 0x6c, 0xd7,
	0x32, 0xd3, 0x1b, 0xd9, 0x8e, 0x26, 0x9a, 0x08, 0xca, 0x30, 0xf9, 0xeb, 0x9f, 0x17, 0xd1, 0x5c,
	0x89, 0x9f, 0xba, 0x5c, 0x51, 0xe9, 0xd3, 0x6d, 0x17, 0x87, 0xcf, 0x94, 0x7d, 0xa7, 0x6c, 0x10,
	0xfa, 0xa4, 0x4b, 0x98, 0x68, 0xa1, 0x7e, 0x96, 0x16, 0xea, 0x9c, 0xd8, 0xe7, 0x7d, 0x68, 0x43,
	0x7b, 0xa8, 0x19, 0xba, 0x62, 0xd1, 0x19, 0x3d, 0xa2, 0x80, 0x6a, 0x8c, 0x89, 0x38, 0xba, 0xa7,
	0x6a, 0xbb, 0x91, 0x41, 0x63, 0x8c, 0x45, 0x4f, 0xd5, 0x18, 0xd3, 0xde, 0x54, 0xa1, 0x8d, 0xa7,
	0xd1, 0x7c, 0xd6, 0x19, 0x3a, 0x46, 0x5e, 0x6c, 0x3f, 0x0d, 0x3a, 0x9c, 0xcd, 0x46, 0x9e, 0xc5,
	0x91, 0x50, 0xb7, 0x8a, 0xc7, 0x11, 0xa1, 0x7c, 0x56, 0x8e, 0xa1, 0x0f, 0x56, 0xbd, 0xef, 0x09,
	0x91, 0xf3, 0x2f, 0xe5, 0x4b, 0x49, 0x8f, 0x09, 0x8b, 0x0a, 0x97, 0x49, 0x9c, 0x33, 0x09, 0x8b,
	0x26, 0x1c, 0xd7, 0xd3, 0x93, 0x71, 0x09, 0xc2, 0x23, 0x9a, 0x37, 0xf8, 0xb9, 0xa2, 0x63, 0xb9,
	0xd8, 0xdb, 0xcc, 0xf2, 0x90, 0x11, 0xec, 0x90, 0x82, 0xc7, 0x1a, 0x54, 0xc7, 0x8a, 0x79, 0x15,
	0x30, 0xcd, 0x2c, 0x08, 0xfe, 0x98, 0x3f, 0x33, 0x2c, 0x54, 0xc3, 0xc4, 0x22, 0x17, 0x4d, 0xf9,
	0xeb, 0x2f, 0x7b, 0xfe, 0xe0, 0xa9, 0xca, 0xcb, 0x07, 0x4f, 0x55, 0xde, 0x38, 0x78, 0xaa, 0xf2,
	0xe7, 0x99, 0x9c, 0xe5, 0x0f, 0x4e, 0xb0, 0xb7, 0x04, 0x7f, 0xb7, 0xdc, 0xca, 0xe2, 0x51, 0xec,
	0xe5, 0x96, 0x8f, 0x63, 0xc3, 0xf6, 0xc7, 0x47, 0x0b, 0xfe, 0x32, 0xcb, 0xc9, 0x61, 0xe2, 0x2f,
	0x9b, 0xf0, 0xad, 0x65, 0x8e, 0xe1, 0x5b, 0x93, 0x78, 0xb9, 0xbb, 0x35, 0xb7, 0x7c, 0xc2, 0xb7,
	0x96, 0x1b, 0xa6, 0xe1, 0x06, 0x13, 0x8a, 0xe5, 0xfa, 0x44, 0xd1, 0x29, 0x90, 0xe5, 0x24, 0x3b,
	0x8e, 0xf3, 0xc6, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x81, 0xa3, 0x27, 0xd8, 0xb9, 0x00,
	0x00,
}

func (m *NetworkInstancesIsis) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsis) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsis) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocols != nil {
		{
			size, err := m.Protocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Isis != nil {
		{
			size, err := m.Isis.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Interfaces != nil {
		{
			size, err := m.Interfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Levels != nil {
		{
			size, err := m.Levels.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Level) > 0 {
		for iNdEx := len(m.Level) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Level[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SystemLevelCounters != nil {
		{
			size, err := m.SystemLevelCounters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.LinkStateDatabase != nil {
		{
			size, err := m.LinkStateDatabase.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LevelNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LevelNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Lsp) > 0 {
		for iNdEx := len(m.Lsp) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Lsp[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UndefinedTlvs != nil {
		{
			size, err := m.UndefinedTlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Tlvs != nil {
		{
			size, err := m.Tlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LspId != nil {
		i -= len(*m.LspId)
		copy(dAtA[i:], *m.LspId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.LspId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsType != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.IsType))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xf2
		}
	}
	if m.LspInstallTime != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LspInstallTime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.PduLength != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.PduLength))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.Checksum != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Checksum))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.SequenceNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.SequenceNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.RemainingLifetime != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.RemainingLifetime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.PduType != nil {
		i -= len(*m.PduType)
		copy(dAtA[i:], *m.PduType)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.PduType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.IdLength != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.IdLength))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Version2 != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Version2))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Version != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Version))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.MaximumAreaAddresses != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.MaximumAreaAddresses))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.LspId != nil {
		i -= len(*m.LspId)
		copy(dAtA[i:], *m.LspId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.LspId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tlv) > 0 {
		for iNdEx := len(m.Tlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ipv4Srlgs != nil {
		{
			size, err := m.Ipv4Srlgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x9a
	}
	if m.RouterCapabilities != nil {
		{
			size, err := m.RouterCapabilities.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x92
	}
	if m.ExtendedIsReachability != nil {
		{
			size, err := m.ExtendedIsReachability.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x8a
	}
	if m.Ipv6Reachability != nil {
		{
			size, err := m.Ipv6Reachability.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x82
	}
	if m.ExtendedIpv4Reachability != nil {
		{
			size, err := m.ExtendedIpv4Reachability.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xfa
	}
	if m.LspBufferSize != nil {
		{
			size, err := m.LspBufferSize.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xf2
	}
	if m.Ipv6InterfaceAddresses != nil {
		{
			size, err := m.Ipv6InterfaceAddresses.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xea
	}
	if m.Ipv4InterfaceAddresses != nil {
		{
			size, err := m.Ipv4InterfaceAddresses.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
	}
	if m.Ipv4TeRouterId != nil {
		{
			size, err := m.Ipv4TeRouterId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.Hostname != nil {
		{
			size, err := m.Hostname.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Nlpid != nil {
		{
			size, err := m.Nlpid.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.AreaAddress != nil {
		{
			size, err := m.AreaAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Size_ != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Size_))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Nlpid) > 0 {
		for iNdEx := len(m.Nlpid) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Nlpid[iNdEx])
			copy(dAtA[i:], m.Nlpid[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Nlpid[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hname != nil {
		i -= len(*m.Hname)
		copy(dAtA[i:], *m.Hname)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Hname)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TeRouterId != nil {
		i -= len(*m.TeRouterId)
		copy(dAtA[i:], *m.TeRouterId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.TeRouterId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ipv4Srlg) > 0 {
		for iNdEx := len(m.Ipv4Srlg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ipv4Srlg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InstanceNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.InstanceNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xca
		}
	}
	if len(m.SrlgValue) > 0 {
		for iNdEx := len(m.SrlgValue) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(m.SrlgValue[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xc0
		}
	}
	if m.Ipv4NeighborAddress != nil {
		i -= len(*m.Ipv4NeighborAddress)
		copy(dAtA[i:], *m.Ipv4NeighborAddress)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Ipv4NeighborAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if m.Ipv4InterfaceAddress != nil {
		i -= len(*m.Ipv4InterfaceAddress)
		copy(dAtA[i:], *m.Ipv4InterfaceAddress)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Ipv4InterfaceAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.PsnNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.PsnNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.SystemId != nil {
		i -= len(*m.SystemId)
		copy(dAtA[i:], *m.SystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.InstanceNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.InstanceNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Capability) > 0 {
		for iNdEx := len(m.Capability) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Capability[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UndefinedSubtlvs != nil {
		{
			size, err := m.UndefinedSubtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Subtlvs != nil {
		{
			size, err := m.Subtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InstanceNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.InstanceNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if m.RouterId != nil {
		i -= len(*m.RouterId)
		copy(dAtA[i:], *m.RouterId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.RouterId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.InstanceNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.InstanceNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subtlv) > 0 {
		for iNdEx := len(m.Subtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SegmentRoutingCapability != nil {
		{
			size, err := m.SegmentRoutingCapability.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.SegmentRoutingAlgorithms != nil {
		{
			size, err := m.SegmentRoutingAlgorithms.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Algorithm) > 0 {
		for iNdEx := len(m.Algorithm) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Algorithm[iNdEx])
			copy(dAtA[i:], m.Algorithm[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Algorithm[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrgbDescriptors != nil {
		{
			size, err := m.SrgbDescriptors.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SrgbDescriptor) > 0 {
		for iNdEx := len(m.SrgbDescriptor) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SrgbDescriptor[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Range != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Range))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Label != nil {
		i -= len(*m.Label)
		copy(dAtA[i:], *m.Label)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Label)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Range != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Range))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UndefinedSubtlv) > 0 {
		for iNdEx := len(m.UndefinedSubtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UndefinedSubtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Length != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Length))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Neighbors != nil {
		{
			size, err := m.Neighbors.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Neighbor) > 0 {
		for iNdEx := len(m.Neighbor) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Neighbor[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UndefinedSubtlvs != nil {
		{
			size, err := m.UndefinedSubtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Subtlvs != nil {
		{
			size, err := m.Subtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.SystemId != nil {
		i -= len(*m.SystemId)
		copy(dAtA[i:], *m.SystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metric != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.SystemId != nil {
		i -= len(*m.SystemId)
		copy(dAtA[i:], *m.SystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subtlv) > 0 {
		for iNdEx := len(m.Subtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ipv6NeighborAddress != nil {
		{
			size, err := m.Ipv6NeighborAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0xa2
	}
	if m.Ipv6InterfaceAddress != nil {
		{
			size, err := m.Ipv6InterfaceAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x9a
	}
	if m.LanAdjacencySids != nil {
		{
			size, err := m.LanAdjacencySids.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x92
	}
	if m.AdjacencySids != nil {
		{
			size, err := m.AdjacencySids.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x8a
	}
	if m.AdminGroup != nil {
		{
			size, err := m.AdminGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
		i--
		dAtA[i] = 0x82
	}
	if m.BandwidthConstraints != nil {
		{
			size, err := m.BandwidthConstraints.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xfa
	}
	if m.TeDefaultMetric != nil {
		{
			size, err := m.TeDefaultMetric.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xf2
	}
	if m.UnreservedBandwidth != nil {
		{
			size, err := m.UnreservedBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xea
	}
	if m.MaxReservableLinkBandwidth != nil {
		{
			size, err := m.MaxReservableLinkBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
	}
	if m.MaxLinkBandwidth != nil {
		{
			size, err := m.MaxLinkBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.LinkId != nil {
		{
			size, err := m.LinkId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Ipv4NeighborAddress != nil {
		{
			size, err := m.Ipv4NeighborAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Ipv4InterfaceAddress != nil {
		{
			size, err := m.Ipv4InterfaceAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AdminGroup) > 0 {
		for iNdEx := len(m.AdminGroup) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(m.AdminGroup[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x98
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Remote != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Remote))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Local != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Local))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bandwidth != nil {
		i -= len(*m.Bandwidth)
		copy(dAtA[i:], *m.Bandwidth)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Bandwidth)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bandwidth != nil {
		i -= len(*m.Bandwidth)
		copy(dAtA[i:], *m.Bandwidth)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Bandwidth)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SetupPriority) > 0 {
		for iNdEx := len(m.SetupPriority) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SetupPriority[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Priority != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Priority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bandwidth != nil {
		i -= len(*m.Bandwidth)
		copy(dAtA[i:], *m.Bandwidth)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Bandwidth)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Priority != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Priority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		for iNdEx := len(m.Address) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Address[iNdEx])
			copy(dAtA[i:], m.Address[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Address[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metric != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BandwidthConstraint) > 0 {
		for iNdEx := len(m.BandwidthConstraint) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BandwidthConstraint[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Constraints != nil {
		{
			size, err := m.Constraints.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.ModelId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ModelId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ModelId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ModelId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Constraint) > 0 {
		for iNdEx := len(m.Constraint) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Constraint[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.ConstraintId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ConstraintId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bandwidth != nil {
		i -= len(*m.Bandwidth)
		copy(dAtA[i:], *m.Bandwidth)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Bandwidth)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.ConstraintId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ConstraintId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AdjSid != nil {
		{
			size, err := m.AdjSid.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Weight != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Weight))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa2
		}
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LanAdjSid != nil {
		{
			size, err := m.LanAdjSid.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NeighborId != nil {
		i -= len(*m.NeighborId)
		copy(dAtA[i:], *m.NeighborId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.NeighborId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.Weight != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Weight))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa2
		}
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UndefinedSubtlv) > 0 {
		for iNdEx := len(m.UndefinedSubtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UndefinedSubtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Length != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Length))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Prefixes != nil {
		{
			size, err := m.Prefixes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Prefix) > 0 {
		for iNdEx := len(m.Prefix) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Prefix[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UndefinedSubtlvs != nil {
		{
			size, err := m.UndefinedSubtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Subtlvs != nil {
		{
			size, err := m.Subtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.Metric != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.SBit != nil {
		i--
		if *m.SBit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.UpDown != nil {
		i--
		if *m.UpDown {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subtlv) > 0 {
		for iNdEx := len(m.Subtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrefixSids != nil {
		{
			size, err := m.PrefixSids.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Tag != nil {
		{
			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tag32) > 0 {
		for iNdEx := len(m.Tag32) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(m.Tag32[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x98
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PrefixSid) > 0 {
		for iNdEx := len(m.PrefixSid) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PrefixSid[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if m.Algorithm != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Algorithm))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UndefinedSubtlv) > 0 {
		for iNdEx := len(m.UndefinedSubtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UndefinedSubtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Length != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Length))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Prefixes != nil {
		{
			size, err := m.Prefixes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Prefix) > 0 {
		for iNdEx := len(m.Prefix) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Prefix[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UndefinedSubtlvs != nil {
		{
			size, err := m.UndefinedSubtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Subtlvs != nil {
		{
			size, err := m.Subtlvs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metric != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.SBit != nil {
		i--
		if *m.SBit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.XBit != nil {
		i--
		if *m.XBit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.UpDown != nil {
		i--
		if *m.UpDown {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Prefix != nil {
		i -= len(*m.Prefix)
		copy(dAtA[i:], *m.Prefix)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Prefix)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subtlv) > 0 {
		for iNdEx := len(m.Subtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PrefixSids != nil {
		{
			size, err := m.PrefixSids.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Tag != nil {
		{
			size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tag32) > 0 {
		for iNdEx := len(m.Tag32) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(m.Tag32[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x98
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PrefixSid) > 0 {
		for iNdEx := len(m.PrefixSid) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PrefixSid[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Flags) > 0 {
		for iNdEx := len(m.Flags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Flags[iNdEx])
			copy(dAtA[i:], m.Flags[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Flags[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if m.Algorithm != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Algorithm))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Value != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UndefinedSubtlv) > 0 {
		for iNdEx := len(m.UndefinedSubtlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UndefinedSubtlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Length != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Length))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UndefinedTlv) > 0 {
		for iNdEx := len(m.UndefinedTlv) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UndefinedTlv[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Length != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Length))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Type != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LevelNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LevelNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LspErrors != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LspErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.AuthTypeFails != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AuthTypeFails))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.SpfRuns != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.SpfRuns))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.AuthFails != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AuthFails))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.MaxAreaAddressMismatches != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.MaxAreaAddressMismatches))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.PartChanges != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.PartChanges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.IdLenMismatch != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.IdLenMismatch))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.OwnLspPurges != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.OwnLspPurges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.SeqNumSkips != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.SeqNumSkips))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.ExceedMaxSeqNums != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ExceedMaxSeqNums))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.ManualAddressDropFromAreas != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.ManualAddressDropFromAreas))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.DatabaseOverloads != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.DatabaseOverloads))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.CorruptedLsps != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.CorruptedLsps))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Levels != nil {
		{
			size, err := m.Levels.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.PacketCounters != nil {
		{
			size, err := m.PacketCounters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.CircuitCounters != nil {
		{
			size, err := m.CircuitCounters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AdjNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AdjNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.LanDisChanges != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LanDisChanges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.AuthFails != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AuthFails))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.AuthTypeFails != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AuthTypeFails))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.MaxAreaAddressMismatches != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.MaxAreaAddressMismatches))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.IdFieldLenMismatches != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.IdFieldLenMismatches))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RejectedAdj != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.RejectedAdj))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.InitFails != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.InitFails))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.AdjChanges != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.AdjChanges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unknown != nil {
		{
			size, err := m.Unknown.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xea
	}
	if m.Esh != nil {
		{
			size, err := m.Esh.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
	}
	if m.Ish != nil {
		{
			size, err := m.Ish.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.Csnp != nil {
		{
			size, err := m.Csnp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Psnp != nil {
		{
			size, err := m.Psnp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Iih != nil {
		{
			size, err := m.Iih.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Lsp != nil {
		{
			size, err := m.Lsp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Retransmit != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Retransmit))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Sent != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Sent))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Processed != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Processed))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Dropped != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Dropped))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Received != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Received))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Level) > 0 {
		for iNdEx := len(m.Level) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Level[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AfiSafi != nil {
		{
			size, err := m.AfiSafi.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Adjacencies != nil {
		{
			size, err := m.Adjacencies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LevelNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LevelNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LevelNumber != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LevelNumber))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Adjacency) > 0 {
		for iNdEx := len(m.Adjacency) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Adjacency[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.SystemId != nil {
		i -= len(*m.SystemId)
		copy(dAtA[i:], *m.SystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LanAdjacencyState != nil {
		i -= len(*m.LanAdjacencyState)
		copy(dAtA[i:], *m.LanAdjacencyState)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.LanAdjacencyState)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xba
	}
	if len(m.Ipv6NeighborAddress) > 0 {
		for iNdEx := len(m.Ipv6NeighborAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ipv6NeighborAddress[iNdEx])
			copy(dAtA[i:], m.Ipv6NeighborAddress[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Ipv6NeighborAddress[iNdEx])))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.Ipv4NeighborAddress) > 0 {
		for iNdEx := len(m.Ipv4NeighborAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ipv4NeighborAddress[iNdEx])
			copy(dAtA[i:], m.Ipv4NeighborAddress[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Ipv4NeighborAddress[iNdEx])))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Nlpid) > 0 {
		for iNdEx := len(m.Nlpid) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Nlpid[iNdEx])
			copy(dAtA[i:], m.Nlpid[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Nlpid[iNdEx])))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.AreaAddress) > 0 {
		for iNdEx := len(m.AreaAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AreaAddress[iNdEx])
			copy(dAtA[i:], m.AreaAddress[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.AreaAddress[iNdEx])))
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0x9a
		}
	}
	if m.RemainingHoldTime != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.RemainingHoldTime))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.RestartStatus != nil {
		i--
		if *m.RestartStatus {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.RestartSuppress != nil {
		i--
		if *m.RestartSuppress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.RestartSupport != nil {
		i--
		if *m.RestartSupport {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if len(m.Topology) > 0 {
		for iNdEx := len(m.Topology) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Topology[iNdEx])
			copy(dAtA[i:], m.Topology[iNdEx])
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(m.Topology[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xf2
		}
	}
	if m.MultiTopology != nil {
		i--
		if *m.MultiTopology {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.UpTime != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.UpTime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.AdjacencyState != nil {
		i -= len(*m.AdjacencyState)
		copy(dAtA[i:], *m.AdjacencyState)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.AdjacencyState)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xda
	}
	if m.AdjacencyType != nil {
		i -= len(*m.AdjacencyType)
		copy(dAtA[i:], *m.AdjacencyType)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.AdjacencyType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd2
	}
	if m.NeighborCircuitType != nil {
		i -= len(*m.NeighborCircuitType)
		copy(dAtA[i:], *m.NeighborCircuitType)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.NeighborCircuitType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if m.DisSystemId != nil {
		i -= len(*m.DisSystemId)
		copy(dAtA[i:], *m.DisSystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.DisSystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.Priority != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Priority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.NeighborExtendedCircuitId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.NeighborExtendedCircuitId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.LocalExtendedCircuitId != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.LocalExtendedCircuitId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.NeighborSnpa != nil {
		i -= len(*m.NeighborSnpa)
		copy(dAtA[i:], *m.NeighborSnpa)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.NeighborSnpa)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.SystemId != nil {
		i -= len(*m.SystemId)
		copy(dAtA[i:], *m.SystemId)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SystemId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Af) > 0 {
		for iNdEx := len(m.Af) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Af[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdIsisOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.SafiName != nil {
		i -= len(*m.SafiName)
		copy(dAtA[i:], *m.SafiName)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SafiName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.AfiName != nil {
		i -= len(*m.AfiName)
		copy(dAtA[i:], *m.AfiName)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.AfiName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metric != nil {
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.SafiName != nil {
		i -= len(*m.SafiName)
		copy(dAtA[i:], *m.SafiName)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.SafiName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.AfiName != nil {
		i -= len(*m.AfiName)
		copy(dAtA[i:], *m.AfiName)
		i = encodeVarintRpdIsisOc(dAtA, i, uint64(len(*m.AfiName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintRpdIsisOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovRpdIsisOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstancesIsis) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Protocols != nil {
		l = m.Protocols.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Isis != nil {
		l = m.Isis.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Levels != nil {
		l = m.Levels.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Interfaces != nil {
		l = m.Interfaces.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Level) > 0 {
		for _, e := range m.Level {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LevelNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LevelNumber))
	}
	if m.LinkStateDatabase != nil {
		l = m.LinkStateDatabase.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SystemLevelCounters != nil {
		l = m.SystemLevelCounters.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Lsp) > 0 {
		for _, e := range m.Lsp {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LspId != nil {
		l = len(*m.LspId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Tlvs != nil {
		l = m.Tlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UndefinedTlvs != nil {
		l = m.UndefinedTlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LspId != nil {
		l = len(*m.LspId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.MaximumAreaAddresses != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.MaximumAreaAddresses))
	}
	if m.Version != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Version))
	}
	if m.Version2 != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Version2))
	}
	if m.IdLength != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.IdLength))
	}
	if m.PduType != nil {
		l = len(*m.PduType)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.RemainingLifetime != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.RemainingLifetime))
	}
	if m.SequenceNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.SequenceNumber))
	}
	if m.Checksum != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Checksum))
	}
	if m.PduLength != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.PduLength))
	}
	if m.LspInstallTime != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LspInstallTime))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.IsType != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.IsType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tlv) > 0 {
		for _, e := range m.Tlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AreaAddress != nil {
		l = m.AreaAddress.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Nlpid != nil {
		l = m.Nlpid.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Hostname != nil {
		l = m.Hostname.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4TeRouterId != nil {
		l = m.Ipv4TeRouterId.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4InterfaceAddresses != nil {
		l = m.Ipv4InterfaceAddresses.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv6InterfaceAddresses != nil {
		l = m.Ipv6InterfaceAddresses.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.LspBufferSize != nil {
		l = m.LspBufferSize.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.ExtendedIpv4Reachability != nil {
		l = m.ExtendedIpv4Reachability.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv6Reachability != nil {
		l = m.Ipv6Reachability.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.ExtendedIsReachability != nil {
		l = m.ExtendedIsReachability.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.RouterCapabilities != nil {
		l = m.RouterCapabilities.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4Srlgs != nil {
		l = m.Ipv4Srlgs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Size_ != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Size_))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Nlpid) > 0 {
		for _, s := range m.Nlpid {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Hname != nil {
		l = len(*m.Hname)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TeRouterId != nil {
		l = len(*m.TeRouterId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ipv4Srlg) > 0 {
		for _, e := range m.Ipv4Srlg {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstanceNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.InstanceNumber))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstanceNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.InstanceNumber))
	}
	if m.SystemId != nil {
		l = len(*m.SystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.PsnNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.PsnNumber))
	}
	if m.Ipv4InterfaceAddress != nil {
		l = len(*m.Ipv4InterfaceAddress)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4NeighborAddress != nil {
		l = len(*m.Ipv4NeighborAddress)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if len(m.SrlgValue) > 0 {
		for _, e := range m.SrlgValue {
			n += 2 + sovRpdIsisOc(uint64(e))
		}
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Capability) > 0 {
		for _, e := range m.Capability {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstanceNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.InstanceNumber))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Subtlvs != nil {
		l = m.Subtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UndefinedSubtlvs != nil {
		l = m.UndefinedSubtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstanceNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.InstanceNumber))
	}
	if m.RouterId != nil {
		l = len(*m.RouterId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subtlv) > 0 {
		for _, e := range m.Subtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SegmentRoutingAlgorithms != nil {
		l = m.SegmentRoutingAlgorithms.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SegmentRoutingCapability != nil {
		l = m.SegmentRoutingCapability.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Algorithm) > 0 {
		for _, s := range m.Algorithm {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SrgbDescriptors != nil {
		l = m.SrgbDescriptors.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SrgbDescriptor) > 0 {
		for _, e := range m.SrgbDescriptor {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Range != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Range))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Range != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Range))
	}
	if m.Label != nil {
		l = len(*m.Label)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UndefinedSubtlv) > 0 {
		for _, e := range m.UndefinedSubtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.Length != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Length))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Neighbors != nil {
		l = m.Neighbors.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Neighbor) > 0 {
		for _, e := range m.Neighbor {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemId != nil {
		l = len(*m.SystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Subtlvs != nil {
		l = m.Subtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UndefinedSubtlvs != nil {
		l = m.UndefinedSubtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemId != nil {
		l = len(*m.SystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Metric != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Metric))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subtlv) > 0 {
		for _, e := range m.Subtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4InterfaceAddress != nil {
		l = m.Ipv4InterfaceAddress.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv4NeighborAddress != nil {
		l = m.Ipv4NeighborAddress.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.LinkId != nil {
		l = m.LinkId.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.MaxLinkBandwidth != nil {
		l = m.MaxLinkBandwidth.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.MaxReservableLinkBandwidth != nil {
		l = m.MaxReservableLinkBandwidth.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UnreservedBandwidth != nil {
		l = m.UnreservedBandwidth.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.TeDefaultMetric != nil {
		l = m.TeDefaultMetric.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.BandwidthConstraints != nil {
		l = m.BandwidthConstraints.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AdminGroup != nil {
		l = m.AdminGroup.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AdjacencySids != nil {
		l = m.AdjacencySids.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.LanAdjacencySids != nil {
		l = m.LanAdjacencySids.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv6InterfaceAddress != nil {
		l = m.Ipv6InterfaceAddress.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ipv6NeighborAddress != nil {
		l = m.Ipv6NeighborAddress.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AdminGroup) > 0 {
		for _, e := range m.AdminGroup {
			n += 2 + sovRpdIsisOc(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Local != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Local))
	}
	if m.Remote != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Remote))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Bandwidth != nil {
		l = len(*m.Bandwidth)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Bandwidth != nil {
		l = len(*m.Bandwidth)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SetupPriority) > 0 {
		for _, e := range m.SetupPriority {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Priority != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Priority))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Priority != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Priority))
	}
	if m.Bandwidth != nil {
		l = len(*m.Bandwidth)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Address) > 0 {
		for _, s := range m.Address {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metric != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Metric))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BandwidthConstraint) > 0 {
		for _, e := range m.BandwidthConstraint {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModelId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ModelId))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Constraints != nil {
		l = m.Constraints.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModelId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ModelId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Constraint) > 0 {
		for _, e := range m.Constraint {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConstraintId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ConstraintId))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConstraintId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ConstraintId))
	}
	if m.Bandwidth != nil {
		l = len(*m.Bandwidth)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdjSid != nil {
		l = m.AdjSid.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.Weight != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LanAdjSid != nil {
		l = m.LanAdjSid.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.Weight != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Weight))
	}
	if m.NeighborId != nil {
		l = len(*m.NeighborId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UndefinedSubtlv) > 0 {
		for _, e := range m.UndefinedSubtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.Length != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Length))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefixes != nil {
		l = m.Prefixes.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Prefix) > 0 {
		for _, e := range m.Prefix {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Subtlvs != nil {
		l = m.Subtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UndefinedSubtlvs != nil {
		l = m.UndefinedSubtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UpDown != nil {
		n += 3
	}
	if m.SBit != nil {
		n += 3
	}
	if m.Metric != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Metric))
	}
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subtlv) > 0 {
		for _, e := range m.Subtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Tag != nil {
		l = m.Tag.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.PrefixSids != nil {
		l = m.PrefixSids.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tag32) > 0 {
		for _, e := range m.Tag32 {
			n += 2 + sovRpdIsisOc(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PrefixSid) > 0 {
		for _, e := range m.PrefixSid {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if m.Algorithm != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Algorithm))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UndefinedSubtlv) > 0 {
		for _, e := range m.UndefinedSubtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.Length != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Length))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefixes != nil {
		l = m.Prefixes.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Prefix) > 0 {
		for _, e := range m.Prefix {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Subtlvs != nil {
		l = m.Subtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UndefinedSubtlvs != nil {
		l = m.UndefinedSubtlvs.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Prefix != nil {
		l = len(*m.Prefix)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UpDown != nil {
		n += 3
	}
	if m.XBit != nil {
		n += 3
	}
	if m.SBit != nil {
		n += 3
	}
	if m.Metric != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Metric))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subtlv) > 0 {
		for _, e := range m.Subtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Tag != nil {
		l = m.Tag.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.PrefixSids != nil {
		l = m.PrefixSids.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tag32) > 0 {
		for _, e := range m.Tag32 {
			n += 2 + sovRpdIsisOc(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PrefixSid) > 0 {
		for _, e := range m.PrefixSid {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Value))
	}
	if m.Algorithm != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Algorithm))
	}
	if len(m.Flags) > 0 {
		for _, s := range m.Flags {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UndefinedSubtlv) > 0 {
		for _, e := range m.UndefinedSubtlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.Length != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Length))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UndefinedTlv) > 0 {
		for _, e := range m.UndefinedTlv {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Type))
	}
	if m.Length != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Length))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LevelNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LevelNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CorruptedLsps != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.CorruptedLsps))
	}
	if m.DatabaseOverloads != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.DatabaseOverloads))
	}
	if m.ManualAddressDropFromAreas != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ManualAddressDropFromAreas))
	}
	if m.ExceedMaxSeqNums != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.ExceedMaxSeqNums))
	}
	if m.SeqNumSkips != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.SeqNumSkips))
	}
	if m.OwnLspPurges != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.OwnLspPurges))
	}
	if m.IdLenMismatch != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.IdLenMismatch))
	}
	if m.PartChanges != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.PartChanges))
	}
	if m.MaxAreaAddressMismatches != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.MaxAreaAddressMismatches))
	}
	if m.AuthFails != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AuthFails))
	}
	if m.SpfRuns != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.SpfRuns))
	}
	if m.AuthTypeFails != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AuthTypeFails))
	}
	if m.LspErrors != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LspErrors))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.CircuitCounters != nil {
		l = m.CircuitCounters.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.PacketCounters != nil {
		l = m.PacketCounters.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Levels != nil {
		l = m.Levels.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdjChanges != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AdjChanges))
	}
	if m.InitFails != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.InitFails))
	}
	if m.RejectedAdj != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.RejectedAdj))
	}
	if m.IdFieldLenMismatches != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.IdFieldLenMismatches))
	}
	if m.MaxAreaAddressMismatches != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.MaxAreaAddressMismatches))
	}
	if m.AuthTypeFails != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AuthTypeFails))
	}
	if m.AuthFails != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AuthFails))
	}
	if m.LanDisChanges != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LanDisChanges))
	}
	if m.AdjNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.AdjNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Lsp != nil {
		l = m.Lsp.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Iih != nil {
		l = m.Iih.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Psnp != nil {
		l = m.Psnp.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Csnp != nil {
		l = m.Csnp.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Ish != nil {
		l = m.Ish.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Esh != nil {
		l = m.Esh.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Unknown != nil {
		l = m.Unknown.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Received != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Received))
	}
	if m.Dropped != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Dropped))
	}
	if m.Processed != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Processed))
	}
	if m.Sent != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Sent))
	}
	if m.Retransmit != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Retransmit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Level) > 0 {
		for _, e := range m.Level {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LevelNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LevelNumber))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Adjacencies != nil {
		l = m.Adjacencies.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AfiSafi != nil {
		l = m.AfiSafi.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LevelNumber != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LevelNumber))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Adjacency) > 0 {
		for _, e := range m.Adjacency {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemId != nil {
		l = len(*m.SystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SystemId != nil {
		l = len(*m.SystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.NeighborSnpa != nil {
		l = len(*m.NeighborSnpa)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.LocalExtendedCircuitId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.LocalExtendedCircuitId))
	}
	if m.NeighborExtendedCircuitId != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.NeighborExtendedCircuitId))
	}
	if m.Priority != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Priority))
	}
	if m.DisSystemId != nil {
		l = len(*m.DisSystemId)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.NeighborCircuitType != nil {
		l = len(*m.NeighborCircuitType)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AdjacencyType != nil {
		l = len(*m.AdjacencyType)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.AdjacencyState != nil {
		l = len(*m.AdjacencyState)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.UpTime != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.UpTime))
	}
	if m.MultiTopology != nil {
		n += 3
	}
	if len(m.Topology) > 0 {
		for _, s := range m.Topology {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.RestartSupport != nil {
		n += 3
	}
	if m.RestartSuppress != nil {
		n += 3
	}
	if m.RestartStatus != nil {
		n += 3
	}
	if m.RemainingHoldTime != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.RemainingHoldTime))
	}
	if len(m.AreaAddress) > 0 {
		for _, s := range m.AreaAddress {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if len(m.Nlpid) > 0 {
		for _, s := range m.Nlpid {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if len(m.Ipv4NeighborAddress) > 0 {
		for _, s := range m.Ipv4NeighborAddress {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if len(m.Ipv6NeighborAddress) > 0 {
		for _, s := range m.Ipv6NeighborAddress {
			l = len(s)
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.LanAdjacencyState != nil {
		l = len(*m.LanAdjacencyState)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Af) > 0 {
		for _, e := range m.Af {
			l = e.Size()
			n += 2 + l + sovRpdIsisOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AfiName != nil {
		l = len(*m.AfiName)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SafiName != nil {
		l = len(*m.SafiName)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AfiName != nil {
		l = len(*m.AfiName)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.SafiName != nil {
		l = len(*m.SafiName)
		n += 2 + l + sovRpdIsisOc(uint64(l))
	}
	if m.Metric != nil {
		n += 2 + sovRpdIsisOc(uint64(*m.Metric))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpdIsisOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRpdIsisOc(x uint64) (n int) {
	return sovRpdIsisOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstancesIsis) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_isis: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_isis: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesIsisNetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocols == nil {
				m.Protocols = &NetworkInstancesIsisNetworkInstanceListProtocolsType{}
			}
			if err := m.Protocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: protocol_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: protocol_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Isis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Isis == nil {
				m.Isis = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType{}
			}
			if err := m.Isis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: isis_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: isis_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Levels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Levels == nil {
				m.Levels = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType{}
			}
			if err := m.Levels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interfaces == nil {
				m.Interfaces = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType{}
			}
			if err := m.Interfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: levels_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: levels_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Level = append(m.Level, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList{})
			if err := m.Level[len(m.Level)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: level_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: level_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LevelNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LevelNumber = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkStateDatabase", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LinkStateDatabase == nil {
				m.LinkStateDatabase = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType{}
			}
			if err := m.LinkStateDatabase.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemLevelCounters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SystemLevelCounters == nil {
				m.SystemLevelCounters = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType{}
			}
			if err := m.SystemLevelCounters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: link_state_database_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: link_state_database_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lsp = append(m.Lsp, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList{})
			if err := m.Lsp[len(m.Lsp)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsp_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsp_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LspId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tlvs == nil {
				m.Tlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType{}
			}
			if err := m.Tlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedTlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UndefinedTlvs == nil {
				m.UndefinedTlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType{}
			}
			if err := m.UndefinedTlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LspId = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaximumAreaAddresses", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaximumAreaAddresses = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Version = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version2", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Version2 = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdLength", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdLength = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PduType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PduType = &s
			iNdEx = postIndex
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainingLifetime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RemainingLifetime = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SequenceNumber = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Checksum", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Checksum = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PduLength", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PduLength = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspInstallTime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspInstallTime = &v
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsType", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsType = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tlv = append(m.Tlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList{})
			if err := m.Tlv[len(m.Tlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AreaAddress == nil {
				m.AreaAddress = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType{}
			}
			if err := m.AreaAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nlpid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Nlpid == nil {
				m.Nlpid = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType{}
			}
			if err := m.Nlpid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hostname == nil {
				m.Hostname = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType{}
			}
			if err := m.Hostname.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4TeRouterId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4TeRouterId == nil {
				m.Ipv4TeRouterId = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType{}
			}
			if err := m.Ipv4TeRouterId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 156:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4InterfaceAddresses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4InterfaceAddresses == nil {
				m.Ipv4InterfaceAddresses = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType{}
			}
			if err := m.Ipv4InterfaceAddresses.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 157:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6InterfaceAddresses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6InterfaceAddresses == nil {
				m.Ipv6InterfaceAddresses = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType{}
			}
			if err := m.Ipv6InterfaceAddresses.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 158:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspBufferSize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LspBufferSize == nil {
				m.LspBufferSize = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType{}
			}
			if err := m.LspBufferSize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 159:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedIpv4Reachability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendedIpv4Reachability == nil {
				m.ExtendedIpv4Reachability = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType{}
			}
			if err := m.ExtendedIpv4Reachability.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 160:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6Reachability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6Reachability == nil {
				m.Ipv6Reachability = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType{}
			}
			if err := m.Ipv6Reachability.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 161:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedIsReachability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendedIsReachability == nil {
				m.ExtendedIsReachability = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType{}
			}
			if err := m.ExtendedIsReachability.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 162:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RouterCapabilities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RouterCapabilities == nil {
				m.RouterCapabilities = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType{}
			}
			if err := m.RouterCapabilities.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 163:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Srlgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4Srlgs == nil {
				m.Ipv4Srlgs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType{}
			}
			if err := m.Ipv4Srlgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: area_address_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: area_address_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListAreaAddressTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsp_buffer_size_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsp_buffer_size_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListLspBufferSizeTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Size_ = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: nlpid_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: nlpid_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListNlpidTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nlpid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nlpid = append(m.Nlpid, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: hostname_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: hostname_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListHostnameTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Hname = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_interface_addresses_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_interface_addresses_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4InterfaceAddressesTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_interface_addresses_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_interface_addresses_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6InterfaceAddressesTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_te_router_id_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_te_router_id_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4TeRouterIdTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeRouterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TeRouterId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_srlgs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_srlgs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4Srlg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv4Srlg = append(m.Ipv4Srlg, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList{})
			if err := m.Ipv4Srlg[len(m.Ipv4Srlg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_srlg_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_srlg_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstanceNumber = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv4SrlgsTypeIpv4SrlgListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstanceNumber = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemId = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PsnNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PsnNumber = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4InterfaceAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Ipv4InterfaceAddress = &s
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4NeighborAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Ipv4NeighborAddress = &s
			iNdEx = postIndex
		case 56:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.SrlgValue = append(m.SrlgValue, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.SrlgValue) == 0 {
					m.SrlgValue = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdIsisOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.SrlgValue = append(m.SrlgValue, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field SrlgValue", wireType)
			}
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: router_capabilities_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: router_capabilities_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Capability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Capability = append(m.Capability, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList{})
			if err := m.Capability[len(m.Capability)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: capability_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: capability_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstanceNumber = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subtlvs == nil {
				m.Subtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType{}
			}
			if err := m.Subtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UndefinedSubtlvs == nil {
				m.UndefinedSubtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType{}
			}
			if err := m.UndefinedSubtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstanceNumber = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RouterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RouterId = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtlv = append(m.Subtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList{})
			if err := m.Subtlv[len(m.Subtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentRoutingAlgorithms", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentRoutingAlgorithms == nil {
				m.SegmentRoutingAlgorithms = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType{}
			}
			if err := m.SegmentRoutingAlgorithms.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentRoutingCapability", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentRoutingCapability == nil {
				m.SegmentRoutingCapability = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType{}
			}
			if err := m.SegmentRoutingCapability.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_routing_algorithms_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_routing_algorithms_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingAlgorithmsTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Algorithm", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Algorithm = append(m.Algorithm, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_routing_capability_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_routing_capability_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrgbDescriptors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SrgbDescriptors == nil {
				m.SrgbDescriptors = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType{}
			}
			if err := m.SrgbDescriptors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: srgb_descriptors_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: srgb_descriptors_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrgbDescriptor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrgbDescriptor = append(m.SrgbDescriptor, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList{})
			if err := m.SrgbDescriptor[len(m.SrgbDescriptor)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: srgb_descriptor_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: srgb_descriptor_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Range", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Range = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListSubtlvsTypeSubtlvListSegmentRoutingCapabilityTypeSrgbDescriptorsTypeSrgbDescriptorListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Range", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Range = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Label = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndefinedSubtlv = append(m.UndefinedSubtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList{})
			if err := m.UndefinedSubtlv[len(m.UndefinedSubtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListRouterCapabilitiesTypeCapabilityListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Length = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: extended_is_reachability_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: extended_is_reachability_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Neighbors == nil {
				m.Neighbors = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType{}
			}
			if err := m.Neighbors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbors_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbors_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Neighbor = append(m.Neighbor, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList{})
			if err := m.Neighbor[len(m.Neighbor)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbor_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbor_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subtlvs == nil {
				m.Subtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType{}
			}
			if err := m.Subtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UndefinedSubtlvs == nil {
				m.UndefinedSubtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType{}
			}
			if err := m.UndefinedSubtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemId = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtlv = append(m.Subtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList{})
			if err := m.Subtlv[len(m.Subtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4InterfaceAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4InterfaceAddress == nil {
				m.Ipv4InterfaceAddress = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType{}
			}
			if err := m.Ipv4InterfaceAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4NeighborAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv4NeighborAddress == nil {
				m.Ipv4NeighborAddress = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType{}
			}
			if err := m.Ipv4NeighborAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LinkId == nil {
				m.LinkId = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType{}
			}
			if err := m.LinkId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxLinkBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxLinkBandwidth == nil {
				m.MaxLinkBandwidth = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType{}
			}
			if err := m.MaxLinkBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 156:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxReservableLinkBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxReservableLinkBandwidth == nil {
				m.MaxReservableLinkBandwidth = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType{}
			}
			if err := m.MaxReservableLinkBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 157:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnreservedBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UnreservedBandwidth == nil {
				m.UnreservedBandwidth = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType{}
			}
			if err := m.UnreservedBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 158:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeDefaultMetric", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TeDefaultMetric == nil {
				m.TeDefaultMetric = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType{}
			}
			if err := m.TeDefaultMetric.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 159:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BandwidthConstraints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BandwidthConstraints == nil {
				m.BandwidthConstraints = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType{}
			}
			if err := m.BandwidthConstraints.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 160:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminGroup == nil {
				m.AdminGroup = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType{}
			}
			if err := m.AdminGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 161:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjacencySids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdjacencySids == nil {
				m.AdjacencySids = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType{}
			}
			if err := m.AdjacencySids.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 162:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanAdjacencySids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LanAdjacencySids == nil {
				m.LanAdjacencySids = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType{}
			}
			if err := m.LanAdjacencySids.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 163:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6InterfaceAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6InterfaceAddress == nil {
				m.Ipv6InterfaceAddress = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType{}
			}
			if err := m.Ipv6InterfaceAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 164:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6NeighborAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ipv6NeighborAddress == nil {
				m.Ipv6NeighborAddress = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType{}
			}
			if err := m.Ipv6NeighborAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: admin_group_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: admin_group_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdminGroupTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AdminGroup = append(m.AdminGroup, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AdminGroup) == 0 {
					m.AdminGroup = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdIsisOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AdminGroup = append(m.AdminGroup, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroup", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: link_id_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: link_id_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLinkIdTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Local", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Local = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remote", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Remote = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_interface_address_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_interface_address_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4InterfaceAddressTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv4_neighbor_address_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv4_neighbor_address_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv4NeighborAddressTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: max_link_bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: max_link_bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxLinkBandwidthTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bandwidth = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: max_reservable_link_bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: max_reservable_link_bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListMaxReservableLinkBandwidthTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bandwidth = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: unreserved_bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: unreserved_bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetupPriority", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SetupPriority = append(m.SetupPriority, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList{})
			if err := m.SetupPriority[len(m.SetupPriority)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: setup_priority_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: setup_priority_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Priority = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListUnreservedBandwidthTypeSetupPriorityListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Priority = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bandwidth = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_interface_address_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_interface_address_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6InterfaceAddressTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_neighbor_address_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_neighbor_address_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListIpv6NeighborAddressTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_default_metric_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_default_metric_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListTeDefaultMetricTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_constraints_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_constraints_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BandwidthConstraint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BandwidthConstraint = append(m.BandwidthConstraint, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList{})
			if err := m.BandwidthConstraint[len(m.BandwidthConstraint)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_constraint_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_constraint_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ModelId = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constraints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Constraints == nil {
				m.Constraints = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType{}
			}
			if err := m.Constraints.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ModelId = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: constraints_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: constraints_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Constraint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Constraint = append(m.Constraint, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList{})
			if err := m.Constraint[len(m.Constraint)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: constraint_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: constraint_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConstraintId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConstraintId = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListBandwidthConstraintsTypeBandwidthConstraintListConstraintsTypeConstraintListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConstraintId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConstraintId = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bandwidth = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: adjacency_sids_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: adjacency_sids_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjSid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdjSid == nil {
				m.AdjSid = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType{}
			}
			if err := m.AdjSid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: adj_sid_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: adj_sid_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListAdjacencySidsTypeAdjSidTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lan_adjacency_sids_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lan_adjacency_sids_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanAdjSid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LanAdjSid == nil {
				m.LanAdjSid = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType{}
			}
			if err := m.LanAdjSid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lan_adj_sid_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lan_adj_sid_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListSubtlvsTypeSubtlvListLanAdjacencySidsTypeLanAdjSidTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeighborId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NeighborId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndefinedSubtlv = append(m.UndefinedSubtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList{})
			if err := m.UndefinedSubtlv[len(m.UndefinedSubtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIsReachabilityTypeNeighborsTypeNeighborListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Length = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: extended_ipv4_reachability_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: extended_ipv4_reachability_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefixes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Prefixes == nil {
				m.Prefixes = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType{}
			}
			if err := m.Prefixes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefixes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefixes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefix = append(m.Prefix, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList{})
			if err := m.Prefix[len(m.Prefix)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subtlvs == nil {
				m.Subtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType{}
			}
			if err := m.Subtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UndefinedSubtlvs == nil {
				m.UndefinedSubtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType{}
			}
			if err := m.UndefinedSubtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpDown", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UpDown = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SBit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SBit = &b
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtlv = append(m.Subtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList{})
			if err := m.Subtlv[len(m.Subtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag == nil {
				m.Tag = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType{}
			}
			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrefixSids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PrefixSids == nil {
				m.PrefixSids = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType{}
			}
			if err := m.PrefixSids.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tag_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tag_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Tag32 = append(m.Tag32, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Tag32) == 0 {
					m.Tag32 = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdIsisOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Tag32 = append(m.Tag32, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag32", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_sids_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_sids_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrefixSid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrefixSid = append(m.PrefixSid, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList{})
			if err := m.PrefixSid[len(m.PrefixSid)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_sid_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_sid_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Algorithm", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Algorithm = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndefinedSubtlv = append(m.UndefinedSubtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList{})
			if err := m.UndefinedSubtlv[len(m.UndefinedSubtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListExtendedIpv4ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Length = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ipv6_reachability_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ipv6_reachability_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefixes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Prefixes == nil {
				m.Prefixes = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType{}
			}
			if err := m.Prefixes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefixes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefixes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefix = append(m.Prefix, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList{})
			if err := m.Prefix[len(m.Prefix)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subtlvs == nil {
				m.Subtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType{}
			}
			if err := m.Subtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlvs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UndefinedSubtlvs == nil {
				m.UndefinedSubtlvs = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType{}
			}
			if err := m.UndefinedSubtlvs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Prefix = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpDown", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UpDown = &b
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field XBit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.XBit = &b
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SBit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SBit = &b
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subtlv = append(m.Subtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList{})
			if err := m.Subtlv[len(m.Subtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tag == nil {
				m.Tag = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType{}
			}
			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrefixSids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PrefixSids == nil {
				m.PrefixSids = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType{}
			}
			if err := m.PrefixSids.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tag_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tag_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListTagTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Tag32 = append(m.Tag32, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdIsisOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdIsisOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Tag32) == 0 {
					m.Tag32 = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdIsisOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Tag32 = append(m.Tag32, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag32", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_sids_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_sids_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrefixSid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrefixSid = append(m.PrefixSid, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList{})
			if err := m.PrefixSid[len(m.PrefixSid)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: prefix_sid_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: prefix_sid_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListSubtlvsTypeSubtlvListPrefixSidsTypePrefixSidListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Algorithm", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Algorithm = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Flags = append(m.Flags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedSubtlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndefinedSubtlv = append(m.UndefinedSubtlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList{})
			if err := m.UndefinedSubtlv[len(m.UndefinedSubtlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_subtlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_subtlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListTlvsTypeTlvListIpv6ReachabilityTypePrefixesTypePrefixListUndefinedSubtlvsTypeUndefinedSubtlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Length = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_tlvs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_tlvs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UndefinedTlv", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UndefinedTlv = append(m.UndefinedTlv, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList{})
			if err := m.UndefinedTlv[len(m.UndefinedTlv)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: undefined_tlv_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: undefined_tlv_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListLinkStateDatabaseTypeLspListUndefinedTlvsTypeUndefinedTlvListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Length", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Length = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LevelNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LevelNumber = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_level_counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_level_counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeLevelsTypeLevelListSystemLevelCountersTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorruptedLsps", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CorruptedLsps = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DatabaseOverloads", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DatabaseOverloads = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ManualAddressDropFromAreas", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ManualAddressDropFromAreas = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceedMaxSeqNums", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExceedMaxSeqNums = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeqNumSkips", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SeqNumSkips = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnLspPurges", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OwnLspPurges = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdLenMismatch", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdLenMismatch = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartChanges", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PartChanges = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAreaAddressMismatches", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAreaAddressMismatches = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthFails", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthFails = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpfRuns", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SpfRuns = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthTypeFails", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthTypeFails = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspErrors", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspErrors = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CircuitCounters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CircuitCounters == nil {
				m.CircuitCounters = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType{}
			}
			if err := m.CircuitCounters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketCounters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PacketCounters == nil {
				m.PacketCounters = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType{}
			}
			if err := m.PacketCounters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Levels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Levels == nil {
				m.Levels = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType{}
			}
			if err := m.Levels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: circuit_counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: circuit_counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListCircuitCountersTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjChanges", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdjChanges = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitFails", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitFails = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RejectedAdj", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RejectedAdj = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdFieldLenMismatches", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IdFieldLenMismatches = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAreaAddressMismatches", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAreaAddressMismatches = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthTypeFails", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthTypeFails = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthFails", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthFails = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanDisChanges", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LanDisChanges = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdjNumber = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: packet_counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: packet_counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lsp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Lsp == nil {
				m.Lsp = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType{}
			}
			if err := m.Lsp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iih", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Iih == nil {
				m.Iih = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType{}
			}
			if err := m.Iih.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Psnp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Psnp == nil {
				m.Psnp = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType{}
			}
			if err := m.Psnp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Csnp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Csnp == nil {
				m.Csnp = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType{}
			}
			if err := m.Csnp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ish", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ish == nil {
				m.Ish = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType{}
			}
			if err := m.Ish.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 156:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Esh", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Esh == nil {
				m.Esh = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType{}
			}
			if err := m.Esh.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 157:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unknown", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unknown == nil {
				m.Unknown = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType{}
			}
			if err := m.Unknown.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeLspTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: iih_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: iih_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIihTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ish_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ish_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeIshTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: esh_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: esh_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeEshTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: psnp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: psnp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypePsnpTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: csnp_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: csnp_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeCsnpTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: unknown_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: unknown_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListPacketCountersTypeUnknownTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Received", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Received = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dropped", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dropped = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Processed = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sent", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sent = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Retransmit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Retransmit = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: levels_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: levels_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Level = append(m.Level, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList{})
			if err := m.Level[len(m.Level)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: level_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: level_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LevelNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LevelNumber = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adjacencies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Adjacencies == nil {
				m.Adjacencies = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType{}
			}
			if err := m.Adjacencies.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AfiSafi", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AfiSafi == nil {
				m.AfiSafi = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType{}
			}
			if err := m.AfiSafi.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LevelNumber", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LevelNumber = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: adjacencies_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: adjacencies_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adjacency", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Adjacency = append(m.Adjacency, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList{})
			if err := m.Adjacency[len(m.Adjacency)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: adjacency_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: adjacency_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAdjacenciesTypeAdjacencyListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SystemId = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeighborSnpa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NeighborSnpa = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalExtendedCircuitId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalExtendedCircuitId = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeighborExtendedCircuitId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NeighborExtendedCircuitId = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Priority = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisSystemId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisSystemId = &s
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeighborCircuitType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NeighborCircuitType = &s
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjacencyType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdjacencyType = &s
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjacencyState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdjacencyState = &s
			iNdEx = postIndex
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpTime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpTime = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiTopology", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.MultiTopology = &b
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topology", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topology = append(m.Topology, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestartSupport", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RestartSupport = &b
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestartSuppress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RestartSuppress = &b
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestartStatus", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RestartStatus = &b
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemainingHoldTime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RemainingHoldTime = &v
		case 67:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreaAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AreaAddress = append(m.AreaAddress, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 68:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nlpid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nlpid = append(m.Nlpid, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 69:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv4NeighborAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv4NeighborAddress = append(m.Ipv4NeighborAddress, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ipv6NeighborAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ipv6NeighborAddress = append(m.Ipv6NeighborAddress, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 71:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LanAdjacencyState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LanAdjacencyState = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: afi_safi_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: afi_safi_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Af", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Af = append(m.Af, &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList{})
			if err := m.Af[len(m.Af)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: af_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: af_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AfiName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AfiName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SafiName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SafiName = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesIsisNetworkInstanceListProtocolsTypeProtocolTypeIsisTypeInterfacesTypeInterfaceListLevelsTypeLevelListAfiSafiTypeAfListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AfiName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AfiName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SafiName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SafiName = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdIsisOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdIsisOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRpdIsisOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRpdIsisOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdIsisOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRpdIsisOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRpdIsisOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRpdIsisOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRpdIsisOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRpdIsisOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRpdIsisOc = fmt.Errorf("proto: unexpected end of group")
)
