// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpd_rsvp_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstancesRsvp struct {
	NetworkInstance      []*NetworkInstancesRsvpNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *NetworkInstancesRsvp) Reset()         { *m = NetworkInstancesRsvp{} }
func (m *NetworkInstancesRsvp) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesRsvp) ProtoMessage()    {}
func (*NetworkInstancesRsvp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0}
}
func (m *NetworkInstancesRsvp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvp.Merge(m, src)
}
func (m *NetworkInstancesRsvp) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvp) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvp.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvp proto.InternalMessageInfo

func (m *NetworkInstancesRsvp) GetNetworkInstance() []*NetworkInstancesRsvpNetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceList struct {
	Name                 *string                                          `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Mpls                 *NetworkInstancesRsvpNetworkInstanceListMplsType `protobuf:"bytes,151,opt,name=mpls" json:"mpls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceList) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesRsvpNetworkInstanceList) ProtoMessage()    {}
func (*NetworkInstancesRsvpNetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceList) GetMpls() *NetworkInstancesRsvpNetworkInstanceListMplsType {
	if m != nil {
		return m.Mpls
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsType struct {
	SignalingProtocols   *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType `protobuf:"bytes,151,opt,name=signaling_protocols,json=signalingProtocols" json:"signaling_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                 `json:"-"`
	XXX_sizecache        int32                                                                  `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsType) ProtoMessage() {}
func (*NetworkInstancesRsvpNetworkInstanceListMplsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) GetSignalingProtocols() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType {
	if m != nil {
		return m.SignalingProtocols
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType struct {
	RsvpTe               *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType `protobuf:"bytes,151,opt,name=rsvp_te,json=rsvpTe" json:"rsvp_te,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) ProtoMessage() {}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) GetRsvpTe() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType {
	if m != nil {
		return m.RsvpTe
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType struct {
	Sessions             *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType            `protobuf:"bytes,151,opt,name=sessions" json:"sessions,omitempty"`
	Neighbors            *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType           `protobuf:"bytes,152,opt,name=neighbors" json:"neighbors,omitempty"`
	Global               *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType              `protobuf:"bytes,153,opt,name=global" json:"global,omitempty"`
	InterfaceAttributes  *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType `protobuf:"bytes,154,opt,name=interface_attributes,json=interfaceAttributes" json:"interface_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                   `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) GetSessions() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) GetNeighbors() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) GetGlobal() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) GetInterfaceAttributes() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType {
	if m != nil {
		return m.InterfaceAttributes
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType struct {
	Session              []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList `protobuf:"bytes,151,rep,name=session" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                     `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) GetSession() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList {
	if m != nil {
		return m.Session
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList struct {
	LocalIndex           *uint64                                                                                                                         `protobuf:"varint,51,opt,name=local_index,json=localIndex" json:"local_index,omitempty"`
	Name                 *string                                                                                                                         `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	LspId                *uint32                                                                                                                         `protobuf:"varint,53,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	Subcode              *string                                                                                                                         `protobuf:"bytes,54,opt,name=subcode" json:"subcode,omitempty"`
	RecordRouteObjects   *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType   `protobuf:"bytes,151,opt,name=record_route_objects,json=recordRouteObjects" json:"record_route_objects,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType                `protobuf:"bytes,153,opt,name=state" json:"state,omitempty"`
	ExplicitRouteObjects *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType `protobuf:"bytes,152,opt,name=explicit_route_objects,json=explicitRouteObjects" json:"explicit_route_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetLocalIndex() uint64 {
	if m != nil && m.LocalIndex != nil {
		return *m.LocalIndex
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetLspId() uint32 {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetSubcode() string {
	if m != nil && m.Subcode != nil {
		return *m.Subcode
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetRecordRouteObjects() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType {
	if m != nil {
		return m.RecordRouteObjects
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) GetExplicitRouteObjects() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType {
	if m != nil {
		return m.ExplicitRouteObjects
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType struct {
	RecordRouteObject    []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList `protobuf:"bytes,151,rep,name=record_route_object,json=recordRouteObject" json:"record_route_object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                                                `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) GetRecordRouteObject() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList {
	if m != nil {
		return m.RecordRouteObject
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList struct {
	Index                *uint32                                                                                                                                                     `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType struct {
	Index                *uint32  `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	Address              *string  `protobuf:"bytes,52,opt,name=address" json:"address,omitempty"`
	ReportedLabel        *string  `protobuf:"bytes,53,opt,name=reported_label,json=reportedLabel" json:"reported_label,omitempty"`
	ReportedFlags        *uint32  `protobuf:"varint,54,opt,name=reported_flags,json=reportedFlags" json:"reported_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) GetReportedLabel() string {
	if m != nil && m.ReportedLabel != nil {
		return *m.ReportedLabel
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) GetReportedFlags() uint32 {
	if m != nil && m.ReportedFlags != nil {
		return *m.ReportedFlags
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType struct {
	LocalIndex           *uint64                                                                                                                         `protobuf:"varint,51,opt,name=local_index,json=localIndex" json:"local_index,omitempty"`
	SourceAddress        *string                                                                                                                         `protobuf:"bytes,52,opt,name=source_address,json=sourceAddress" json:"source_address,omitempty"`
	DestinationAddress   *string                                                                                                                         `protobuf:"bytes,53,opt,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	TunnelId             *uint32                                                                                                                         `protobuf:"varint,54,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	LspId                *uint32                                                                                                                         `protobuf:"varint,55,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	SessionName          *string                                                                                                                         `protobuf:"bytes,56,opt,name=session_name,json=sessionName" json:"session_name,omitempty"`
	Status               *string                                                                                                                         `protobuf:"bytes,57,opt,name=status" json:"status,omitempty"`
	Type                 *string                                                                                                                         `protobuf:"bytes,59,opt,name=type" json:"type,omitempty"`
	ProtectionRequested  *string                                                                                                                         `protobuf:"bytes,58,opt,name=protection_requested,json=protectionRequested" json:"protection_requested,omitempty"`
	LabelIn              *string                                                                                                                         `protobuf:"bytes,60,opt,name=label_in,json=labelIn" json:"label_in,omitempty"`
	LabelOut             *string                                                                                                                         `protobuf:"bytes,61,opt,name=label_out,json=labelOut" json:"label_out,omitempty"`
	SenderTspec          *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType `protobuf:"bytes,151,opt,name=sender_tspec,json=senderTspec" json:"sender_tspec,omitempty"`
	NotifyStatus         *string                                                                                                                         `protobuf:"bytes,62,opt,name=notify_status,json=notifyStatus" json:"notify_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetLocalIndex() uint64 {
	if m != nil && m.LocalIndex != nil {
		return *m.LocalIndex
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetSourceAddress() string {
	if m != nil && m.SourceAddress != nil {
		return *m.SourceAddress
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetDestinationAddress() string {
	if m != nil && m.DestinationAddress != nil {
		return *m.DestinationAddress
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetTunnelId() uint32 {
	if m != nil && m.TunnelId != nil {
		return *m.TunnelId
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetLspId() uint32 {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetSessionName() string {
	if m != nil && m.SessionName != nil {
		return *m.SessionName
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetProtectionRequested() string {
	if m != nil && m.ProtectionRequested != nil {
		return *m.ProtectionRequested
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetLabelIn() string {
	if m != nil && m.LabelIn != nil {
		return *m.LabelIn
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetLabelOut() string {
	if m != nil && m.LabelOut != nil {
		return *m.LabelOut
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetSenderTspec() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType {
	if m != nil {
		return m.SenderTspec
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) GetNotifyStatus() string {
	if m != nil && m.NotifyStatus != nil {
		return *m.NotifyStatus
	}
	return ""
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType struct {
	Rate                 *string  `protobuf:"bytes,51,opt,name=rate" json:"rate,omitempty"`
	Size_                *string  `protobuf:"bytes,52,opt,name=size" json:"size,omitempty"`
	PeakDataRate         *string  `protobuf:"bytes,53,opt,name=peak_data_rate,json=peakDataRate" json:"peak_data_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) GetRate() string {
	if m != nil && m.Rate != nil {
		return *m.Rate
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) GetSize_() string {
	if m != nil && m.Size_ != nil {
		return *m.Size_
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) GetPeakDataRate() string {
	if m != nil && m.PeakDataRate != nil {
		return *m.PeakDataRate
	}
	return ""
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType struct {
	ExplicitRouteObject  []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList `protobuf:"bytes,151,rep,name=explicit_route_object,json=explicitRouteObject" json:"explicit_route_object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                                                    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 2}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) GetExplicitRouteObject() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList {
	if m != nil {
		return m.ExplicitRouteObject
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList struct {
	Index                *uint32                                                                                                                                                         `protobuf:"varint,52,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 2, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType struct {
	Index                *uint32  `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	Address              *string  `protobuf:"bytes,52,opt,name=address" json:"address,omitempty"`
	HopType              *string  `protobuf:"bytes,53,opt,name=hop_type,json=hopType" json:"hop_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetHopType() string {
	if m != nil && m.HopType != nil {
		return *m.HopType
	}
	return ""
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType struct {
	Neighbor             []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList `protobuf:"bytes,151,rep,name=neighbor" json:"neighbor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                       `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) GetNeighbor() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList {
	if m != nil {
		return m.Neighbor
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList struct {
	Address              *string                                                                                                            `protobuf:"bytes,51,opt,name=address" json:"address,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                              `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType struct {
	Address              *string  `protobuf:"bytes,51,opt,name=address" json:"address,omitempty"`
	DetectedInterface    *string  `protobuf:"bytes,52,opt,name=detected_interface,json=detectedInterface" json:"detected_interface,omitempty"`
	NeighborStatus       *string  `protobuf:"bytes,53,opt,name=neighbor_status,json=neighborStatus" json:"neighbor_status,omitempty"`
	RefreshReduction     *bool    `protobuf:"varint,54,opt,name=refresh_reduction,json=refreshReduction" json:"refresh_reduction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) GetDetectedInterface() string {
	if m != nil && m.DetectedInterface != nil {
		return *m.DetectedInterface
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) GetNeighborStatus() string {
	if m != nil && m.NeighborStatus != nil {
		return *m.NeighborStatus
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) GetRefreshReduction() bool {
	if m != nil && m.RefreshReduction != nil {
		return *m.RefreshReduction
	}
	return false
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType struct {
	GracefulRestart      *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType `protobuf:"bytes,151,opt,name=graceful_restart,json=gracefulRestart" json:"graceful_restart,omitempty"`
	SoftPreemption       *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType  `protobuf:"bytes,152,opt,name=soft_preemption,json=softPreemption" json:"soft_preemption,omitempty"`
	Hellos               *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType          `protobuf:"bytes,153,opt,name=hellos" json:"hellos,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType           `protobuf:"bytes,154,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                         `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) GetGracefulRestart() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType {
	if m != nil {
		return m.GracefulRestart
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) GetSoftPreemption() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType {
	if m != nil {
		return m.SoftPreemption
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) GetHellos() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType {
	if m != nil {
		return m.Hellos
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType struct {
	Enable               *bool    `protobuf:"varint,51,opt,name=enable" json:"enable,omitempty"`
	RestartTime          *uint32  `protobuf:"varint,52,opt,name=restart_time,json=restartTime" json:"restart_time,omitempty"`
	RecoveryTime         *uint32  `protobuf:"varint,53,opt,name=recovery_time,json=recoveryTime" json:"recovery_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) GetRestartTime() uint32 {
	if m != nil && m.RestartTime != nil {
		return *m.RestartTime
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) GetRecoveryTime() uint32 {
	if m != nil && m.RecoveryTime != nil {
		return *m.RecoveryTime
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType struct {
	Enable                *bool    `protobuf:"varint,51,opt,name=enable" json:"enable,omitempty"`
	SoftPreemptionTimeout *uint32  `protobuf:"varint,52,opt,name=soft_preemption_timeout,json=softPreemptionTimeout" json:"soft_preemption_timeout,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 1, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) GetSoftPreemptionTimeout() uint32 {
	if m != nil && m.SoftPreemptionTimeout != nil {
		return *m.SoftPreemptionTimeout
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                         `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 2}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType struct {
	HelloInterval        *uint32  `protobuf:"varint,51,opt,name=hello_interval,json=helloInterval" json:"hello_interval,omitempty"`
	RefreshReduction     *bool    `protobuf:"varint,52,opt,name=refresh_reduction,json=refreshReduction" json:"refresh_reduction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 2, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) GetHelloInterval() uint32 {
	if m != nil && m.HelloInterval != nil {
		return *m.HelloInterval
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) GetRefreshReduction() bool {
	if m != nil && m.RefreshReduction != nil {
		return *m.RefreshReduction
	}
	return false
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType struct {
	Counters             *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType      `protobuf:"bytes,152,opt,name=counters" json:"counters,omitempty"`
	ErrorCounters        *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType `protobuf:"bytes,151,opt,name=error_counters,json=errorCounters" json:"error_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 3}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) GetCounters() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) GetErrorCounters() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType {
	if m != nil {
		return m.ErrorCounters
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType struct {
	PathTimeouts                *uint64  `protobuf:"varint,51,opt,name=path_timeouts,json=pathTimeouts" json:"path_timeouts,omitempty"`
	ReservationTimeouts         *uint64  `protobuf:"varint,52,opt,name=reservation_timeouts,json=reservationTimeouts" json:"reservation_timeouts,omitempty"`
	RateLimitedMessages         *uint64  `protobuf:"varint,53,opt,name=rate_limited_messages,json=rateLimitedMessages" json:"rate_limited_messages,omitempty"`
	InPathMessages              *uint64  `protobuf:"varint,54,opt,name=in_path_messages,json=inPathMessages" json:"in_path_messages,omitempty"`
	InPathErrorMessages         *uint64  `protobuf:"varint,55,opt,name=in_path_error_messages,json=inPathErrorMessages" json:"in_path_error_messages,omitempty"`
	InPathTearMessages          *uint64  `protobuf:"varint,56,opt,name=in_path_tear_messages,json=inPathTearMessages" json:"in_path_tear_messages,omitempty"`
	InReservationMessages       *uint64  `protobuf:"varint,57,opt,name=in_reservation_messages,json=inReservationMessages" json:"in_reservation_messages,omitempty"`
	InReservationErrorMessages  *uint64  `protobuf:"varint,58,opt,name=in_reservation_error_messages,json=inReservationErrorMessages" json:"in_reservation_error_messages,omitempty"`
	InReservationTearMessages   *uint64  `protobuf:"varint,59,opt,name=in_reservation_tear_messages,json=inReservationTearMessages" json:"in_reservation_tear_messages,omitempty"`
	InHelloMessages             *uint64  `protobuf:"varint,60,opt,name=in_hello_messages,json=inHelloMessages" json:"in_hello_messages,omitempty"`
	InSrefreshMessages          *uint64  `protobuf:"varint,61,opt,name=in_srefresh_messages,json=inSrefreshMessages" json:"in_srefresh_messages,omitempty"`
	InAckMessages               *uint64  `protobuf:"varint,62,opt,name=in_ack_messages,json=inAckMessages" json:"in_ack_messages,omitempty"`
	OutPathMessages             *uint64  `protobuf:"varint,63,opt,name=out_path_messages,json=outPathMessages" json:"out_path_messages,omitempty"`
	OutPathErrorMessages        *uint64  `protobuf:"varint,64,opt,name=out_path_error_messages,json=outPathErrorMessages" json:"out_path_error_messages,omitempty"`
	OutPathTearMessages         *uint64  `protobuf:"varint,65,opt,name=out_path_tear_messages,json=outPathTearMessages" json:"out_path_tear_messages,omitempty"`
	OutReservationMessages      *uint64  `protobuf:"varint,66,opt,name=out_reservation_messages,json=outReservationMessages" json:"out_reservation_messages,omitempty"`
	OutReservationErrorMessages *uint64  `protobuf:"varint,67,opt,name=out_reservation_error_messages,json=outReservationErrorMessages" json:"out_reservation_error_messages,omitempty"`
	OutReservationTearMessages  *uint64  `protobuf:"varint,68,opt,name=out_reservation_tear_messages,json=outReservationTearMessages" json:"out_reservation_tear_messages,omitempty"`
	OutHelloMessages            *uint64  `protobuf:"varint,69,opt,name=out_hello_messages,json=outHelloMessages" json:"out_hello_messages,omitempty"`
	OutSrefreshMessages         *uint64  `protobuf:"varint,70,opt,name=out_srefresh_messages,json=outSrefreshMessages" json:"out_srefresh_messages,omitempty"`
	OutAckMessages              *uint64  `protobuf:"varint,71,opt,name=out_ack_messages,json=outAckMessages" json:"out_ack_messages,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 3, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetPathTimeouts() uint64 {
	if m != nil && m.PathTimeouts != nil {
		return *m.PathTimeouts
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetReservationTimeouts() uint64 {
	if m != nil && m.ReservationTimeouts != nil {
		return *m.ReservationTimeouts
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetRateLimitedMessages() uint64 {
	if m != nil && m.RateLimitedMessages != nil {
		return *m.RateLimitedMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInPathMessages() uint64 {
	if m != nil && m.InPathMessages != nil {
		return *m.InPathMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInPathErrorMessages() uint64 {
	if m != nil && m.InPathErrorMessages != nil {
		return *m.InPathErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInPathTearMessages() uint64 {
	if m != nil && m.InPathTearMessages != nil {
		return *m.InPathTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInReservationMessages() uint64 {
	if m != nil && m.InReservationMessages != nil {
		return *m.InReservationMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInReservationErrorMessages() uint64 {
	if m != nil && m.InReservationErrorMessages != nil {
		return *m.InReservationErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInReservationTearMessages() uint64 {
	if m != nil && m.InReservationTearMessages != nil {
		return *m.InReservationTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInHelloMessages() uint64 {
	if m != nil && m.InHelloMessages != nil {
		return *m.InHelloMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInSrefreshMessages() uint64 {
	if m != nil && m.InSrefreshMessages != nil {
		return *m.InSrefreshMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetInAckMessages() uint64 {
	if m != nil && m.InAckMessages != nil {
		return *m.InAckMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutPathMessages() uint64 {
	if m != nil && m.OutPathMessages != nil {
		return *m.OutPathMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutPathErrorMessages() uint64 {
	if m != nil && m.OutPathErrorMessages != nil {
		return *m.OutPathErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutPathTearMessages() uint64 {
	if m != nil && m.OutPathTearMessages != nil {
		return *m.OutPathTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutReservationMessages() uint64 {
	if m != nil && m.OutReservationMessages != nil {
		return *m.OutReservationMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutReservationErrorMessages() uint64 {
	if m != nil && m.OutReservationErrorMessages != nil {
		return *m.OutReservationErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutReservationTearMessages() uint64 {
	if m != nil && m.OutReservationTearMessages != nil {
		return *m.OutReservationTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutHelloMessages() uint64 {
	if m != nil && m.OutHelloMessages != nil {
		return *m.OutHelloMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutSrefreshMessages() uint64 {
	if m != nil && m.OutSrefreshMessages != nil {
		return *m.OutSrefreshMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) GetOutAckMessages() uint64 {
	if m != nil && m.OutAckMessages != nil {
		return *m.OutAckMessages
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType struct {
	BadPacketLength      *uint64  `protobuf:"varint,51,opt,name=bad_packet_length,json=badPacketLength" json:"bad_packet_length,omitempty"`
	BadPacketVersion     *uint64  `protobuf:"varint,52,opt,name=bad_packet_version,json=badPacketVersion" json:"bad_packet_version,omitempty"`
	AuthenticationFail   *uint64  `protobuf:"varint,53,opt,name=authentication_fail,json=authenticationFail" json:"authentication_fail,omitempty"`
	BadChecksum          *uint64  `protobuf:"varint,54,opt,name=bad_checksum,json=badChecksum" json:"bad_checksum,omitempty"`
	BadPacketFormat      *uint64  `protobuf:"varint,55,opt,name=bad_packet_format,json=badPacketFormat" json:"bad_packet_format,omitempty"`
	RecvPktDisabledIntf  *uint64  `protobuf:"varint,56,opt,name=recv_pkt_disabled_intf,json=recvPktDisabledIntf" json:"recv_pkt_disabled_intf,omitempty"`
	StateTimeout         *uint64  `protobuf:"varint,57,opt,name=state_timeout,json=stateTimeout" json:"state_timeout,omitempty"`
	MessageOutOfOrder    *uint64  `protobuf:"varint,58,opt,name=message_out_of_order,json=messageOutOfOrder" json:"message_out_of_order,omitempty"`
	UnknownAck           *uint64  `protobuf:"varint,59,opt,name=unknown_ack,json=unknownAck" json:"unknown_ack,omitempty"`
	UnknownNack          *uint64  `protobuf:"varint,60,opt,name=unknown_nack,json=unknownNack" json:"unknown_nack,omitempty"`
	ReceivedNack         *uint64  `protobuf:"varint,61,opt,name=received_nack,json=receivedNack" json:"received_nack,omitempty"`
	SendFailure          *uint64  `protobuf:"varint,62,opt,name=send_failure,json=sendFailure" json:"send_failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 2, 3, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetBadPacketLength() uint64 {
	if m != nil && m.BadPacketLength != nil {
		return *m.BadPacketLength
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetBadPacketVersion() uint64 {
	if m != nil && m.BadPacketVersion != nil {
		return *m.BadPacketVersion
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetAuthenticationFail() uint64 {
	if m != nil && m.AuthenticationFail != nil {
		return *m.AuthenticationFail
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetBadChecksum() uint64 {
	if m != nil && m.BadChecksum != nil {
		return *m.BadChecksum
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetBadPacketFormat() uint64 {
	if m != nil && m.BadPacketFormat != nil {
		return *m.BadPacketFormat
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetRecvPktDisabledIntf() uint64 {
	if m != nil && m.RecvPktDisabledIntf != nil {
		return *m.RecvPktDisabledIntf
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetStateTimeout() uint64 {
	if m != nil && m.StateTimeout != nil {
		return *m.StateTimeout
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetMessageOutOfOrder() uint64 {
	if m != nil && m.MessageOutOfOrder != nil {
		return *m.MessageOutOfOrder
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetUnknownAck() uint64 {
	if m != nil && m.UnknownAck != nil {
		return *m.UnknownAck
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetUnknownNack() uint64 {
	if m != nil && m.UnknownNack != nil {
		return *m.UnknownNack
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetReceivedNack() uint64 {
	if m != nil && m.ReceivedNack != nil {
		return *m.ReceivedNack
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) GetSendFailure() uint64 {
	if m != nil && m.SendFailure != nil {
		return *m.SendFailure
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType struct {
	Interface            []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) GetInterface() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList struct {
	InterfaceId           *string                                                                                                                                       `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	State                 *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType                 `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	InterfaceRef          *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType          `protobuf:"bytes,152,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	BandwidthReservations *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType `protobuf:"bytes,153,opt,name=bandwidth_reservations,json=bandwidthReservations" json:"bandwidth_reservations,omitempty"`
	Hellos                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType                `protobuf:"bytes,154,opt,name=hellos" json:"hellos,omitempty"`
	Authentication        *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType        `protobuf:"bytes,155,opt,name=authentication" json:"authentication,omitempty"`
	Subscription          *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType          `protobuf:"bytes,156,opt,name=subscription" json:"subscription,omitempty"`
	Protection            *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType            `protobuf:"bytes,157,opt,name=protection" json:"protection,omitempty"`
	AdminStatus           *string                                                                                                                                       `protobuf:"bytes,52,opt,name=admin_status,json=adminStatus" json:"admin_status,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                                                                                                                      `json:"-"`
	XXX_unrecognized      []byte                                                                                                                                        `json:"-"`
	XXX_sizecache         int32                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetInterfaceRef() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetBandwidthReservations() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType {
	if m != nil {
		return m.BandwidthReservations
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetHellos() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType {
	if m != nil {
		return m.Hellos
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetAuthentication() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType {
	if m != nil {
		return m.Authentication
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetSubscription() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetProtection() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType {
	if m != nil {
		return m.Protection
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) GetAdminStatus() string {
	if m != nil && m.AdminStatus != nil {
		return *m.AdminStatus
	}
	return ""
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType struct {
	InterfaceId          *string                                                                                                                                        `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	Counters             *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType      `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	ErrorCounters        *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType `protobuf:"bytes,152,opt,name=error_counters,json=errorCounters" json:"error_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                                                          `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) GetCounters() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) GetErrorCounters() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType {
	if m != nil {
		return m.ErrorCounters
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType struct {
	InPathMessages              *uint64  `protobuf:"varint,51,opt,name=in_path_messages,json=inPathMessages" json:"in_path_messages,omitempty"`
	InPathErrorMessages         *uint64  `protobuf:"varint,52,opt,name=in_path_error_messages,json=inPathErrorMessages" json:"in_path_error_messages,omitempty"`
	InPathTearMessages          *uint64  `protobuf:"varint,53,opt,name=in_path_tear_messages,json=inPathTearMessages" json:"in_path_tear_messages,omitempty"`
	InReservationMessages       *uint64  `protobuf:"varint,54,opt,name=in_reservation_messages,json=inReservationMessages" json:"in_reservation_messages,omitempty"`
	InReservationErrorMessages  *uint64  `protobuf:"varint,55,opt,name=in_reservation_error_messages,json=inReservationErrorMessages" json:"in_reservation_error_messages,omitempty"`
	InReservationTearMessages   *uint64  `protobuf:"varint,56,opt,name=in_reservation_tear_messages,json=inReservationTearMessages" json:"in_reservation_tear_messages,omitempty"`
	InHelloMessages             *uint64  `protobuf:"varint,57,opt,name=in_hello_messages,json=inHelloMessages" json:"in_hello_messages,omitempty"`
	InSrefreshMessages          *uint64  `protobuf:"varint,58,opt,name=in_srefresh_messages,json=inSrefreshMessages" json:"in_srefresh_messages,omitempty"`
	InAckMessages               *uint64  `protobuf:"varint,59,opt,name=in_ack_messages,json=inAckMessages" json:"in_ack_messages,omitempty"`
	OutPathMessages             *uint64  `protobuf:"varint,60,opt,name=out_path_messages,json=outPathMessages" json:"out_path_messages,omitempty"`
	OutPathErrorMessages        *uint64  `protobuf:"varint,61,opt,name=out_path_error_messages,json=outPathErrorMessages" json:"out_path_error_messages,omitempty"`
	OutPathTearMessages         *uint64  `protobuf:"varint,62,opt,name=out_path_tear_messages,json=outPathTearMessages" json:"out_path_tear_messages,omitempty"`
	OutReservationMessages      *uint64  `protobuf:"varint,63,opt,name=out_reservation_messages,json=outReservationMessages" json:"out_reservation_messages,omitempty"`
	OutReservationErrorMessages *uint64  `protobuf:"varint,64,opt,name=out_reservation_error_messages,json=outReservationErrorMessages" json:"out_reservation_error_messages,omitempty"`
	OutReservationTearMessages  *uint64  `protobuf:"varint,65,opt,name=out_reservation_tear_messages,json=outReservationTearMessages" json:"out_reservation_tear_messages,omitempty"`
	OutHelloMessages            *uint64  `protobuf:"varint,66,opt,name=out_hello_messages,json=outHelloMessages" json:"out_hello_messages,omitempty"`
	OutSrefreshMessages         *uint64  `protobuf:"varint,67,opt,name=out_srefresh_messages,json=outSrefreshMessages" json:"out_srefresh_messages,omitempty"`
	OutAckMessages              *uint64  `protobuf:"varint,68,opt,name=out_ack_messages,json=outAckMessages" json:"out_ack_messages,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInPathMessages() uint64 {
	if m != nil && m.InPathMessages != nil {
		return *m.InPathMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInPathErrorMessages() uint64 {
	if m != nil && m.InPathErrorMessages != nil {
		return *m.InPathErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInPathTearMessages() uint64 {
	if m != nil && m.InPathTearMessages != nil {
		return *m.InPathTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInReservationMessages() uint64 {
	if m != nil && m.InReservationMessages != nil {
		return *m.InReservationMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInReservationErrorMessages() uint64 {
	if m != nil && m.InReservationErrorMessages != nil {
		return *m.InReservationErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInReservationTearMessages() uint64 {
	if m != nil && m.InReservationTearMessages != nil {
		return *m.InReservationTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInHelloMessages() uint64 {
	if m != nil && m.InHelloMessages != nil {
		return *m.InHelloMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInSrefreshMessages() uint64 {
	if m != nil && m.InSrefreshMessages != nil {
		return *m.InSrefreshMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetInAckMessages() uint64 {
	if m != nil && m.InAckMessages != nil {
		return *m.InAckMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutPathMessages() uint64 {
	if m != nil && m.OutPathMessages != nil {
		return *m.OutPathMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutPathErrorMessages() uint64 {
	if m != nil && m.OutPathErrorMessages != nil {
		return *m.OutPathErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutPathTearMessages() uint64 {
	if m != nil && m.OutPathTearMessages != nil {
		return *m.OutPathTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutReservationMessages() uint64 {
	if m != nil && m.OutReservationMessages != nil {
		return *m.OutReservationMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutReservationErrorMessages() uint64 {
	if m != nil && m.OutReservationErrorMessages != nil {
		return *m.OutReservationErrorMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutReservationTearMessages() uint64 {
	if m != nil && m.OutReservationTearMessages != nil {
		return *m.OutReservationTearMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutHelloMessages() uint64 {
	if m != nil && m.OutHelloMessages != nil {
		return *m.OutHelloMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutSrefreshMessages() uint64 {
	if m != nil && m.OutSrefreshMessages != nil {
		return *m.OutSrefreshMessages
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) GetOutAckMessages() uint64 {
	if m != nil && m.OutAckMessages != nil {
		return *m.OutAckMessages
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType struct {
	BadPacketLength      *uint64  `protobuf:"varint,51,opt,name=bad_packet_length,json=badPacketLength" json:"bad_packet_length,omitempty"`
	BadPacketVersion     *uint64  `protobuf:"varint,52,opt,name=bad_packet_version,json=badPacketVersion" json:"bad_packet_version,omitempty"`
	AuthenticationFail   *uint64  `protobuf:"varint,53,opt,name=authentication_fail,json=authenticationFail" json:"authentication_fail,omitempty"`
	BadChecksum          *uint64  `protobuf:"varint,54,opt,name=bad_checksum,json=badChecksum" json:"bad_checksum,omitempty"`
	BadPacketFormat      *uint64  `protobuf:"varint,55,opt,name=bad_packet_format,json=badPacketFormat" json:"bad_packet_format,omitempty"`
	RecvPktDisabledIntf  *uint64  `protobuf:"varint,56,opt,name=recv_pkt_disabled_intf,json=recvPktDisabledIntf" json:"recv_pkt_disabled_intf,omitempty"`
	StateTimeout         *uint64  `protobuf:"varint,57,opt,name=state_timeout,json=stateTimeout" json:"state_timeout,omitempty"`
	MessageOutOfOrder    *uint64  `protobuf:"varint,58,opt,name=message_out_of_order,json=messageOutOfOrder" json:"message_out_of_order,omitempty"`
	UnknownAck           *uint64  `protobuf:"varint,59,opt,name=unknown_ack,json=unknownAck" json:"unknown_ack,omitempty"`
	UnknownNack          *uint64  `protobuf:"varint,60,opt,name=unknown_nack,json=unknownNack" json:"unknown_nack,omitempty"`
	ReceivedNack         *uint64  `protobuf:"varint,61,opt,name=received_nack,json=receivedNack" json:"received_nack,omitempty"`
	SendFailure          *uint64  `protobuf:"varint,62,opt,name=send_failure,json=sendFailure" json:"send_failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 0, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetBadPacketLength() uint64 {
	if m != nil && m.BadPacketLength != nil {
		return *m.BadPacketLength
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetBadPacketVersion() uint64 {
	if m != nil && m.BadPacketVersion != nil {
		return *m.BadPacketVersion
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetAuthenticationFail() uint64 {
	if m != nil && m.AuthenticationFail != nil {
		return *m.AuthenticationFail
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetBadChecksum() uint64 {
	if m != nil && m.BadChecksum != nil {
		return *m.BadChecksum
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetBadPacketFormat() uint64 {
	if m != nil && m.BadPacketFormat != nil {
		return *m.BadPacketFormat
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetRecvPktDisabledIntf() uint64 {
	if m != nil && m.RecvPktDisabledIntf != nil {
		return *m.RecvPktDisabledIntf
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetStateTimeout() uint64 {
	if m != nil && m.StateTimeout != nil {
		return *m.StateTimeout
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetMessageOutOfOrder() uint64 {
	if m != nil && m.MessageOutOfOrder != nil {
		return *m.MessageOutOfOrder
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetUnknownAck() uint64 {
	if m != nil && m.UnknownAck != nil {
		return *m.UnknownAck
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetUnknownNack() uint64 {
	if m != nil && m.UnknownNack != nil {
		return *m.UnknownNack
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetReceivedNack() uint64 {
	if m != nil && m.ReceivedNack != nil {
		return *m.ReceivedNack
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) GetSendFailure() uint64 {
	if m != nil && m.SendFailure != nil {
		return *m.SendFailure
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 1}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType struct {
	Interface            *string  `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	Subinterface         *uint32  `protobuf:"varint,52,opt,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 1, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) GetSubinterface() uint32 {
	if m != nil && m.Subinterface != nil {
		return *m.Subinterface
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType struct {
	BandwidthReservation []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList `protobuf:"bytes,151,rep,name=bandwidth_reservation,json=bandwidthReservation" json:"bandwidth_reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 2}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) GetBandwidthReservation() []*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList {
	if m != nil {
		return m.BandwidthReservation
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList struct {
	Priority             *string                                                                                                                                                                        `protobuf:"bytes,51,opt,name=priority" json:"priority,omitempty"`
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                          `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 2, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) GetPriority() string {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType struct {
	Priority                *string  `protobuf:"bytes,51,opt,name=priority" json:"priority,omitempty"`
	AvailableBandwidth      *uint64  `protobuf:"varint,52,opt,name=available_bandwidth,json=availableBandwidth" json:"available_bandwidth,omitempty"`
	ReservedBandwidth       *uint64  `protobuf:"varint,53,opt,name=reserved_bandwidth,json=reservedBandwidth" json:"reserved_bandwidth,omitempty"`
	ActiveReservationsCount *uint64  `protobuf:"varint,54,opt,name=active_reservations_count,json=activeReservationsCount" json:"active_reservations_count,omitempty"`
	HighwaterMark           *uint64  `protobuf:"varint,55,opt,name=highwater_mark,json=highwaterMark" json:"highwater_mark,omitempty"`
	StaticBandwidth         *uint64  `protobuf:"varint,61,opt,name=static_bandwidth,json=staticBandwidth" json:"static_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 2, 0, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetPriority() string {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetAvailableBandwidth() uint64 {
	if m != nil && m.AvailableBandwidth != nil {
		return *m.AvailableBandwidth
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetReservedBandwidth() uint64 {
	if m != nil && m.ReservedBandwidth != nil {
		return *m.ReservedBandwidth
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetActiveReservationsCount() uint64 {
	if m != nil && m.ActiveReservationsCount != nil {
		return *m.ActiveReservationsCount
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetHighwaterMark() uint64 {
	if m != nil && m.HighwaterMark != nil {
		return *m.HighwaterMark
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) GetStaticBandwidth() uint64 {
	if m != nil && m.StaticBandwidth != nil {
		return *m.StaticBandwidth
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 3}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType struct {
	HelloInterval        *uint32  `protobuf:"varint,51,opt,name=hello_interval,json=helloInterval" json:"hello_interval,omitempty"`
	RefreshReduction     *bool    `protobuf:"varint,52,opt,name=refresh_reduction,json=refreshReduction" json:"refresh_reduction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 3, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) GetHelloInterval() uint32 {
	if m != nil && m.HelloInterval != nil {
		return *m.HelloInterval
	}
	return 0
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) GetRefreshReduction() bool {
	if m != nil && m.RefreshReduction != nil {
		return *m.RefreshReduction
	}
	return false
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                           `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 4}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType struct {
	Enable               *bool    `protobuf:"varint,51,opt,name=enable" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 4, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) GetEnable() bool {
	if m != nil && m.Enable != nil {
		return *m.Enable
	}
	return false
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                         `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 5}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType struct {
	Subscription         *uint32  `protobuf:"varint,51,opt,name=subscription" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 5, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) GetSubscription() uint32 {
	if m != nil && m.Subscription != nil {
		return *m.Subscription
	}
	return 0
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType struct {
	State                *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 6}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) GetState() *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType struct {
	LinkProtectionStyleRequested *string  `protobuf:"bytes,51,opt,name=link_protection_style_requested,json=linkProtectionStyleRequested" json:"link_protection_style_requested,omitempty"`
	BypassOptimizeInterval       *uint32  `protobuf:"varint,52,opt,name=bypass_optimize_interval,json=bypassOptimizeInterval" json:"bypass_optimize_interval,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) Reset() {
	*m = NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType{}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b08ea7d8b2450f76, []int{0, 0, 0, 0, 0, 3, 0, 6, 0}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) GetLinkProtectionStyleRequested() string {
	if m != nil && m.LinkProtectionStyleRequested != nil {
		return *m.LinkProtectionStyleRequested
	}
	return ""
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) GetBypassOptimizeInterval() uint32 {
	if m != nil && m.BypassOptimizeInterval != nil {
		return *m.BypassOptimizeInterval
	}
	return 0
}

var E_JnprNetworkInstancesRsvpExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstancesRsvp)(nil),
	Field:         68,
	Name:          "jnpr_network_instances_rsvp_ext",
	Tag:           "bytes,68,opt,name=jnpr_network_instances_rsvp_ext",
	Filename:      "rpd_rsvp_oc.proto",
}

func init() {
	proto.RegisterType((*NetworkInstancesRsvp)(nil), "network_instances_rsvp")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceList)(nil), "network_instances_rsvp.network_instance_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.record_route_objects_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.record_route_objects_type.record_route_object_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.record_route_objects_type.record_route_object_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.state_type.sender_tspec_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.explicit_route_objects_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.explicit_route_objects_type.explicit_route_object_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.sessions_type.session_list.explicit_route_objects_type.explicit_route_object_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.neighbors_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.neighbors_type.neighbor_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.neighbors_type.neighbor_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.graceful_restart_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.graceful_restart_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.soft_preemption_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.soft_preemption_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.hellos_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.hellos_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.state_type.counters_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.global_type.state_type.error_counters_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.state_type.counters_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.state_type.error_counters_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.interface_ref_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.interface_ref_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.bandwidth_reservations_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.bandwidth_reservations_type.bandwidth_reservation_list")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.bandwidth_reservations_type.bandwidth_reservation_list.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.hellos_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.hellos_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.authentication_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.authentication_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.subscription_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.subscription_type.state_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.protection_type")
	proto.RegisterType((*NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType)(nil), "network_instances_rsvp.network_instance_list.mpls_type.signaling_protocols_type.rsvp_te_type.interface_attributes_type.interface_list.protection_type.state_type")
	proto.RegisterExtension(E_JnprNetworkInstancesRsvpExt)
}

func init() { proto.RegisterFile("rpd_rsvp_oc.proto", fileDescriptor_b08ea7d8b2450f76) }

var fileDescriptor_b08ea7d8b2450f76 = []byte{
	// 2870 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5b, 0x5b, 0x6c, 0x1d, 0x47,
	0x19, 0xd6, 0xba, 0x8e, 0xe3, 0xfc, 0xf6, 0xf1, 0x65, 0x7c, 0xc9, 0xf1, 0xba, 0x4d, 0x9a, 0xd2,
	0x16, 0x03, 0xcd, 0x71, 0x9b, 0xa4, 0x49, 0x9a, 0x5e, 0x9d, 0x1b, 0x18, 0xa5, 0x89, 0x75, 0x12,
	0x81, 0x40, 0xa0, 0xed, 0x9c, 0xdd, 0x39, 0xe7, 0x8c, 0xcf, 0x9e, 0xdd, 0x65, 0x67, 0x8e, 0x13,
	0xf7, 0x01, 0x50, 0x0b, 0x55, 0x69, 0x05, 0x12, 0x94, 0xb6, 0xe9, 0x4d, 0xd0, 0x96, 0x72, 0x0b,
	0x12, 0xe2, 0x01, 0x54, 0x5a, 0x82, 0x78, 0xa8, 0x50, 0x91, 0x50, 0x85, 0x2a, 0xf1, 0x84, 0x2a,
	0x55, 0x95, 0x10, 0xbc, 0xf1, 0xd2, 0xb7, 0x4a, 0x15, 0x9a, 0xcb, 0x5e, 0xbd, 0xae, 0x62, 0xa7,
	0xb1, 0x4f, 0xa4, 0xbe, 0x79, 0xff, 0xcb, 0xcc, 0x37, 0xff, 0xcc, 0x7c, 0x33, 0xdf, 0xee, 0x31,
	0x8c, 0x86, 0x81, 0x63, 0x85, 0x6c, 0x29, 0xb0, 0x7c, 0xbb, 0x12, 0x84, 0x3e, 0xf7, 0xcd, 0x31,
	0x4e, 0x5c, 0xd2, 0x26, 0x3c, 0x5c, 0xb6, 0xb8, 0x1f, 0x28, 0xe3, 0x0d, 0xef, 0xbb, 0x30, 0xe9,
	0x11, 0x7e, 0xd6, 0x0f, 0x5b, 0x16, 0xf5, 0x18, 0xc7, 0x9e, 0x4d, 0x98, 0x4c, 0x44, 0x5f, 0x81,
	0x91, 0xbc, 0xa7, 0xfc, 0xb4, 0x71, 0xfd, 0x35, 0x33, 0x03, 0x7b, 0x76, 0x57, 0x8a, 0x73, 0x56,
	0x98, 0x2d, 0x97, 0x32, 0x5e, 0x1d, 0xd6, 0xe6, 0x79, 0x6d, 0x35, 0x3f, 0x6c, 0xc1, 0x44, 0x61,
	0x28, 0x9a, 0x82, 0x5e, 0x0f, 0xb7, 0x49, 0x79, 0xef, 0xf5, 0xc6, 0xcc, 0xb6, 0xc3, 0x5b, 0x1e,
	0xba, 0xaf, 0xa7, 0xdf, 0xa8, 0x4a, 0x13, 0x3a, 0x01, 0xbd, 0xed, 0xc0, 0x65, 0x02, 0x83, 0x31,
	0x33, 0xb0, 0xe7, 0xc0, 0x9a, 0x30, 0x54, 0x44, 0xaa, 0xc5, 0x97, 0x03, 0x52, 0x95, 0xad, 0x98,
	0x1f, 0x2c, 0xc2, 0xb6, 0xd8, 0x86, 0x1e, 0x32, 0x60, 0x8c, 0xd1, 0x86, 0x87, 0x5d, 0xea, 0x35,
	0x2c, 0x59, 0x1a, 0xdb, 0x4f, 0xfa, 0x5a, 0x58, 0x67, 0x5f, 0x95, 0x82, 0x36, 0x15, 0x08, 0x14,
	0x7b, 0x16, 0x22, 0x87, 0xf9, 0x5f, 0x0a, 0xe5, 0xd5, 0x12, 0xd0, 0x59, 0xd8, 0x2a, 0xa7, 0x93,
	0x93, 0x08, 0xd4, 0xd7, 0x3f, 0x6e, 0x50, 0x15, 0xdd, 0x81, 0x42, 0xd8, 0x27, 0x9e, 0xce, 0x10,
	0xf3, 0xed, 0x26, 0x0c, 0xa6, 0x1d, 0xe8, 0x51, 0x03, 0xfa, 0x19, 0x61, 0x8c, 0xfa, 0x5e, 0x5c,
	0xa0, 0xd6, 0x15, 0xc5, 0x52, 0x89, 0xba, 0x53, 0xc8, 0xe2, 0xde, 0xd1, 0xe3, 0x06, 0x6c, 0xf3,
	0x08, 0x6d, 0x34, 0x6b, 0x7e, 0xc8, 0xca, 0xe7, 0x15, 0x16, 0xf7, 0xca, 0x62, 0x89, 0xfb, 0x53,
	0x60, 0x92, 0xfe, 0xc5, 0x22, 0xea, 0x6b, 0xb8, 0x7e, 0x0d, 0xbb, 0xe5, 0x67, 0x14, 0x14, 0x7a,
	0x65, 0xa1, 0xa8, 0xce, 0xf4, 0x74, 0xa9, 0x07, 0x74, 0xc1, 0x80, 0x71, 0xea, 0x71, 0x12, 0xd6,
	0xb1, 0x4d, 0x2c, 0xcc, 0x79, 0x48, 0x6b, 0x1d, 0x4e, 0x58, 0xf9, 0x59, 0x05, 0xe9, 0xec, 0x95,
	0x85, 0x54, 0xd4, 0xb5, 0x02, 0x38, 0x16, 0xbb, 0xe6, 0x62, 0x8f, 0xf9, 0xfc, 0x24, 0x94, 0x32,
	0x93, 0x8b, 0x9e, 0x30, 0x60, 0xab, 0xb6, 0x44, 0x6c, 0x73, 0x6e, 0x03, 0x17, 0x57, 0xf4, 0xa4,
	0x88, 0x2b, 0x42, 0x62, 0xbe, 0x3f, 0x0e, 0x83, 0x69, 0x0f, 0xba, 0x19, 0x06, 0x5c, 0xdf, 0xc6,
	0xae, 0x45, 0x3d, 0x87, 0x9c, 0x93, 0x74, 0xd5, 0x1b, 0xd1, 0x15, 0x48, 0xcf, 0xbc, 0x70, 0x20,
	0xa4, 0xf9, 0x6c, 0x9f, 0xe0, 0x33, 0x4d, 0x64, 0x13, 0xd0, 0xe7, 0xb2, 0xc0, 0xa2, 0x4e, 0xf9,
	0xf6, 0xeb, 0x8d, 0x99, 0x52, 0x75, 0x8b, 0xcb, 0x82, 0x79, 0x07, 0x95, 0x61, 0x2b, 0xeb, 0xd4,
	0x6c, 0xdf, 0x21, 0xe5, 0xfd, 0x32, 0x3a, 0x7a, 0x44, 0x7f, 0x35, 0x60, 0x3c, 0x24, 0xb6, 0x1f,
	0x3a, 0x56, 0xe8, 0x77, 0x38, 0xb1, 0xfc, 0xda, 0x22, 0xb1, 0x79, 0xbc, 0xfb, 0x7e, 0x64, 0x6c,
	0x56, 0x85, 0x2a, 0x45, 0xb0, 0x34, 0xc3, 0x29, 0x57, 0x55, 0x78, 0x4e, 0x29, 0x07, 0x7a, 0xce,
	0x80, 0x2d, 0x8c, 0x63, 0x4e, 0xa2, 0x0d, 0xf2, 0xf0, 0xe6, 0x21, 0x97, 0x38, 0x14, 0x54, 0x85,
	0x09, 0xfd, 0xdd, 0x80, 0x49, 0x72, 0x2e, 0x70, 0xa9, 0x4d, 0x79, 0xae, 0xd0, 0x9a, 0x5a, 0x7e,
	0xbc, 0x79, 0x70, 0x8b, 0x81, 0x29, 0xfc, 0xe3, 0x91, 0x33, 0x5d, 0x6c, 0xf3, 0x89, 0x2d, 0x30,
	0xb5, 0xea, 0xf4, 0xa0, 0x77, 0x0c, 0x18, 0x2b, 0xf0, 0x46, 0x7b, 0xee, 0x42, 0x17, 0x2e, 0xa9,
	0x22, 0x8f, 0xda, 0xa7, 0xa3, 0x2b, 0xd6, 0x9a, 0xf9, 0xe4, 0x35, 0x50, 0x5e, 0x2d, 0x1e, 0x4d,
	0xc3, 0x96, 0x64, 0xdf, 0x96, 0xa2, 0x7d, 0xab, 0x6c, 0xe8, 0xad, 0x78, 0x91, 0xea, 0xed, 0xf5,
	0x87, 0xab, 0xa9, 0x16, 0x2b, 0xd7, 0xb5, 0xf9, 0x98, 0x01, 0x90, 0x58, 0xd1, 0x78, 0x66, 0xf0,
	0xd1, 0xa8, 0xcb, 0xb0, 0x15, 0x3b, 0x4e, 0x48, 0x18, 0xd3, 0x5c, 0x15, 0x3d, 0xa2, 0x9b, 0x60,
	0x28, 0x24, 0x81, 0x1f, 0x72, 0xe2, 0x58, 0x2e, 0xae, 0x11, 0x57, 0xd2, 0xd6, 0xb6, 0x6a, 0x29,
	0xb2, 0x9e, 0x10, 0xc6, 0x4c, 0x58, 0xdd, 0xc5, 0x0d, 0x26, 0x59, 0xac, 0x94, 0x84, 0x1d, 0x17,
	0x46, 0xf3, 0xd5, 0x2d, 0x19, 0x30, 0x3b, 0x0b, 0x78, 0x34, 0x43, 0xa0, 0x37, 0xc1, 0x10, 0xf3,
	0x3b, 0xa1, 0x38, 0x50, 0x32, 0xf0, 0x4a, 0xca, 0x3a, 0xa7, 0x41, 0xce, 0xc2, 0x98, 0x43, 0x18,
	0xa7, 0x1e, 0xe6, 0xa2, 0x78, 0x51, 0xac, 0x42, 0x8a, 0x52, 0xae, 0x28, 0x61, 0x1a, 0xb6, 0xf1,
	0x8e, 0xe7, 0x11, 0x57, 0xf0, 0xb0, 0x42, 0xda, 0xaf, 0x0c, 0xf3, 0x4e, 0x8a, 0xa1, 0x0f, 0xa4,
	0x19, 0x7a, 0x57, 0x72, 0x08, 0x48, 0x52, 0x3f, 0x28, 0x5b, 0x1f, 0xd0, 0xb6, 0x93, 0x82, 0xdb,
	0x27, 0xa1, 0x4f, 0x8c, 0xae, 0xc3, 0xca, 0x77, 0x48, 0xa7, 0x7e, 0x12, 0xe7, 0x80, 0x18, 0x6f,
	0xf9, 0x4e, 0x75, 0x0e, 0xc8, 0xb1, 0xdf, 0x06, 0xe3, 0x62, 0x59, 0x10, 0x5b, 0x42, 0x0e, 0xc9,
	0x37, 0x3a, 0x84, 0x71, 0xe2, 0x94, 0x0f, 0xc9, 0x98, 0xb1, 0xc4, 0x57, 0x8d, 0x5c, 0x68, 0x0a,
	0xfa, 0xe5, 0x14, 0x58, 0xd4, 0x2b, 0xdf, 0xa5, 0xa6, 0x49, 0x3e, 0xcf, 0x7b, 0x62, 0x40, 0xca,
	0xe5, 0x77, 0x78, 0xf9, 0x6e, 0xe9, 0x53, 0xb1, 0xa7, 0x3a, 0x1c, 0xbd, 0x66, 0x08, 0xe8, 0x9e,
	0x43, 0x42, 0x8b, 0xb3, 0x80, 0xd8, 0xd1, 0xd2, 0x7e, 0xb2, 0x1b, 0xf8, 0xb7, 0x92, 0x46, 0xa6,
	0x56, 0xee, 0x80, 0x32, 0x9d, 0x11, 0x16, 0xf4, 0x29, 0x28, 0x79, 0x3e, 0xa7, 0xf5, 0x65, 0x4b,
	0x97, 0xf6, 0x1e, 0x39, 0xba, 0x41, 0x65, 0x3c, 0x2d, 0x6d, 0x26, 0x86, 0xd1, 0x15, 0xcd, 0x88,
	0xaa, 0x87, 0x62, 0x23, 0xef, 0x55, 0x55, 0x17, 0x7f, 0x0b, 0x1b, 0xa3, 0x0f, 0xc6, 0x27, 0xb2,
	0xf8, 0x1b, 0xdd, 0x08, 0x43, 0x01, 0xc1, 0x2d, 0xcb, 0xc1, 0x1c, 0x5b, 0x32, 0x43, 0x2d, 0x9c,
	0x41, 0x61, 0x3d, 0x8a, 0x39, 0xae, 0x8a, 0x7d, 0xf4, 0xbf, 0x5e, 0x98, 0xfe, 0x08, 0x1a, 0x46,
	0xff, 0x36, 0x60, 0xa2, 0xd0, 0x1f, 0x91, 0xea, 0x6f, 0xbb, 0xf2, 0xf8, 0x28, 0xf6, 0x29, 0x62,
	0x1d, 0x2b, 0x38, 0x59, 0xcc, 0xff, 0xf4, 0x80, 0xb9, 0x7a, 0x4e, 0x42, 0xae, 0xfb, 0x0a, 0xc8,
	0xf5, 0xed, 0x3c, 0xb9, 0xbe, 0x76, 0xb5, 0xd5, 0xa4, 0x80, 0x60, 0xbf, 0x7c, 0x59, 0xfc, 0x3a,
	0x05, 0xfd, 0x4d, 0x3f, 0x90, 0xb9, 0x7a, 0xd9, 0x6d, 0x6d, 0xfa, 0xc1, 0x99, 0xe5, 0x80, 0x98,
	0x17, 0x7a, 0x61, 0x28, 0xab, 0x37, 0xd0, 0xd3, 0x06, 0xf4, 0x47, 0xa6, 0x68, 0x5d, 0x3d, 0xb8,
	0x91, 0x8a, 0x27, 0x7e, 0x54, 0x2b, 0x24, 0x06, 0x63, 0x7e, 0xd8, 0x03, 0xa5, 0x8c, 0x0f, 0xed,
	0x4c, 0xc6, 0x9c, 0xd1, 0xf3, 0xf1, 0xd0, 0x5f, 0xc8, 0xaf, 0x86, 0xef, 0x1a, 0x9b, 0x37, 0x94,
	0x82, 0x89, 0xbd, 0x90, 0x3d, 0x39, 0xcb, 0xb9, 0xf1, 0x24, 0x03, 0xd9, 0x0d, 0xc8, 0x21, 0x82,
	0xad, 0x89, 0x63, 0xc5, 0x3a, 0x47, 0x4f, 0xf4, 0x68, 0xe4, 0x99, 0x8f, 0x1c, 0xe8, 0xd3, 0x30,
	0x1c, 0x77, 0xad, 0x39, 0x4d, 0xcd, 0x7c, 0x3c, 0xdb, 0x8a, 0xd5, 0xd0, 0xe7, 0x60, 0x34, 0x24,
	0xf5, 0x90, 0xb0, 0xa6, 0x15, 0x12, 0xa7, 0x23, 0x4f, 0x03, 0x79, 0x5a, 0xf5, 0x57, 0x47, 0xb4,
	0xa3, 0x1a, 0xd9, 0xcd, 0x17, 0xa7, 0x61, 0x20, 0x25, 0x09, 0x85, 0x14, 0x1c, 0x69, 0x84, 0xd8,
	0x26, 0xf5, 0x8e, 0x6b, 0x85, 0x84, 0x71, 0x1c, 0xf2, 0xa8, 0xd0, 0xdf, 0xda, 0x30, 0x65, 0x5a,
	0xc9, 0x43, 0x50, 0x15, 0x1e, 0x8e, 0xcc, 0x55, 0x65, 0x45, 0xbf, 0x34, 0x60, 0x98, 0xf9, 0x75,
	0x6e, 0x05, 0x21, 0x21, 0xed, 0x40, 0x8e, 0x54, 0x5f, 0xbb, 0xbf, 0xb9, 0x71, 0x60, 0x73, 0x08,
	0x14, 0xd6, 0x21, 0x61, 0x5d, 0x88, 0x8d, 0xe8, 0x07, 0x06, 0xf4, 0x35, 0x89, 0xeb, 0xfa, 0x2c,
	0xd2, 0x31, 0x9d, 0x8d, 0x43, 0xa8, 0x3a, 0xd6, 0xa2, 0x5f, 0x3d, 0xa0, 0xc7, 0xe3, 0x7d, 0xa4,
	0x55, 0x3e, 0xdf, 0xc0, 0x8a, 0xad, 0xd8, 0x35, 0xbf, 0xee, 0x81, 0x89, 0xc2, 0x49, 0x47, 0x2f,
	0xe5, 0xf7, 0xfb, 0x63, 0xc6, 0x26, 0xaf, 0xc3, 0x02, 0xf8, 0x6e, 0x66, 0xcf, 0x4f, 0x42, 0x1f,
	0xf1, 0x70, 0xcd, 0x55, 0x97, 0x88, 0xfe, 0xaa, 0x7e, 0x12, 0x77, 0xc1, 0xb8, 0x1d, 0xaa, 0x05,
	0x7e, 0xa9, 0x3a, 0xa0, 0x6d, 0x67, 0x68, 0x9b, 0x88, 0x7b, 0x8b, 0xb8, 0xa5, 0x2f, 0x91, 0x70,
	0x59, 0xc5, 0x28, 0xb9, 0x3f, 0x18, 0x19, 0x45, 0x90, 0x79, 0xbe, 0x07, 0xc6, 0x8b, 0x16, 0x1d,
	0x7a, 0x31, 0x5f, 0xab, 0xef, 0x19, 0x9b, 0xbb, 0x0d, 0x0a, 0x4a, 0xf5, 0xb5, 0x4b, 0x2a, 0xd5,
	0x7e, 0xd8, 0xbe, 0xa2, 0x3d, 0xda, 0x26, 0xe2, 0x9e, 0xaa, 0xaa, 0x36, 0x91, 0xdd, 0x5f, 0x67,
	0x94, 0xd3, 0x7c, 0xac, 0x07, 0x06, 0x52, 0xab, 0x1d, 0x9d, 0xcf, 0x57, 0xe4, 0xdb, 0xc6, 0xa6,
	0x6c, 0xbb, 0x82, 0x42, 0x3c, 0x90, 0x29, 0xc4, 0x4d, 0x30, 0x24, 0xc3, 0xd5, 0x51, 0xb0, 0x84,
	0x5d, 0x7d, 0x15, 0x28, 0x49, 0xeb, 0xbc, 0x36, 0x16, 0x93, 0xfb, 0xbe, 0x55, 0xc8, 0xfd, 0x8d,
	0xe1, 0x4c, 0x17, 0x3f, 0x35, 0xa0, 0xdf, 0xf6, 0x3b, 0xa2, 0xa9, 0xf8, 0xed, 0xc4, 0x43, 0xc6,
	0x66, 0xec, 0xfa, 0x4a, 0x04, 0x43, 0xbf, 0x9c, 0x8d, 0x1e, 0xd1, 0xef, 0x0c, 0x18, 0x22, 0x61,
	0xe8, 0x87, 0x56, 0x0c, 0x54, 0xcf, 0xdb, 0xa3, 0x9b, 0x03, 0x34, 0x0b, 0x46, 0xc1, 0x2d, 0x49,
	0xe3, 0x11, 0x6d, 0x33, 0xff, 0xd9, 0x0f, 0xa5, 0x4c, 0x80, 0xd8, 0xc4, 0x01, 0xe6, 0xcd, 0x68,
	0xc5, 0x32, 0x2d, 0x51, 0x07, 0x85, 0x51, 0x2f, 0x54, 0x26, 0x94, 0x5c, 0x48, 0x98, 0x98, 0xd5,
	0xf4, 0xea, 0x56, 0x37, 0xbd, 0xde, 0xea, 0x58, 0xca, 0x17, 0xa7, 0xec, 0x81, 0x09, 0x21, 0x34,
	0x2c, 0x97, 0xb6, 0xa9, 0xb8, 0x35, 0xb4, 0x09, 0x63, 0xb8, 0x41, 0xd4, 0x45, 0x40, 0xe4, 0x60,
	0x4e, 0x4e, 0x28, 0xdf, 0xfd, 0xda, 0x85, 0x66, 0x60, 0x84, 0x7a, 0x96, 0x84, 0x13, 0x87, 0xef,
	0x97, 0xe1, 0x43, 0xd4, 0x5b, 0xc0, 0xbc, 0x19, 0x47, 0xee, 0x85, 0xc9, 0x28, 0x52, 0x8d, 0x3a,
	0x8e, 0x3f, 0xa0, 0x9a, 0x57, 0xf1, 0xc7, 0x84, 0x2f, 0x4e, 0xba, 0x0d, 0x26, 0xa2, 0x24, 0x4e,
	0x70, 0x2a, 0xe7, 0xa0, 0xcc, 0x41, 0x2a, 0xe7, 0x0c, 0xc1, 0x49, 0xca, 0x7e, 0xd8, 0x4e, 0x85,
	0x74, 0x4d, 0xc6, 0x1e, 0x27, 0xdd, 0x21, 0x93, 0x26, 0xa8, 0x57, 0x4d, 0xbc, 0x71, 0xde, 0x1c,
	0x5c, 0x97, 0xcb, 0xcb, 0xc1, 0x3c, 0x24, 0xb3, 0xcd, 0x4c, 0x76, 0x16, 0xed, 0xbd, 0x70, 0x6d,
	0xae, 0x89, 0x2c, 0xe8, 0x3b, 0x65, 0x0b, 0x53, 0x99, 0x16, 0x32, 0xd8, 0x3f, 0x0b, 0xa3, 0xd4,
	0xb3, 0xd4, 0x46, 0x8d, 0xb3, 0xee, 0x92, 0x59, 0xc3, 0xd4, 0xfb, 0x82, 0xb0, 0xc7, 0xb1, 0xb7,
	0xc2, 0x38, 0xf5, 0x2c, 0x16, 0x6d, 0xd7, 0x38, 0xfc, 0xee, 0xa8, 0x32, 0xa7, 0xb5, 0x2b, 0xce,
	0xb8, 0x19, 0x86, 0xa9, 0x67, 0x61, 0xbb, 0x95, 0x04, 0xdf, 0x23, 0x83, 0x4b, 0xd4, 0x9b, 0xb3,
	0x5b, 0x69, 0x14, 0x7e, 0x87, 0xe7, 0x26, 0xf5, 0x5e, 0x85, 0xc2, 0xef, 0xf0, 0xcc, 0xac, 0xde,
	0x0e, 0xdb, 0xe3, 0xd8, 0x5c, 0xbd, 0xee, 0x93, 0x19, 0xe3, 0x3a, 0x23, 0x5b, 0xa9, 0xbd, 0x30,
	0x19, 0xa7, 0x65, 0x6b, 0x34, 0xa7, 0x16, 0x83, 0xce, 0xca, 0x54, 0xe7, 0x20, 0x94, 0x45, 0x52,
	0xe1, 0xd4, 0x1e, 0x96, 0x69, 0xa2, 0xd1, 0xa2, 0xb9, 0x3d, 0x02, 0x3b, 0xf2, 0x99, 0x39, 0xb0,
	0x47, 0x64, 0xfe, 0x74, 0x36, 0x3f, 0x8b, 0x79, 0x0e, 0xae, 0xcb, 0x37, 0x92, 0x85, 0x7e, 0x54,
	0x2d, 0x90, 0x6c, 0x1b, 0x99, 0x11, 0xdc, 0x02, 0x48, 0x34, 0x91, 0x9b, 0xe0, 0x63, 0x32, 0x6f,
	0xc4, 0xef, 0xf0, 0xec, 0x0c, 0xef, 0x81, 0x09, 0x11, 0xbd, 0x72, 0x8a, 0x8f, 0xc7, 0x35, 0x5a,
	0x31, 0xc7, 0x33, 0x20, 0xda, 0xc9, 0x4e, 0xf2, 0xe7, 0xd5, 0x7e, 0xf4, 0x3b, 0x3c, 0x35, 0xcb,
	0xe6, 0x23, 0xbd, 0x30, 0x56, 0x40, 0x3f, 0x62, 0xf6, 0x6b, 0xd8, 0xb1, 0x02, 0x6c, 0xb7, 0x08,
	0xb7, 0x5c, 0xe2, 0x35, 0x78, 0x53, 0x33, 0xcc, 0x70, 0x0d, 0x3b, 0x0b, 0xd2, 0x7e, 0x42, 0x9a,
	0xc5, 0x78, 0x52, 0xb1, 0x4b, 0x24, 0x64, 0xd1, 0x79, 0xd1, 0x5b, 0x1d, 0x89, 0x83, 0xbf, 0xa4,
	0xec, 0x68, 0x16, 0xc6, 0x70, 0x87, 0x37, 0x89, 0xc7, 0xa9, 0xad, 0xea, 0x57, 0xc7, 0xd4, 0xd5,
	0xec, 0x82, 0xb2, 0xae, 0xe3, 0x98, 0xba, 0xe2, 0x42, 0x23, 0x9a, 0xb7, 0x9b, 0xc4, 0x6e, 0xb1,
	0x4e, 0x5b, 0x13, 0xcb, 0x40, 0x0d, 0x3b, 0x47, 0xb4, 0x29, 0x87, 0xb6, 0xee, 0x87, 0x6d, 0xcc,
	0x35, 0xa1, 0x24, 0x68, 0x8f, 0x4b, 0xb3, 0x58, 0x74, 0x21, 0xb1, 0x97, 0xac, 0xa0, 0xc5, 0x2d,
	0x87, 0x32, 0x71, 0x11, 0x90, 0xd2, 0xa8, 0xae, 0xd9, 0x64, 0x4c, 0x78, 0x17, 0x5a, 0xfc, 0xa8,
	0xf6, 0xcd, 0x7b, 0xbc, 0x2e, 0xc8, 0x56, 0xf3, 0xb5, 0xbe, 0x1f, 0x28, 0x12, 0x19, 0x94, 0x46,
	0x4d, 0x9d, 0x68, 0x16, 0xc6, 0x75, 0xb5, 0x2d, 0x51, 0x7d, 0xbf, 0x6e, 0xf9, 0xa1, 0x43, 0x42,
	0x4d, 0x19, 0xa3, 0xda, 0x77, 0xaa, 0xc3, 0x4f, 0xd5, 0x4f, 0x09, 0x07, 0xda, 0x09, 0x03, 0x1d,
	0xaf, 0xe5, 0xf9, 0x67, 0xe5, 0x7e, 0xd4, 0xc4, 0x00, 0xda, 0x34, 0x67, 0xb7, 0xc4, 0xd0, 0xa3,
	0x00, 0x4f, 0x44, 0x28, 0x12, 0x88, 0x92, 0x4e, 0x62, 0xbb, 0xa5, 0xef, 0x72, 0x84, 0x2e, 0x11,
	0x47, 0xc5, 0xa8, 0x9d, 0x3f, 0x18, 0x19, 0x65, 0xd0, 0x2e, 0xf5, 0x92, 0x4d, 0x56, 0xba, 0x13,
	0x12, 0xbd, 0xe1, 0xe5, 0xbb, 0xac, 0xe3, 0xca, 0x64, 0x7e, 0xa7, 0x02, 0x53, 0xab, 0x7e, 0x23,
	0x43, 0x3f, 0x37, 0x60, 0x5b, 0x22, 0x1f, 0xb5, 0xba, 0x7f, 0xc4, 0xd8, 0xa4, 0x4f, 0x76, 0x29,
	0x8f, 0x94, 0xfa, 0x09, 0x34, 0xf3, 0xe2, 0x2d, 0x30, 0x94, 0xf5, 0xa2, 0x19, 0x18, 0x4c, 0x2c,
	0xd4, 0xc9, 0x2a, 0xfe, 0x81, 0xd8, 0x35, 0xef, 0xa0, 0x5f, 0xe5, 0xef, 0x71, 0x3f, 0xec, 0x92,
	0x11, 0x16, 0x7c, 0x13, 0xfa, 0x8b, 0x01, 0xa5, 0x24, 0x28, 0x24, 0xf5, 0xe8, 0xb2, 0xf5, 0x4c,
	0xb7, 0x60, 0xce, 0xa0, 0x53, 0xd8, 0x93, 0x89, 0xa8, 0x92, 0x3a, 0xfa, 0x97, 0x01, 0x93, 0x35,
	0xec, 0x39, 0x67, 0xa9, 0xc3, 0x9b, 0x69, 0x46, 0x8d, 0xd5, 0xeb, 0x4b, 0xdd, 0x32, 0x96, 0x62,
	0x98, 0x6a, 0x50, 0x13, 0xb1, 0x33, 0x45, 0xf8, 0x0c, 0xfd, 0x26, 0xd1, 0xe2, 0xcf, 0x6e, 0xcc,
	0xd7, 0xd0, 0x4b, 0x1e, 0x4d, 0x91, 0x52, 0x7f, 0xc3, 0x80, 0xa1, 0x2c, 0xf9, 0x96, 0x9f, 0x53,
	0xb0, 0x9f, 0xed, 0x16, 0xd8, 0xb9, 0x63, 0x43, 0xbd, 0x01, 0xc9, 0x1a, 0xd1, 0x9f, 0x0d, 0x18,
	0x64, 0x9d, 0x1a, 0xb3, 0x43, 0xaa, 0xde, 0xd4, 0x3c, 0xaf, 0x06, 0x71, 0xbe, 0x6b, 0x76, 0x72,
	0x0a, 0x9c, 0xde, 0x14, 0x69, 0x13, 0x7a, 0xd5, 0x00, 0x48, 0x3e, 0xb0, 0x94, 0x5f, 0x50, 0xf0,
	0x9f, 0xea, 0x16, 0xf8, 0xa9, 0xef, 0x42, 0x12, 0x7c, 0x0a, 0xab, 0x38, 0x65, 0xb0, 0xd3, 0x16,
	0xd7, 0x51, 0xf5, 0xe6, 0x50, 0xbd, 0x65, 0x1c, 0x90, 0x36, 0xfd, 0x31, 0xe4, 0xc9, 0xac, 0x58,
	0xdc, 0x55, 0x44, 0xcd, 0x59, 0x4e, 0xbe, 0x98, 0xd6, 0x93, 0x9a, 0x96, 0x7f, 0xd2, 0x7d, 0xb4,
	0xbc, 0xaa, 0xd8, 0x7c, 0x6b, 0xa5, 0xd8, 0xd4, 0x44, 0xfd, 0x4a, 0x17, 0x8e, 0xe2, 0x12, 0x94,
	0xe8, 0xdf, 0xb6, 0xe6, 0x95, 0x68, 0x91, 0xfa, 0xdb, 0xbb, 0x46, 0xf5, 0xb7, 0x6f, 0x1d, 0xea,
	0xef, 0xf6, 0xf5, 0xa8, 0xbf, 0xfd, 0x97, 0xa5, 0xfe, 0x0e, 0x5c, 0xb6, 0xfa, 0x3b, 0xb8, 0x2e,
	0xf5, 0x77, 0xc7, 0xda, 0xd4, 0xdf, 0xa1, 0xb5, 0xa8, 0xbf, 0x3b, 0x2f, 0x59, 0xfd, 0xdd, 0xb5,
	0x66, 0xf5, 0x77, 0xf7, 0xba, 0xd4, 0xdf, 0x3d, 0xeb, 0x53, 0x7f, 0xf7, 0x5e, 0xa6, 0xfa, 0xbb,
	0xef, 0x63, 0x50, 0x7f, 0x73, 0xeb, 0x54, 0x7f, 0x87, 0xd7, 0xaa, 0xfe, 0x8e, 0xac, 0x4d, 0xfd,
	0x1d, 0xfd, 0x44, 0xfd, 0x7d, 0xa2, 0xfe, 0x56, 0x57, 0x7f, 0x2f, 0xf7, 0x00, 0x5a, 0x79, 0x5f,
	0x47, 0x7f, 0xca, 0x0b, 0xa2, 0x9f, 0x75, 0xaf, 0xb8, 0x28, 0x78, 0xf9, 0x7d, 0x32, 0x73, 0xd9,
	0xb8, 0x36, 0x2d, 0x61, 0xd5, 0x4d, 0x23, 0x31, 0xa0, 0x1b, 0xe4, 0xbd, 0x31, 0xfb, 0x89, 0xb4,
	0x54, 0xcd, 0xd8, 0xcc, 0xb7, 0xfb, 0x60, 0xfa, 0x23, 0x94, 0x00, 0x7a, 0xdf, 0x80, 0x89, 0x42,
	0x7f, 0xa4, 0x98, 0x2f, 0x5e, 0x05, 0x7a, 0xa6, 0xd8, 0xa7, 0x84, 0xf6, 0x78, 0x91, 0xd4, 0x31,
	0x5f, 0xef, 0x05, 0x73, 0xf5, 0x24, 0xb4, 0x0b, 0xfa, 0x83, 0x90, 0xfa, 0x21, 0xe5, 0xcb, 0x59,
	0xed, 0x1d, 0x9b, 0xd1, 0xbb, 0xf9, 0x75, 0xf6, 0xe6, 0xd5, 0x5d, 0xa8, 0x82, 0xb5, 0xf8, 0x54,
	0x4f, 0x66, 0x31, 0x9a, 0xf9, 0xa2, 0xa4, 0xaa, 0x21, 0x38, 0x72, 0x09, 0x53, 0x57, 0x10, 0x90,
	0x15, 0x77, 0xa2, 0x29, 0x15, 0xc5, 0xae, 0xc3, 0x91, 0x07, 0xed, 0x06, 0xa4, 0x10, 0x10, 0x27,
	0x15, 0xaf, 0x38, 0x75, 0x34, 0xf2, 0x24, 0xe1, 0x87, 0x60, 0x0a, 0xdb, 0x9c, 0x2e, 0x91, 0xec,
	0x98, 0xe4, 0x11, 0xa0, 0xf9, 0x75, 0xbb, 0x0a, 0x48, 0x0b, 0x5a, 0x79, 0x01, 0x94, 0x5f, 0x90,
	0x68, 0xa3, 0x79, 0x16, 0x73, 0x12, 0x5a, 0x6d, 0x1c, 0xb6, 0x34, 0xd1, 0x96, 0x62, 0xeb, 0xfd,
	0x38, 0x6c, 0xa1, 0xcf, 0xc0, 0x88, 0x18, 0x2c, 0xb5, 0x53, 0x78, 0x14, 0x35, 0x0d, 0x2b, 0x7b,
	0x8c, 0xc6, 0xfc, 0x45, 0xee, 0x63, 0xda, 0xef, 0xf3, 0x6b, 0xe1, 0x85, 0x2e, 0x94, 0xcd, 0x9b,
	0xf2, 0xa5, 0xed, 0x03, 0x63, 0xc5, 0xe1, 0x29, 0xfb, 0xba, 0x98, 0xaf, 0xd8, 0x2b, 0x5d, 0xac,
	0xd8, 0x0b, 0x2a, 0x77, 0xe3, 0xa5, 0x7c, 0xac, 0x35, 0x1f, 0xee, 0x81, 0xd1, 0x15, 0xe2, 0x19,
	0xbd, 0x9e, 0x1f, 0xfb, 0xcb, 0x5d, 0x2b, 0xf4, 0x0b, 0x46, 0x7e, 0x6b, 0x66, 0xe4, 0x37, 0xe4,
	0x5e, 0x5d, 0xec, 0x8d, 0x8f, 0xa0, 0xd8, 0x66, 0xbe, 0xd3, 0x03, 0xc3, 0x39, 0x0d, 0x8e, 0xfe,
	0x98, 0xaf, 0xc1, 0x8b, 0x5d, 0xfa, 0xb6, 0xa0, 0xa0, 0x02, 0xdf, 0xcf, 0xfe, 0x90, 0xe9, 0x18,
	0xec, 0x74, 0xa9, 0xd7, 0xb2, 0x52, 0x89, 0x8c, 0x2f, 0xbb, 0x24, 0xf5, 0x23, 0x54, 0xc5, 0x96,
	0xd7, 0x8a, 0xb0, 0x85, 0x38, 0xea, 0xb4, 0x08, 0x4a, 0x7e, 0x8d, 0x7a, 0x10, 0xca, 0xb5, 0xe5,
	0x00, 0x33, 0x66, 0xf9, 0x01, 0xa7, 0x6d, 0xfa, 0x20, 0x49, 0xf6, 0xa1, 0x3a, 0xd8, 0x27, 0x95,
	0xff, 0x94, 0x76, 0x47, 0x1b, 0xf2, 0xd0, 0x12, 0xec, 0x5c, 0xf4, 0x82, 0xd0, 0x2a, 0xae, 0x9f,
	0x45, 0xce, 0x71, 0xb4, 0xbd, 0xf2, 0xc5, 0x8e, 0x47, 0x03, 0x12, 0x9e, 0x54, 0x31, 0xec, 0x34,
	0xf1, 0x98, 0x1f, 0xaa, 0x3b, 0xf6, 0xc0, 0x9e, 0xed, 0xab, 0xd4, 0xbe, 0x3a, 0x2d, 0x1a, 0x3e,
	0x99, 0xfd, 0x87, 0x33, 0x56, 0x65, 0x4b, 0xc1, 0xb1, 0x73, 0xfc, 0xf0, 0x03, 0x6f, 0xbe, 0xb7,
	0xc3, 0xf8, 0xc7, 0x7b, 0x3b, 0x8c, 0x77, 0xdf, 0xdb, 0x61, 0x7c, 0xb5, 0xda, 0xa0, 0xbc, 0xb2,
	0xa8, 0x7a, 0x11, 0xcd, 0xcd, 0x52, 0x9b, 0xd4, 0x48, 0xd8, 0x98, 0x6d, 0x12, 0xec, 0xf2, 0x66,
	0xcd, 0xe7, 0xbb, 0xa9, 0xd7, 0x20, 0x8c, 0xef, 0x5e, 0xe4, 0x74, 0xb7, 0x87, 0x05, 0x57, 0xcf,
	0x06, 0xad, 0xc6, 0xec, 0x22, 0xa7, 0xb3, 0xd8, 0xc1, 0x81, 0xb8, 0xca, 0xcf, 0x5a, 0x8b, 0x1d,
	0xcf, 0x67, 0xb3, 0xcc, 0x6e, 0x92, 0x36, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xfa,
	0x00, 0x5b, 0x79, 0x37, 0x00, 0x00,
}

func (m *NetworkInstancesRsvp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mpls != nil {
		{
			size, err := m.Mpls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SignalingProtocols != nil {
		{
			size, err := m.SignalingProtocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RsvpTe != nil {
		{
			size, err := m.RsvpTe.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceAttributes != nil {
		{
			size, err := m.InterfaceAttributes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Global != nil {
		{
			size, err := m.Global.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Neighbors != nil {
		{
			size, err := m.Neighbors.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Sessions != nil {
		{
			size, err := m.Sessions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Session) > 0 {
		for iNdEx := len(m.Session) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Session[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.ExplicitRouteObjects != nil {
		{
			size, err := m.ExplicitRouteObjects.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.RecordRouteObjects != nil {
		{
			size, err := m.RecordRouteObjects.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Subcode != nil {
		i -= len(*m.Subcode)
		copy(dAtA[i:], *m.Subcode)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Subcode)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.LspId != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.LspId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.LocalIndex != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.LocalIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RecordRouteObject) > 0 {
		for iNdEx := len(m.RecordRouteObject) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RecordRouteObject[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReportedFlags != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ReportedFlags))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.ReportedLabel != nil {
		i -= len(*m.ReportedLabel)
		copy(dAtA[i:], *m.ReportedLabel)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.ReportedLabel)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Index != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SenderTspec != nil {
		{
			size, err := m.SenderTspec.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.NotifyStatus != nil {
		i -= len(*m.NotifyStatus)
		copy(dAtA[i:], *m.NotifyStatus)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.NotifyStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf2
	}
	if m.LabelOut != nil {
		i -= len(*m.LabelOut)
		copy(dAtA[i:], *m.LabelOut)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.LabelOut)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xea
	}
	if m.LabelIn != nil {
		i -= len(*m.LabelIn)
		copy(dAtA[i:], *m.LabelIn)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.LabelIn)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xda
	}
	if m.ProtectionRequested != nil {
		i -= len(*m.ProtectionRequested)
		copy(dAtA[i:], *m.ProtectionRequested)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.ProtectionRequested)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd2
	}
	if m.Status != nil {
		i -= len(*m.Status)
		copy(dAtA[i:], *m.Status)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Status)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if m.SessionName != nil {
		i -= len(*m.SessionName)
		copy(dAtA[i:], *m.SessionName)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.SessionName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.LspId != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.LspId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TunnelId != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.TunnelId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.DestinationAddress != nil {
		i -= len(*m.DestinationAddress)
		copy(dAtA[i:], *m.DestinationAddress)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.DestinationAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.SourceAddress != nil {
		i -= len(*m.SourceAddress)
		copy(dAtA[i:], *m.SourceAddress)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.SourceAddress)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.LocalIndex != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.LocalIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PeakDataRate != nil {
		i -= len(*m.PeakDataRate)
		copy(dAtA[i:], *m.PeakDataRate)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.PeakDataRate)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Size_ != nil {
		i -= len(*m.Size_)
		copy(dAtA[i:], *m.Size_)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Size_)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Rate != nil {
		i -= len(*m.Rate)
		copy(dAtA[i:], *m.Rate)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Rate)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExplicitRouteObject) > 0 {
		for iNdEx := len(m.ExplicitRouteObject) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExplicitRouteObject[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HopType != nil {
		i -= len(*m.HopType)
		copy(dAtA[i:], *m.HopType)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.HopType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Index != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Neighbor) > 0 {
		for iNdEx := len(m.Neighbor) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Neighbor[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RefreshReduction != nil {
		i--
		if *m.RefreshReduction {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.NeighborStatus != nil {
		i -= len(*m.NeighborStatus)
		copy(dAtA[i:], *m.NeighborStatus)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.NeighborStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.DetectedInterface != nil {
		i -= len(*m.DetectedInterface)
		copy(dAtA[i:], *m.DetectedInterface)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.DetectedInterface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.Hellos != nil {
		{
			size, err := m.Hellos.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.SoftPreemption != nil {
		{
			size, err := m.SoftPreemption.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.GracefulRestart != nil {
		{
			size, err := m.GracefulRestart.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RecoveryTime != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.RecoveryTime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.RestartTime != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.RestartTime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Enable != nil {
		i--
		if *m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SoftPreemptionTimeout != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.SoftPreemptionTimeout))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Enable != nil {
		i--
		if *m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RefreshReduction != nil {
		i--
		if *m.RefreshReduction {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.HelloInterval != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.HelloInterval))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.ErrorCounters != nil {
		{
			size, err := m.ErrorCounters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OutAckMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutAckMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.OutSrefreshMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutSrefreshMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.OutHelloMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutHelloMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.OutReservationTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationTearMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.OutReservationErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationErrorMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.OutReservationMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.OutPathTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathTearMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.OutPathErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathErrorMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.OutPathMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.InAckMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InAckMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.InSrefreshMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InSrefreshMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.InHelloMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InHelloMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.InReservationTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationTearMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.InReservationErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationErrorMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.InReservationMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.InPathTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathTearMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.InPathErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathErrorMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.InPathMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.RateLimitedMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.RateLimitedMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.ReservationTimeouts != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ReservationTimeouts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.PathTimeouts != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.PathTimeouts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendFailure != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.SendFailure))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.ReceivedNack != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ReceivedNack))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.UnknownNack != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.UnknownNack))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.UnknownAck != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.UnknownAck))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.MessageOutOfOrder != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.MessageOutOfOrder))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.StateTimeout != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.StateTimeout))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RecvPktDisabledIntf != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.RecvPktDisabledIntf))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.BadPacketFormat != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketFormat))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.BadChecksum != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadChecksum))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.AuthenticationFail != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.AuthenticationFail))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.BadPacketVersion != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketVersion))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.BadPacketLength != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketLength))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protection != nil {
		{
			size, err := m.Protection.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xea
	}
	if m.Subscription != nil {
		{
			size, err := m.Subscription.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xe2
	}
	if m.Authentication != nil {
		{
			size, err := m.Authentication.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xda
	}
	if m.Hellos != nil {
		{
			size, err := m.Hellos.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.BandwidthReservations != nil {
		{
			size, err := m.BandwidthReservations.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.InterfaceRef != nil {
		{
			size, err := m.InterfaceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.AdminStatus != nil {
		i -= len(*m.AdminStatus)
		copy(dAtA[i:], *m.AdminStatus)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.AdminStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ErrorCounters != nil {
		{
			size, err := m.ErrorCounters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OutAckMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutAckMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.OutSrefreshMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutSrefreshMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.OutHelloMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutHelloMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.OutReservationTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationTearMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.OutReservationErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationErrorMessages))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.OutReservationMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutReservationMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.OutPathTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathTearMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.OutPathErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathErrorMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.OutPathMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.OutPathMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.InAckMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InAckMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.InSrefreshMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InSrefreshMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.InHelloMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InHelloMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.InReservationTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationTearMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.InReservationErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationErrorMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.InReservationMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InReservationMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.InPathTearMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathTearMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.InPathErrorMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathErrorMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InPathMessages != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.InPathMessages))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SendFailure != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.SendFailure))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.ReceivedNack != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ReceivedNack))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.UnknownNack != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.UnknownNack))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.UnknownAck != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.UnknownAck))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.MessageOutOfOrder != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.MessageOutOfOrder))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.StateTimeout != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.StateTimeout))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.RecvPktDisabledIntf != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.RecvPktDisabledIntf))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.BadPacketFormat != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketFormat))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.BadChecksum != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadChecksum))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.AuthenticationFail != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.AuthenticationFail))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.BadPacketVersion != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketVersion))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.BadPacketLength != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BadPacketLength))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterface != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Subinterface))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BandwidthReservation) > 0 {
		for iNdEx := len(m.BandwidthReservation) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BandwidthReservation[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Priority != nil {
		i -= len(*m.Priority)
		copy(dAtA[i:], *m.Priority)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Priority)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StaticBandwidth != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.StaticBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.HighwaterMark != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.HighwaterMark))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.ActiveReservationsCount != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ActiveReservationsCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.ReservedBandwidth != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.ReservedBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.AvailableBandwidth != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.AvailableBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Priority != nil {
		i -= len(*m.Priority)
		copy(dAtA[i:], *m.Priority)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.Priority)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RefreshReduction != nil {
		i--
		if *m.RefreshReduction {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.HelloInterval != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.HelloInterval))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enable != nil {
		i--
		if *m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subscription != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.Subscription))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdRsvpOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BypassOptimizeInterval != nil {
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(*m.BypassOptimizeInterval))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.LinkProtectionStyleRequested != nil {
		i -= len(*m.LinkProtectionStyleRequested)
		copy(dAtA[i:], *m.LinkProtectionStyleRequested)
		i = encodeVarintRpdRsvpOc(dAtA, i, uint64(len(*m.LinkProtectionStyleRequested)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintRpdRsvpOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovRpdRsvpOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstancesRsvp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Mpls != nil {
		l = m.Mpls.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignalingProtocols != nil {
		l = m.SignalingProtocols.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RsvpTe != nil {
		l = m.RsvpTe.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sessions != nil {
		l = m.Sessions.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Neighbors != nil {
		l = m.Neighbors.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Global != nil {
		l = m.Global.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.InterfaceAttributes != nil {
		l = m.InterfaceAttributes.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Session) > 0 {
		for _, e := range m.Session {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalIndex != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.LocalIndex))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.LspId != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.LspId))
	}
	if m.Subcode != nil {
		l = len(*m.Subcode)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.RecordRouteObjects != nil {
		l = m.RecordRouteObjects.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.ExplicitRouteObjects != nil {
		l = m.ExplicitRouteObjects.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RecordRouteObject) > 0 {
		for _, e := range m.RecordRouteObject {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Index))
	}
	if m.Address != nil {
		l = len(*m.Address)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.ReportedLabel != nil {
		l = len(*m.ReportedLabel)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.ReportedFlags != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ReportedFlags))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalIndex != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.LocalIndex))
	}
	if m.SourceAddress != nil {
		l = len(*m.SourceAddress)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.DestinationAddress != nil {
		l = len(*m.DestinationAddress)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.TunnelId != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.TunnelId))
	}
	if m.LspId != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.LspId))
	}
	if m.SessionName != nil {
		l = len(*m.SessionName)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Status != nil {
		l = len(*m.Status)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.ProtectionRequested != nil {
		l = len(*m.ProtectionRequested)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.LabelIn != nil {
		l = len(*m.LabelIn)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.LabelOut != nil {
		l = len(*m.LabelOut)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.NotifyStatus != nil {
		l = len(*m.NotifyStatus)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.SenderTspec != nil {
		l = m.SenderTspec.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Rate != nil {
		l = len(*m.Rate)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Size_ != nil {
		l = len(*m.Size_)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.PeakDataRate != nil {
		l = len(*m.PeakDataRate)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExplicitRouteObject) > 0 {
		for _, e := range m.ExplicitRouteObject {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Index))
	}
	if m.Address != nil {
		l = len(*m.Address)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.HopType != nil {
		l = len(*m.HopType)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Neighbor) > 0 {
		for _, e := range m.Neighbor {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.DetectedInterface != nil {
		l = len(*m.DetectedInterface)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.NeighborStatus != nil {
		l = len(*m.NeighborStatus)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.RefreshReduction != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GracefulRestart != nil {
		l = m.GracefulRestart.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.SoftPreemption != nil {
		l = m.SoftPreemption.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Hellos != nil {
		l = m.Hellos.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enable != nil {
		n += 3
	}
	if m.RestartTime != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.RestartTime))
	}
	if m.RecoveryTime != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.RecoveryTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enable != nil {
		n += 3
	}
	if m.SoftPreemptionTimeout != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.SoftPreemptionTimeout))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HelloInterval != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.HelloInterval))
	}
	if m.RefreshReduction != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ErrorCounters != nil {
		l = m.ErrorCounters.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PathTimeouts != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.PathTimeouts))
	}
	if m.ReservationTimeouts != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ReservationTimeouts))
	}
	if m.RateLimitedMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.RateLimitedMessages))
	}
	if m.InPathMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathMessages))
	}
	if m.InPathErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathErrorMessages))
	}
	if m.InPathTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathTearMessages))
	}
	if m.InReservationMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationMessages))
	}
	if m.InReservationErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationErrorMessages))
	}
	if m.InReservationTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationTearMessages))
	}
	if m.InHelloMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InHelloMessages))
	}
	if m.InSrefreshMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InSrefreshMessages))
	}
	if m.InAckMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InAckMessages))
	}
	if m.OutPathMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathMessages))
	}
	if m.OutPathErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathErrorMessages))
	}
	if m.OutPathTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathTearMessages))
	}
	if m.OutReservationMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationMessages))
	}
	if m.OutReservationErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationErrorMessages))
	}
	if m.OutReservationTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationTearMessages))
	}
	if m.OutHelloMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutHelloMessages))
	}
	if m.OutSrefreshMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutSrefreshMessages))
	}
	if m.OutAckMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutAckMessages))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BadPacketLength != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketLength))
	}
	if m.BadPacketVersion != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketVersion))
	}
	if m.AuthenticationFail != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.AuthenticationFail))
	}
	if m.BadChecksum != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadChecksum))
	}
	if m.BadPacketFormat != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketFormat))
	}
	if m.RecvPktDisabledIntf != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.RecvPktDisabledIntf))
	}
	if m.StateTimeout != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.StateTimeout))
	}
	if m.MessageOutOfOrder != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.MessageOutOfOrder))
	}
	if m.UnknownAck != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.UnknownAck))
	}
	if m.UnknownNack != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.UnknownNack))
	}
	if m.ReceivedNack != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ReceivedNack))
	}
	if m.SendFailure != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.SendFailure))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.AdminStatus != nil {
		l = len(*m.AdminStatus)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.InterfaceRef != nil {
		l = m.InterfaceRef.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.BandwidthReservations != nil {
		l = m.BandwidthReservations.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Hellos != nil {
		l = m.Hellos.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Authentication != nil {
		l = m.Authentication.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Subscription != nil {
		l = m.Subscription.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Protection != nil {
		l = m.Protection.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.ErrorCounters != nil {
		l = m.ErrorCounters.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InPathMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathMessages))
	}
	if m.InPathErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathErrorMessages))
	}
	if m.InPathTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InPathTearMessages))
	}
	if m.InReservationMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationMessages))
	}
	if m.InReservationErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationErrorMessages))
	}
	if m.InReservationTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InReservationTearMessages))
	}
	if m.InHelloMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InHelloMessages))
	}
	if m.InSrefreshMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InSrefreshMessages))
	}
	if m.InAckMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.InAckMessages))
	}
	if m.OutPathMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathMessages))
	}
	if m.OutPathErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathErrorMessages))
	}
	if m.OutPathTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutPathTearMessages))
	}
	if m.OutReservationMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationMessages))
	}
	if m.OutReservationErrorMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationErrorMessages))
	}
	if m.OutReservationTearMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutReservationTearMessages))
	}
	if m.OutHelloMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutHelloMessages))
	}
	if m.OutSrefreshMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutSrefreshMessages))
	}
	if m.OutAckMessages != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.OutAckMessages))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BadPacketLength != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketLength))
	}
	if m.BadPacketVersion != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketVersion))
	}
	if m.AuthenticationFail != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.AuthenticationFail))
	}
	if m.BadChecksum != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadChecksum))
	}
	if m.BadPacketFormat != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BadPacketFormat))
	}
	if m.RecvPktDisabledIntf != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.RecvPktDisabledIntf))
	}
	if m.StateTimeout != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.StateTimeout))
	}
	if m.MessageOutOfOrder != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.MessageOutOfOrder))
	}
	if m.UnknownAck != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.UnknownAck))
	}
	if m.UnknownNack != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.UnknownNack))
	}
	if m.ReceivedNack != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ReceivedNack))
	}
	if m.SendFailure != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.SendFailure))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.Subinterface != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Subinterface))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.BandwidthReservation) > 0 {
		for _, e := range m.BandwidthReservation {
			l = e.Size()
			n += 2 + l + sovRpdRsvpOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Priority != nil {
		l = len(*m.Priority)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Priority != nil {
		l = len(*m.Priority)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.AvailableBandwidth != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.AvailableBandwidth))
	}
	if m.ReservedBandwidth != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ReservedBandwidth))
	}
	if m.ActiveReservationsCount != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.ActiveReservationsCount))
	}
	if m.HighwaterMark != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.HighwaterMark))
	}
	if m.StaticBandwidth != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.StaticBandwidth))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HelloInterval != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.HelloInterval))
	}
	if m.RefreshReduction != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enable != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Subscription != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.Subscription))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LinkProtectionStyleRequested != nil {
		l = len(*m.LinkProtectionStyleRequested)
		n += 2 + l + sovRpdRsvpOc(uint64(l))
	}
	if m.BypassOptimizeInterval != nil {
		n += 2 + sovRpdRsvpOc(uint64(*m.BypassOptimizeInterval))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpdRsvpOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRpdRsvpOc(x uint64) (n int) {
	return sovRpdRsvpOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstancesRsvp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_rsvp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_rsvp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesRsvpNetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mpls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mpls == nil {
				m.Mpls = &NetworkInstancesRsvpNetworkInstanceListMplsType{}
			}
			if err := m.Mpls.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignalingProtocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SignalingProtocols == nil {
				m.SignalingProtocols = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType{}
			}
			if err := m.SignalingProtocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: signaling_protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: signaling_protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RsvpTe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RsvpTe == nil {
				m.RsvpTe = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType{}
			}
			if err := m.RsvpTe.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: rsvp_te_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: rsvp_te_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sessions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sessions == nil {
				m.Sessions = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType{}
			}
			if err := m.Sessions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Neighbors == nil {
				m.Neighbors = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType{}
			}
			if err := m.Neighbors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Global", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Global == nil {
				m.Global = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType{}
			}
			if err := m.Global.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceAttributes == nil {
				m.InterfaceAttributes = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType{}
			}
			if err := m.InterfaceAttributes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sessions_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sessions_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Session = append(m.Session, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList{})
			if err := m.Session[len(m.Session)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: session_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: session_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalIndex = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspId = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Subcode = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordRouteObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RecordRouteObjects == nil {
				m.RecordRouteObjects = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType{}
			}
			if err := m.RecordRouteObjects.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRouteObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExplicitRouteObjects == nil {
				m.ExplicitRouteObjects = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType{}
			}
			if err := m.ExplicitRouteObjects.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: record_route_objects_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: record_route_objects_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordRouteObject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordRouteObject = append(m.RecordRouteObject, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList{})
			if err := m.RecordRouteObject[len(m.RecordRouteObject)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: record_route_object_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: record_route_object_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListRecordRouteObjectsTypeRecordRouteObjectListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportedLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ReportedLabel = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportedFlags", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReportedFlags = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIndex", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalIndex = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SourceAddress = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DestinationAddress = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TunnelId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TunnelId = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspId = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SessionName = &s
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Status = &s
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtectionRequested", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProtectionRequested = &s
			iNdEx = postIndex
		case 59:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LabelIn = &s
			iNdEx = postIndex
		case 61:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LabelOut = &s
			iNdEx = postIndex
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NotifyStatus = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderTspec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SenderTspec == nil {
				m.SenderTspec = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType{}
			}
			if err := m.SenderTspec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListStateTypeSenderTspecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sender_tspec_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sender_tspec_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Rate = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Size_ = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeakDataRate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PeakDataRate = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: explicit_route_objects_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: explicit_route_objects_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRouteObject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplicitRouteObject = append(m.ExplicitRouteObject, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList{})
			if err := m.ExplicitRouteObject[len(m.ExplicitRouteObject)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: explicit_route_object_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: explicit_route_object_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeSessionsTypeSessionListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HopType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HopType = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbors_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbors_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Neighbor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Neighbor = append(m.Neighbor, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList{})
			if err := m.Neighbor[len(m.Neighbor)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: neighbor_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: neighbor_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeNeighborsTypeNeighborListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetectedInterface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DetectedInterface = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeighborStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NeighborStatus = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshReduction", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RefreshReduction = &b
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: global_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: global_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GracefulRestart", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GracefulRestart == nil {
				m.GracefulRestart = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType{}
			}
			if err := m.GracefulRestart.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftPreemption", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SoftPreemption == nil {
				m.SoftPreemption = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType{}
			}
			if err := m.SoftPreemption.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hellos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hellos == nil {
				m.Hellos = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType{}
			}
			if err := m.Hellos.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: graceful_restart_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: graceful_restart_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeGracefulRestartTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enable = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestartTime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RestartTime = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecoveryTime", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecoveryTime = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: soft_preemption_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: soft_preemption_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeSoftPreemptionTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enable = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftPreemptionTimeout", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SoftPreemptionTimeout = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: hellos_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: hellos_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeHellosTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelloInterval", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HelloInterval = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshReduction", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RefreshReduction = &b
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCounters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ErrorCounters == nil {
				m.ErrorCounters = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType{}
			}
			if err := m.ErrorCounters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PathTimeouts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PathTimeouts = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationTimeouts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReservationTimeouts = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RateLimitedMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RateLimitedMessages = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathMessages = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathErrorMessages = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathTearMessages = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationMessages = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationErrorMessages = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationTearMessages = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InHelloMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InHelloMessages = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InSrefreshMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InSrefreshMessages = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InAckMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InAckMessages = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathMessages = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathErrorMessages = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathTearMessages = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationMessages = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationErrorMessages = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationTearMessages = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutHelloMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutHelloMessages = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutSrefreshMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutSrefreshMessages = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutAckMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutAckMessages = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeGlobalTypeStateTypeErrorCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: error_counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: error_counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketLength = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketVersion", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketVersion = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthenticationFail", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthenticationFail = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadChecksum", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadChecksum = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketFormat", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketFormat = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecvPktDisabledIntf", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecvPktDisabledIntf = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateTimeout", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StateTimeout = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageOutOfOrder", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageOutOfOrder = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnknownAck", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnknownAck = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnknownNack", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnknownNack = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceivedNack", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReceivedNack = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendFailure", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendFailure = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_attributes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_attributes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdminStatus = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceRef == nil {
				m.InterfaceRef = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType{}
			}
			if err := m.InterfaceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BandwidthReservations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BandwidthReservations == nil {
				m.BandwidthReservations = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType{}
			}
			if err := m.BandwidthReservations.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hellos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Hellos == nil {
				m.Hellos = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType{}
			}
			if err := m.Hellos.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 155:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authentication", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Authentication == nil {
				m.Authentication = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType{}
			}
			if err := m.Authentication.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 156:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscription", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subscription == nil {
				m.Subscription = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType{}
			}
			if err := m.Subscription.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 157:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protection", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protection == nil {
				m.Protection = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType{}
			}
			if err := m.Protection.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCounters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ErrorCounters == nil {
				m.ErrorCounters = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType{}
			}
			if err := m.ErrorCounters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathMessages = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathErrorMessages = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPathTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPathTearMessages = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationMessages = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationErrorMessages = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InReservationTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InReservationTearMessages = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InHelloMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InHelloMessages = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InSrefreshMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InSrefreshMessages = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InAckMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InAckMessages = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathMessages = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathErrorMessages = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPathTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPathTearMessages = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationMessages = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationErrorMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationErrorMessages = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutReservationTearMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutReservationTearMessages = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutHelloMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutHelloMessages = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutSrefreshMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutSrefreshMessages = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutAckMessages", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutAckMessages = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListStateTypeErrorCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: error_counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: error_counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketLength = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketVersion", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketVersion = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthenticationFail", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AuthenticationFail = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadChecksum", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadChecksum = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BadPacketFormat", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BadPacketFormat = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecvPktDisabledIntf", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecvPktDisabledIntf = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateTimeout", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StateTimeout = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageOutOfOrder", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageOutOfOrder = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnknownAck", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnknownAck = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnknownNack", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnknownNack = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceivedNack", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReceivedNack = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendFailure", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendFailure = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_ref_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_ref_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subinterface = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_reservations_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_reservations_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BandwidthReservation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BandwidthReservation = append(m.BandwidthReservation, &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList{})
			if err := m.BandwidthReservation[len(m.BandwidthReservation)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_reservation_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_reservation_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Priority = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListBandwidthReservationsTypeBandwidthReservationListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Priority = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AvailableBandwidth = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservedBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReservedBandwidth = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveReservationsCount", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ActiveReservationsCount = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HighwaterMark", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HighwaterMark = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StaticBandwidth = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: hellos_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: hellos_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListHellosTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelloInterval", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HelloInterval = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshReduction", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.RefreshReduction = &b
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: authentication_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: authentication_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListAuthenticationTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enable = &b
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscription_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscription_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListSubscriptionTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subscription", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subscription = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: protection_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: protection_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesRsvpNetworkInstanceListMplsTypeSignalingProtocolsTypeRsvpTeTypeInterfaceAttributesTypeInterfaceListProtectionTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkProtectionStyleRequested", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LinkProtectionStyleRequested = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BypassOptimizeInterval", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BypassOptimizeInterval = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdRsvpOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdRsvpOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRpdRsvpOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRpdRsvpOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdRsvpOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRpdRsvpOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRpdRsvpOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRpdRsvpOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRpdRsvpOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRpdRsvpOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRpdRsvpOc = fmt.Errorf("proto: unexpected end of group")
)
