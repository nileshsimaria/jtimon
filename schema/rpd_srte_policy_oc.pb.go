// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpd_srte_policy_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstances_SRTE struct {
	NetworkInstance      []*NetworkInstances_SRTENetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *NetworkInstances_SRTE) Reset()         { *m = NetworkInstances_SRTE{} }
func (m *NetworkInstances_SRTE) String() string { return proto.CompactTextString(m) }
func (*NetworkInstances_SRTE) ProtoMessage()    {}
func (*NetworkInstances_SRTE) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0}
}
func (m *NetworkInstances_SRTE) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTE.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTE.Merge(m, src)
}
func (m *NetworkInstances_SRTE) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTE) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTE.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTE proto.InternalMessageInfo

func (m *NetworkInstances_SRTE) GetNetworkInstance() []*NetworkInstances_SRTENetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceList struct {
	Name                 *string                                                     `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	SegmentRouting       *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType `protobuf:"bytes,151,opt,name=segment_routing,json=segmentRouting" json:"segment_routing,omitempty"`
	Mpls                 *NetworkInstances_SRTENetworkInstanceListMplsType           `protobuf:"bytes,152,opt,name=mpls" json:"mpls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceList{}
}
func (m *NetworkInstances_SRTENetworkInstanceList) String() string { return proto.CompactTextString(m) }
func (*NetworkInstances_SRTENetworkInstanceList) ProtoMessage()    {}
func (*NetworkInstances_SRTENetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceList) GetSegmentRouting() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType {
	if m != nil {
		return m.SegmentRouting
	}
	return nil
}

func (m *NetworkInstances_SRTENetworkInstanceList) GetMpls() *NetworkInstances_SRTENetworkInstanceListMplsType {
	if m != nil {
		return m.Mpls
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingType struct {
	TePolicies           *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType `protobuf:"bytes,151,opt,name=te_policies,json=tePolicies" json:"te_policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) ProtoMessage() {}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) GetTePolicies() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType {
	if m != nil {
		return m.TePolicies
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType struct {
	TePolicy             []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList `protobuf:"bytes,151,rep,name=te_policy,json=tePolicy" json:"te_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) ProtoMessage() {}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) GetTePolicy() []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList {
	if m != nil {
		return m.TePolicy
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList struct {
	Color                *uint32                                                                                                 `protobuf:"varint,51,opt,name=color" json:"color,omitempty"`
	Endpoint             *string                                                                                                 `protobuf:"bytes,52,opt,name=endpoint" json:"endpoint,omitempty"`
	State                *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType          `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	CandidatePaths       *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType `protobuf:"bytes,152,opt,name=candidate_paths,json=candidatePaths" json:"candidate_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                   `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) GetEndpoint() string {
	if m != nil && m.Endpoint != nil {
		return *m.Endpoint
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) GetState() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) GetCandidatePaths() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType {
	if m != nil {
		return m.CandidatePaths
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType struct {
	Color                *uint32  `protobuf:"varint,51,opt,name=color" json:"color,omitempty"`
	Endpoint             *string  `protobuf:"bytes,52,opt,name=endpoint" json:"endpoint,omitempty"`
	Bsid                 *string  `protobuf:"bytes,53,opt,name=bsid" json:"bsid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) GetEndpoint() string {
	if m != nil && m.Endpoint != nil {
		return *m.Endpoint
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) GetBsid() string {
	if m != nil && m.Bsid != nil {
		return *m.Bsid
	}
	return ""
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType struct {
	CandidatePath        []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList `protobuf:"bytes,151,rep,name=candidate_path,json=candidatePath" json:"candidate_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                      `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) GetCandidatePath() []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList {
	if m != nil {
		return m.CandidatePath
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList struct {
	ProtocolOrigin       *string                                                                                                                                  `protobuf:"bytes,51,opt,name=protocol_origin,json=protocolOrigin" json:"protocol_origin,omitempty"`
	OriginatorAsn        *uint32                                                                                                                                  `protobuf:"varint,52,opt,name=originator_asn,json=originatorAsn" json:"originator_asn,omitempty"`
	OriginatorAddr       *string                                                                                                                                  `protobuf:"bytes,53,opt,name=originator_addr,json=originatorAddr" json:"originator_addr,omitempty"`
	Discriminator        *uint32                                                                                                                                  `protobuf:"varint,54,opt,name=discriminator" json:"discriminator,omitempty"`
	State                *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	SegmentLists         *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType `protobuf:"bytes,152,opt,name=segment_lists,json=segmentLists" json:"segment_lists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                                    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetProtocolOrigin() string {
	if m != nil && m.ProtocolOrigin != nil {
		return *m.ProtocolOrigin
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetOriginatorAsn() uint32 {
	if m != nil && m.OriginatorAsn != nil {
		return *m.OriginatorAsn
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetOriginatorAddr() string {
	if m != nil && m.OriginatorAddr != nil {
		return *m.OriginatorAddr
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetDiscriminator() uint32 {
	if m != nil && m.Discriminator != nil {
		return *m.Discriminator
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetState() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) GetSegmentLists() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType {
	if m != nil {
		return m.SegmentLists
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType struct {
	ProtocolOrigin       *string  `protobuf:"bytes,51,opt,name=protocol_origin,json=protocolOrigin" json:"protocol_origin,omitempty"`
	OriginatorAsn        *uint32  `protobuf:"varint,52,opt,name=originator_asn,json=originatorAsn" json:"originator_asn,omitempty"`
	OriginatorAddr       *string  `protobuf:"bytes,53,opt,name=originator_addr,json=originatorAddr" json:"originator_addr,omitempty"`
	Discriminator        *uint32  `protobuf:"varint,54,opt,name=discriminator" json:"discriminator,omitempty"`
	Preference           *uint32  `protobuf:"varint,55,opt,name=preference" json:"preference,omitempty"`
	Enlp                 *string  `protobuf:"bytes,56,opt,name=enlp" json:"enlp,omitempty"`
	Valid                *bool    `protobuf:"varint,57,opt,name=valid" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetProtocolOrigin() string {
	if m != nil && m.ProtocolOrigin != nil {
		return *m.ProtocolOrigin
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetOriginatorAsn() uint32 {
	if m != nil && m.OriginatorAsn != nil {
		return *m.OriginatorAsn
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetOriginatorAddr() string {
	if m != nil && m.OriginatorAddr != nil {
		return *m.OriginatorAddr
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetDiscriminator() uint32 {
	if m != nil && m.Discriminator != nil {
		return *m.Discriminator
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetPreference() uint32 {
	if m != nil && m.Preference != nil {
		return *m.Preference
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetEnlp() string {
	if m != nil && m.Enlp != nil {
		return *m.Enlp
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) GetValid() bool {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return false
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType struct {
	SegmentList          []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList `protobuf:"bytes,151,rep,name=segment_list,json=segmentList" json:"segment_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                                     `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) GetSegmentList() []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList {
	if m != nil {
		return m.SegmentList
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList struct {
	Id                   *uint32                                                                                                                                                          `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	State                *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Sids                 *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType  `protobuf:"bytes,152,opt,name=sids" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) GetState() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) GetSids() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType {
	if m != nil {
		return m.Sids
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType struct {
	Id                   *uint32  `protobuf:"varint,51,opt,name=id" json:"id,omitempty"`
	Valid                *bool    `protobuf:"varint,52,opt,name=valid" json:"valid,omitempty"`
	InvalidReason        *string  `protobuf:"bytes,53,opt,name=invalid_reason,json=invalidReason" json:"invalid_reason,omitempty"`
	Weight               *uint32  `protobuf:"varint,54,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) GetValid() bool {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return false
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) GetInvalidReason() string {
	if m != nil && m.InvalidReason != nil {
		return *m.InvalidReason
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) GetWeight() uint32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType struct {
	Sid                  []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList `protobuf:"bytes,151,rep,name=sid" json:"sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1, 0, 1}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) GetSid() []*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList {
	if m != nil {
		return m.Sid
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList struct {
	Index                *uint64                                                                                                                                                                         `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                           `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) GetState() *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType struct {
	Index                *uint64  `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	Value                *string  `protobuf:"bytes,52,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type NetworkInstances_SRTENetworkInstanceListMplsType struct {
	SignalingProtocols   *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType `protobuf:"bytes,151,opt,name=signaling_protocols,json=signalingProtocols" json:"signaling_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                  `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsType) ProtoMessage() {}
func (*NetworkInstances_SRTENetworkInstanceListMplsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) GetSignalingProtocols() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType {
	if m != nil {
		return m.SignalingProtocols
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType struct {
	SegmentRouting       *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType `protobuf:"bytes,151,opt,name=segment_routing,json=segmentRouting" json:"segment_routing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                     `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) ProtoMessage() {}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) GetSegmentRouting() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType {
	if m != nil {
		return m.SegmentRouting
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType struct {
	Interfaces           *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType `protobuf:"bytes,151,opt,name=interfaces" json:"interfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                   `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) GetInterfaces() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType struct {
	Interface            []*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                  `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) GetInterface() []*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList struct {
	InterfaceId          *string                                                                                                                              `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	State                *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType        `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	InterfaceRef         *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType `protobuf:"bytes,152,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                                                `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) GetState() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) GetInterfaceRef() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType struct {
	InterfaceId          *string  `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0, 0, 0, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType struct {
	State                *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                                                         `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0, 0, 0, 1}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) GetState() *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType struct {
	Interface            *string  `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	Subinterface         *uint32  `protobuf:"varint,52,opt,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) Reset() {
	*m = NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType{}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) ProtoMessage() {
}
func (*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8bec8c37fbdbee5, []int{0, 0, 1, 0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType.Merge(m, src)
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType proto.InternalMessageInfo

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) GetSubinterface() uint32 {
	if m != nil && m.Subinterface != nil {
		return *m.Subinterface
	}
	return 0
}

var E_JnprNetworkInstances_SRTEExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstances_SRTE)(nil),
	Field:         169,
	Name:          "jnpr_network_instances_SRTE_ext",
	Tag:           "bytes,169,opt,name=jnpr_network_instances_SRTE_ext",
	Filename:      "rpd_srte_policy_oc.proto",
}

func init() {
	proto.RegisterType((*NetworkInstances_SRTE)(nil), "network_instances_SRTE")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceList)(nil), "network_instances_SRTE.network_instance_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.state_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.state_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type.segment_list_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type.segment_list_list.state_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type.segment_list_list.sids_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type.segment_list_list.sids_type.sid_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType)(nil), "network_instances_SRTE.network_instance_list.segment_routing_type.te_policies_type.te_policy_list.candidate_paths_type.candidate_path_list.segment_lists_type.segment_list_list.sids_type.sid_list.state_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsType)(nil), "network_instances_SRTE.network_instance_list.mpls_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type.interfaces_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type.interfaces_type.interface_list")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type.interfaces_type.interface_list.state_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type.interfaces_type.interface_list.interface_ref_type")
	proto.RegisterType((*NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType)(nil), "network_instances_SRTE.network_instance_list.mpls_type.signaling_protocols_type.segment_routing_type.interfaces_type.interface_list.interface_ref_type.state_type")
	proto.RegisterExtension(E_JnprNetworkInstances_SRTEExt)
}

func init() { proto.RegisterFile("rpd_srte_policy_oc.proto", fileDescriptor_a8bec8c37fbdbee5) }

var fileDescriptor_a8bec8c37fbdbee5 = []byte{
	// 1141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0x3d, 0x6c, 0x1c, 0x45,
	0x14, 0xd6, 0x38, 0x67, 0x38, 0xbf, 0xf3, 0x9d, 0x93, 0x89, 0x63, 0x2f, 0x13, 0x64, 0x4c, 0x44,
	0xc0, 0x8d, 0xef, 0xa4, 0x10, 0x48, 0xa0, 0x22, 0x96, 0x52, 0x04, 0x45, 0xc6, 0x5a, 0xd3, 0x40,
	0xb3, 0xac, 0x6f, 0xc7, 0xe7, 0x71, 0xf6, 0x66, 0x97, 0x99, 0xb9, 0xd8, 0xee, 0x50, 0x94, 0x8e,
	0x22, 0x12, 0x85, 0x43, 0x85, 0x14, 0x84, 0x40, 0x69, 0x10, 0x42, 0xd0, 0x04, 0x29, 0x0d, 0x42,
	0x42, 0x14, 0x51, 0x24, 0x84, 0x68, 0xc1, 0x05, 0x48, 0x50, 0xd3, 0x40, 0x83, 0x66, 0x67, 0xff,
	0x6f, 0x2d, 0x91, 0x40, 0x92, 0x33, 0xdd, 0xce, 0xf7, 0xe6, 0xde, 0x7b, 0xf3, 0xcd, 0xfb, 0xde,
	0xcc, 0x1c, 0x58, 0x22, 0xf4, 0x1c, 0x29, 0x14, 0x75, 0xc2, 0xc0, 0x67, 0xdd, 0x1d, 0x27, 0xe8,
	0xb6, 0x43, 0x11, 0xa8, 0x80, 0x1c, 0x55, 0xd4, 0xa7, 0x7d, 0xaa, 0xc4, 0x8e, 0xa3, 0x82, 0xd0,
	0x80, 0x27, 0x7e, 0x7e, 0x16, 0x66, 0x38, 0x55, 0x5b, 0x81, 0xb8, 0xe4, 0x30, 0x2e, 0x95, 0xcb,
	0xbb, 0x54, 0x3a, 0xab, 0xf6, 0xeb, 0xe7, 0xf1, 0x1b, 0x70, 0xb8, 0x6c, 0xb1, 0xae, 0xa3, 0xf9,
	0x43, 0x0b, 0x8d, 0x53, 0x8b, 0xed, 0xea, 0xdf, 0x0c, 0xc1, 0x8e, 0xcf, 0xa4, 0xb2, 0xa7, 0x62,
	0xf8, 0x42, 0x8c, 0x92, 0xdf, 0x4f, 0xc2, 0xb1, 0xca, 0xa9, 0xf8, 0x09, 0xa8, 0x71, 0xb7, 0x4f,
	0xad, 0xe7, 0xe7, 0xd1, 0xc2, 0xc4, 0xd2, 0xf8, 0x95, 0x57, 0xc6, 0xea, 0xc8, 0x8e, 0x20, 0xec,
	0xc3, 0x94, 0xa4, 0xbd, 0x3e, 0xe5, 0xca, 0x11, 0xc1, 0x40, 0x31, 0xde, 0xd3, 0xe9, 0xa0, 0x85,
	0xc6, 0xa9, 0xa5, 0x7b, 0x4a, 0xa7, 0x5d, 0xf2, 0xe2, 0xa8, 0x9d, 0x90, 0xda, 0xad, 0x18, 0xb5,
	0x0d, 0x88, 0x2f, 0x42, 0xad, 0x1f, 0xfa, 0xd2, 0x7a, 0xdf, 0x84, 0x38, 0x73, 0x6f, 0x21, 0xf4,
	0x4f, 0x8d, 0xdf, 0xc8, 0x0b, 0xb9, 0x63, 0xc1, 0x74, 0x55, 0x58, 0x3c, 0x80, 0x46, 0xb2, 0x55,
	0x8c, 0xca, 0x64, 0x41, 0xab, 0xff, 0x7e, 0x41, 0xed, 0x9c, 0x5b, 0x93, 0x09, 0x28, 0xba, 0x12,
	0x03, 0xe4, 0xf6, 0x2c, 0x1c, 0x2e, 0x4f, 0xc0, 0xef, 0x20, 0x98, 0x48, 0xeb, 0x26, 0xd9, 0xea,
	0xb5, 0x07, 0x90, 0x4a, 0x3b, 0xab, 0xce, 0xa8, 0x3e, 0xea, 0x71, 0x66, 0x3b, 0xe4, 0xe3, 0x19,
	0x68, 0x15, 0x8d, 0x78, 0x1a, 0xc6, 0xbb, 0x81, 0x1f, 0x88, 0xa8, 0x24, 0x9a, 0xb6, 0x19, 0x60,
	0x02, 0x75, 0xca, 0xbd, 0x30, 0x60, 0x5c, 0x59, 0xa7, 0x75, 0xad, 0xd8, 0xe9, 0x18, 0x5f, 0x45,
	0x30, 0x2e, 0x95, 0xab, 0x68, 0x42, 0x67, 0xff, 0xc1, 0xaf, 0xa1, 0x1d, 0x05, 0x34, 0x44, 0x9b,
	0xe0, 0xf8, 0x06, 0x82, 0xa9, 0xae, 0xcb, 0x3d, 0xe6, 0x69, 0x4b, 0xe8, 0xaa, 0x8d, 0xb4, 0x9a,
	0xb6, 0x1e, 0x42, 0x42, 0xa5, 0xd0, 0x71, 0x95, 0xa7, 0xe8, 0x8a, 0x06, 0x89, 0x0d, 0x90, 0x25,
	0x7e, 0x1f, 0x54, 0x63, 0xa8, 0xad, 0x49, 0xe6, 0x59, 0x2f, 0x44, 0x78, 0xf4, 0x4d, 0xf6, 0x30,
	0x4c, 0x57, 0x05, 0xc7, 0x5f, 0x20, 0x68, 0x15, 0x0d, 0x49, 0x91, 0xbd, 0x8b, 0x1e, 0x11, 0x21,
	0x25, 0xd0, 0x94, 0x63, 0xb3, 0x40, 0x12, 0x79, 0xef, 0x08, 0x1c, 0xad, 0x98, 0x86, 0x9f, 0x83,
	0xa9, 0xa8, 0x87, 0x76, 0x03, 0xdf, 0x09, 0x04, 0xeb, 0x31, 0x6e, 0xba, 0x96, 0xdd, 0x4a, 0xe0,
	0xd7, 0x22, 0x14, 0x9f, 0x84, 0x96, 0xb1, 0xbb, 0x2a, 0x10, 0x8e, 0x2b, 0x79, 0x44, 0x63, 0xd3,
	0x6e, 0x66, 0xe8, 0x39, 0xc9, 0xb5, 0xbf, 0xfc, 0x34, 0xcf, 0x13, 0x31, 0xad, 0xb9, 0x5f, 0x9f,
	0xf3, 0x3c, 0x81, 0x9f, 0x81, 0xa6, 0xc7, 0x64, 0x57, 0xb0, 0xbe, 0x01, 0xad, 0x17, 0x8d, 0xbb,
	0x02, 0x88, 0x3f, 0x2d, 0xab, 0x60, 0x77, 0x94, 0x48, 0xae, 0xd0, 0xcb, 0x37, 0x08, 0x9a, 0x49,
	0x4c, 0x3d, 0x25, 0x55, 0xcb, 0x07, 0xa3, 0x95, 0x78, 0x3e, 0x45, 0xb3, 0x80, 0xc9, 0x18, 0xbb,
	0xa8, 0x21, 0xf2, 0x07, 0x2a, 0x88, 0x6a, 0xc4, 0xcb, 0x64, 0x0e, 0x20, 0x14, 0x74, 0x9d, 0x0a,
	0xaa, 0xcf, 0xf7, 0x33, 0xd1, 0x94, 0x1c, 0xa2, 0x15, 0x4e, 0xb9, 0x1f, 0x5a, 0x67, 0x8d, 0xc2,
	0xf5, 0xb7, 0xee, 0x13, 0x97, 0x5d, 0x9f, 0x79, 0xd6, 0x4b, 0xf3, 0x68, 0xa1, 0x6e, 0x9b, 0x01,
	0xf9, 0x0d, 0x00, 0x0f, 0x93, 0x83, 0x7f, 0x40, 0x30, 0x99, 0x87, 0x13, 0xcd, 0x7f, 0x36, 0xe2,
	0xbb, 0x5a, 0x80, 0x4c, 0x63, 0x68, 0xe4, 0xf6, 0x99, 0xfc, 0x55, 0x87, 0x23, 0x43, 0x53, 0xf0,
	0x31, 0x18, 0x63, 0x9e, 0xe9, 0x9f, 0xc9, 0xed, 0x65, 0x8c, 0x79, 0xf8, 0xfb, 0xb2, 0x18, 0xbf,
	0x3a, 0x70, 0xab, 0xaf, 0x50, 0xec, 0x5d, 0x04, 0x35, 0xc9, 0xbc, 0x54, 0xa8, 0xb7, 0x0e, 0xe0,
	0xa2, 0x98, 0x97, 0x5c, 0xd4, 0xf4, 0x27, 0x79, 0xbb, 0xa0, 0xdd, 0x56, 0xb6, 0x9b, 0xd1, 0x36,
	0xa6, 0x85, 0x7f, 0x3a, 0x57, 0xf8, 0x5a, 0xb8, 0x8c, 0x47, 0x9f, 0x8e, 0xa0, 0xae, 0x0c, 0x78,
	0x2c, 0xc8, 0x66, 0x8c, 0xda, 0x11, 0x88, 0x67, 0xe0, 0xb1, 0x2d, 0xca, 0x7a, 0x1b, 0x2a, 0x16,
	0x62, 0x3c, 0x22, 0x9f, 0xd7, 0x60, 0x22, 0x4d, 0x03, 0xff, 0x88, 0xe0, 0x90, 0x3e, 0x51, 0x63,
	0x95, 0x7c, 0x7d, 0x80, 0x29, 0xd5, 0x5f, 0x46, 0x38, 0x7a, 0x45, 0xe4, 0xbb, 0x31, 0xa8, 0x27,
	0x08, 0x3e, 0x0e, 0xe3, 0x8c, 0x7b, 0x74, 0x3b, 0x22, 0xb7, 0x96, 0x48, 0xc5, 0x60, 0xf8, 0x97,
	0xb2, 0x5a, 0xee, 0xfc, 0x1f, 0x58, 0x18, 0x16, 0x10, 0x39, 0x5b, 0xbe, 0x7e, 0xe5, 0x38, 0x49,
	0xc8, 0x30, 0x35, 0x37, 0xa0, 0xf1, 0xdd, 0xcb, 0x0c, 0xc8, 0xcd, 0x06, 0x4c, 0xa4, 0x8f, 0x0c,
	0x7c, 0x05, 0xc1, 0x51, 0xc9, 0x7a, 0xdc, 0xf5, 0xf5, 0x6a, 0x93, 0x73, 0x25, 0x7d, 0x4e, 0xac,
	0xdc, 0xe7, 0xe3, 0xa5, 0x5d, 0xe1, 0xd3, 0xe4, 0x8f, 0x53, 0xcb, 0x4a, 0x62, 0x20, 0xbb, 0x00,
	0xd6, 0x7e, 0x3f, 0xc0, 0xd7, 0xd0, 0xbe, 0xaf, 0x37, 0xfa, 0x5f, 0x67, 0xf7, 0x8f, 0x1e, 0x78,
	0xe4, 0xd7, 0xfa, 0x3e, 0x4f, 0xb2, 0x5d, 0x04, 0xc0, 0xb8, 0xa2, 0x62, 0xdd, 0xed, 0x66, 0x4f,
	0xb2, 0xc1, 0x43, 0xc9, 0xb2, 0x9d, 0x05, 0x8e, 0x1f, 0x6d, 0x19, 0x40, 0xbe, 0x7c, 0x1c, 0xa6,
	0x4a, 0x76, 0xfc, 0x11, 0x82, 0x89, 0x14, 0x4b, 0x9a, 0xc6, 0x55, 0xf4, 0x48, 0x92, 0xcd, 0xc6,
	0x46, 0xf5, 0x59, 0x62, 0xe4, 0xcf, 0x71, 0xdd, 0x23, 0xf3, 0x56, 0xbc, 0x00, 0x93, 0x19, 0x12,
	0x77, 0xd9, 0xf4, 0xc5, 0xdf, 0x48, 0x4d, 0x17, 0x3c, 0xfc, 0x49, 0xb9, 0x1d, 0x5c, 0x1b, 0x89,
	0xf5, 0x55, 0x1c, 0x88, 0xb7, 0x11, 0x34, 0xb3, 0x49, 0x82, 0xae, 0x27, 0x27, 0xe3, 0xf5, 0xd1,
	0xc8, 0xb8, 0x90, 0x5b, 0x7c, 0x77, 0x4d, 0x31, 0x9b, 0xae, 0x93, 0x4e, 0xa1, 0x21, 0x3d, 0x5d,
	0xb5, 0x45, 0x85, 0xbd, 0x21, 0x37, 0xc6, 0x00, 0x0f, 0x7b, 0xc5, 0xb7, 0xca, 0x5b, 0xf6, 0xe1,
	0xa8, 0x12, 0x50, 0xd1, 0x95, 0x97, 0x0b, 0x24, 0x3c, 0x99, 0x17, 0x98, 0x61, 0x20, 0x03, 0xf0,
	0x09, 0x98, 0x94, 0x83, 0xb5, 0x6c, 0x82, 0xb9, 0xb2, 0x17, 0xb0, 0x97, 0xb7, 0xe0, 0xa9, 0x4d,
	0x1e, 0x0a, 0xa7, 0x9a, 0x00, 0x87, 0x6e, 0x2b, 0x3c, 0xdb, 0x7e, 0x75, 0xc0, 0x59, 0x48, 0xc5,
	0xb2, 0x99, 0x23, 0x57, 0x29, 0x97, 0x81, 0x90, 0xd6, 0x4d, 0x43, 0xdf, 0xec, 0x3e, 0xec, 0xd9,
	0xc7, 0xb5, 0xe7, 0xe5, 0xe2, 0xdf, 0x6b, 0x52, 0x5b, 0xce, 0x6f, 0xab, 0xa5, 0xb7, 0xbe, 0xdd,
	0x9b, 0x43, 0x77, 0xf7, 0xe6, 0xd0, 0x4f, 0x7b, 0x73, 0xe8, 0x4d, 0xbb, 0xc7, 0x54, 0x7b, 0xd3,
	0x84, 0xd1, 0xee, 0x3a, 0xac, 0x4b, 0xd7, 0xa8, 0xe8, 0x75, 0x36, 0xa8, 0xeb, 0xab, 0x8d, 0xb5,
	0x40, 0x2d, 0x32, 0xde, 0xa3, 0x52, 0x2d, 0x6e, 0x2a, 0xb6, 0xc8, 0x5d, 0xc5, 0x2e, 0xd3, 0x4e,
	0x78, 0xa9, 0xd7, 0xd9, 0x54, 0xac, 0xe3, 0x7a, 0x6e, 0xa8, 0xa8, 0x90, 0x1d, 0x67, 0x73, 0xc0,
	0x03, 0xd9, 0x91, 0xdd, 0x0d, 0xda, 0x77, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x41, 0x49, 0xdd,
	0x1c, 0x6e, 0x14, 0x00, 0x00,
}

func (m *NetworkInstances_SRTE) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTE) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTE) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mpls != nil {
		{
			size, err := m.Mpls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.SegmentRouting != nil {
		{
			size, err := m.SegmentRouting.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TePolicies != nil {
		{
			size, err := m.TePolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TePolicy) > 0 {
		for iNdEx := len(m.TePolicy) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TePolicy[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CandidatePaths != nil {
		{
			size, err := m.CandidatePaths.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Endpoint != nil {
		i -= len(*m.Endpoint)
		copy(dAtA[i:], *m.Endpoint)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Endpoint)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Color != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Color))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bsid != nil {
		i -= len(*m.Bsid)
		copy(dAtA[i:], *m.Bsid)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Bsid)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Endpoint != nil {
		i -= len(*m.Endpoint)
		copy(dAtA[i:], *m.Endpoint)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Endpoint)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Color != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Color))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CandidatePath) > 0 {
		for iNdEx := len(m.CandidatePath) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.CandidatePath[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SegmentLists != nil {
		{
			size, err := m.SegmentLists.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Discriminator != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Discriminator))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.OriginatorAddr != nil {
		i -= len(*m.OriginatorAddr)
		copy(dAtA[i:], *m.OriginatorAddr)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.OriginatorAddr)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.OriginatorAsn != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.OriginatorAsn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.ProtocolOrigin != nil {
		i -= len(*m.ProtocolOrigin)
		copy(dAtA[i:], *m.ProtocolOrigin)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.ProtocolOrigin)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Valid != nil {
		i--
		if *m.Valid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.Enlp != nil {
		i -= len(*m.Enlp)
		copy(dAtA[i:], *m.Enlp)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Enlp)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.Preference != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Preference))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Discriminator != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Discriminator))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.OriginatorAddr != nil {
		i -= len(*m.OriginatorAddr)
		copy(dAtA[i:], *m.OriginatorAddr)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.OriginatorAddr)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.OriginatorAsn != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.OriginatorAsn))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.ProtocolOrigin != nil {
		i -= len(*m.ProtocolOrigin)
		copy(dAtA[i:], *m.ProtocolOrigin)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.ProtocolOrigin)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SegmentList) > 0 {
		for iNdEx := len(m.SegmentList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SegmentList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sids != nil {
		{
			size, err := m.Sids.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Id != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Weight != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Weight))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.InvalidReason != nil {
		i -= len(*m.InvalidReason)
		copy(dAtA[i:], *m.InvalidReason)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.InvalidReason)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Valid != nil {
		i--
		if *m.Valid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Id != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Id))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Sid) > 0 {
		for iNdEx := len(m.Sid) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Sid[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Value != nil {
		i -= len(*m.Value)
		copy(dAtA[i:], *m.Value)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Value)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Index != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SignalingProtocols != nil {
		{
			size, err := m.SignalingProtocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SegmentRouting != nil {
		{
			size, err := m.SegmentRouting.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Interfaces != nil {
		{
			size, err := m.Interfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceRef != nil {
		{
			size, err := m.InterfaceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterface != nil {
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(*m.Subinterface))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintRpdSrtePolicyOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintRpdSrtePolicyOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovRpdSrtePolicyOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstances_SRTE) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.SegmentRouting != nil {
		l = m.SegmentRouting.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Mpls != nil {
		l = m.Mpls.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TePolicies != nil {
		l = m.TePolicies.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.TePolicy) > 0 {
		for _, e := range m.TePolicy {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Color != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Color))
	}
	if m.Endpoint != nil {
		l = len(*m.Endpoint)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.CandidatePaths != nil {
		l = m.CandidatePaths.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Color != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Color))
	}
	if m.Endpoint != nil {
		l = len(*m.Endpoint)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Bsid != nil {
		l = len(*m.Bsid)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CandidatePath) > 0 {
		for _, e := range m.CandidatePath {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProtocolOrigin != nil {
		l = len(*m.ProtocolOrigin)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.OriginatorAsn != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.OriginatorAsn))
	}
	if m.OriginatorAddr != nil {
		l = len(*m.OriginatorAddr)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Discriminator != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Discriminator))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.SegmentLists != nil {
		l = m.SegmentLists.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProtocolOrigin != nil {
		l = len(*m.ProtocolOrigin)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.OriginatorAsn != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.OriginatorAsn))
	}
	if m.OriginatorAddr != nil {
		l = len(*m.OriginatorAddr)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Discriminator != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Discriminator))
	}
	if m.Preference != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Preference))
	}
	if m.Enlp != nil {
		l = len(*m.Enlp)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Valid != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SegmentList) > 0 {
		for _, e := range m.SegmentList {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Id))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Sids != nil {
		l = m.Sids.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Id))
	}
	if m.Valid != nil {
		n += 3
	}
	if m.InvalidReason != nil {
		l = len(*m.InvalidReason)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Weight != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Weight))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Sid) > 0 {
		for _, e := range m.Sid {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Index))
	}
	if m.Value != nil {
		l = len(*m.Value)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignalingProtocols != nil {
		l = m.SignalingProtocols.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SegmentRouting != nil {
		l = m.SegmentRouting.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interfaces != nil {
		l = m.Interfaces.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.InterfaceRef != nil {
		l = m.InterfaceRef.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovRpdSrtePolicyOc(uint64(l))
	}
	if m.Subinterface != nil {
		n += 2 + sovRpdSrtePolicyOc(uint64(*m.Subinterface))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpdSrtePolicyOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRpdSrtePolicyOc(x uint64) (n int) {
	return sovRpdSrtePolicyOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstances_SRTE) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_SRTE: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_SRTE: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstances_SRTENetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentRouting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentRouting == nil {
				m.SegmentRouting = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingType{}
			}
			if err := m.SegmentRouting.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mpls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mpls == nil {
				m.Mpls = &NetworkInstances_SRTENetworkInstanceListMplsType{}
			}
			if err := m.Mpls.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_routing_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_routing_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TePolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TePolicies == nil {
				m.TePolicies = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType{}
			}
			if err := m.TePolicies.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_policies_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_policies_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TePolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TePolicy = append(m.TePolicy, &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList{})
			if err := m.TePolicy[len(m.TePolicy)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_policy_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_policy_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Color = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Endpoint = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidatePaths", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CandidatePaths == nil {
				m.CandidatePaths = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType{}
			}
			if err := m.CandidatePaths.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Color = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Endpoint = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bsid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Bsid = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: candidate_paths_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: candidate_paths_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidatePath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidatePath = append(m.CandidatePath, &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList{})
			if err := m.CandidatePath[len(m.CandidatePath)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: candidate_path_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: candidate_path_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtocolOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProtocolOrigin = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginatorAsn", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginatorAsn = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OriginatorAddr = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Discriminator", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Discriminator = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentLists", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentLists == nil {
				m.SegmentLists = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType{}
			}
			if err := m.SegmentLists.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtocolOrigin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProtocolOrigin = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginatorAsn", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OriginatorAsn = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginatorAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OriginatorAddr = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Discriminator", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Discriminator = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Preference", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Preference = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enlp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Enlp = &s
			iNdEx = postIndex
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Valid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Valid = &b
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_lists_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_lists_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SegmentList = append(m.SegmentList, &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList{})
			if err := m.SegmentList[len(m.SegmentList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_list_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_list_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sids", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sids == nil {
				m.Sids = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType{}
			}
			if err := m.Sids.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Id = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Valid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Valid = &b
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvalidReason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InvalidReason = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Weight = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sids_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sids_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sid = append(m.Sid, &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList{})
			if err := m.Sid[len(m.Sid)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sid_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sid_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListSegmentRoutingTypeTePoliciesTypeTePolicyListCandidatePathsTypeCandidatePathListSegmentListsTypeSegmentListListSidsTypeSidListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Value = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignalingProtocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SignalingProtocols == nil {
				m.SignalingProtocols = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType{}
			}
			if err := m.SignalingProtocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: signaling_protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: signaling_protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentRouting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentRouting == nil {
				m.SegmentRouting = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType{}
			}
			if err := m.SegmentRouting.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_routing_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_routing_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interfaces == nil {
				m.Interfaces = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType{}
			}
			if err := m.Interfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceRef == nil {
				m.InterfaceRef = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType{}
			}
			if err := m.InterfaceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_ref_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_ref_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstances_SRTENetworkInstanceListMplsTypeSignalingProtocolsTypeSegmentRoutingTypeInterfacesTypeInterfaceListInterfaceRefTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subinterface = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdSrtePolicyOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdSrtePolicyOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRpdSrtePolicyOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRpdSrtePolicyOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdSrtePolicyOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRpdSrtePolicyOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRpdSrtePolicyOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRpdSrtePolicyOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRpdSrtePolicyOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRpdSrtePolicyOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRpdSrtePolicyOc = fmt.Errorf("proto: unexpected end of group")
)
