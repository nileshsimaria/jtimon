// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpd_te_oc.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NetworkInstancesTe struct {
	NetworkInstance      []*NetworkInstancesTeNetworkInstanceList `protobuf:"bytes,151,rep,name=network_instance,json=networkInstance" json:"network_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *NetworkInstancesTe) Reset()         { *m = NetworkInstancesTe{} }
func (m *NetworkInstancesTe) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesTe) ProtoMessage()    {}
func (*NetworkInstancesTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0}
}
func (m *NetworkInstancesTe) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTe.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTe.Merge(m, src)
}
func (m *NetworkInstancesTe) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTe) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTe.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTe proto.InternalMessageInfo

func (m *NetworkInstancesTe) GetNetworkInstance() []*NetworkInstancesTeNetworkInstanceList {
	if m != nil {
		return m.NetworkInstance
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceList struct {
	Name                 *string                                        `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Mpls                 *NetworkInstancesTeNetworkInstanceListMplsType `protobuf:"bytes,151,opt,name=mpls" json:"mpls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceList) Reset()         { *m = NetworkInstancesTeNetworkInstanceList{} }
func (m *NetworkInstancesTeNetworkInstanceList) String() string { return proto.CompactTextString(m) }
func (*NetworkInstancesTeNetworkInstanceList) ProtoMessage()    {}
func (*NetworkInstancesTeNetworkInstanceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceList) GetMpls() *NetworkInstancesTeNetworkInstanceListMplsType {
	if m != nil {
		return m.Mpls
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsType struct {
	TeGlobalAttributes    *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType    `protobuf:"bytes,151,opt,name=te_global_attributes,json=teGlobalAttributes" json:"te_global_attributes,omitempty"`
	TeInterfaceAttributes *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType `protobuf:"bytes,152,opt,name=te_interface_attributes,json=teInterfaceAttributes" json:"te_interface_attributes,omitempty"`
	Lsps                  *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType                  `protobuf:"bytes,153,opt,name=lsps" json:"lsps,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                                                `json:"-"`
	XXX_unrecognized      []byte                                                                  `json:"-"`
	XXX_sizecache         int32                                                                   `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsType) GetTeGlobalAttributes() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType {
	if m != nil {
		return m.TeGlobalAttributes
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) GetTeInterfaceAttributes() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType {
	if m != nil {
		return m.TeInterfaceAttributes
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) GetLsps() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType {
	if m != nil {
		return m.Lsps
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType struct {
	Srlgs                *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType           `protobuf:"bytes,151,opt,name=srlgs" json:"srlgs,omitempty"`
	MplsAdminGroups      *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType `protobuf:"bytes,152,opt,name=mpls_admin_groups,json=mplsAdminGroups" json:"mpls_admin_groups,omitempty"`
	TeLspTimers          *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType     `protobuf:"bytes,153,opt,name=te_lsp_timers,json=teLspTimers" json:"te_lsp_timers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) GetSrlgs() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType {
	if m != nil {
		return m.Srlgs
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) GetMplsAdminGroups() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType {
	if m != nil {
		return m.MplsAdminGroups
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) GetTeLspTimers() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType {
	if m != nil {
		return m.TeLspTimers
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType struct {
	Srlg                 []*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList `protobuf:"bytes,151,rep,name=srlg" json:"srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) GetSrlg() []*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList {
	if m != nil {
		return m.Srlg
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList struct {
	Name                 *string                                                                                        `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                          `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType struct {
	Name                 *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Value                *uint32  `protobuf:"varint,52,opt,name=value" json:"value,omitempty"`
	Cost                 *uint32  `protobuf:"varint,53,opt,name=cost" json:"cost,omitempty"`
	FloodingType         *string  `protobuf:"bytes,54,opt,name=flooding_type,json=floodingType" json:"flooding_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) GetCost() uint32 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) GetFloodingType() string {
	if m != nil && m.FloodingType != nil {
		return *m.FloodingType
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType struct {
	AdminGroup           []*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList `protobuf:"bytes,151,rep,name=admin_group,json=adminGroup" json:"admin_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                   `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) GetAdminGroup() []*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList {
	if m != nil {
		return m.AdminGroup
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList struct {
	AdminGroupName       *string                                                                                                        `protobuf:"bytes,52,opt,name=admin_group_name,json=adminGroupName" json:"admin_group_name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                       `json:"-"`
	XXX_unrecognized     []byte                                                                                                         `json:"-"`
	XXX_sizecache        int32                                                                                                          `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) GetAdminGroupName() string {
	if m != nil && m.AdminGroupName != nil {
		return *m.AdminGroupName
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType struct {
	AdminGroupName       *string  `protobuf:"bytes,51,opt,name=admin_group_name,json=adminGroupName" json:"admin_group_name,omitempty"`
	BitPosition          *uint32  `protobuf:"varint,52,opt,name=bit_position,json=bitPosition" json:"bit_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) GetAdminGroupName() string {
	if m != nil && m.AdminGroupName != nil {
		return *m.AdminGroupName
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) GetBitPosition() uint32 {
	if m != nil && m.BitPosition != nil {
		return *m.BitPosition
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                        `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType struct {
	InstallDelay         *uint32  `protobuf:"varint,51,opt,name=install_delay,json=installDelay" json:"install_delay,omitempty"`
	CleanupDelay         *uint32  `protobuf:"varint,52,opt,name=cleanup_delay,json=cleanupDelay" json:"cleanup_delay,omitempty"`
	ReoptimizeTimer      *uint32  `protobuf:"varint,53,opt,name=reoptimize_timer,json=reoptimizeTimer" json:"reoptimize_timer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) GetInstallDelay() uint32 {
	if m != nil && m.InstallDelay != nil {
		return *m.InstallDelay
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) GetCleanupDelay() uint32 {
	if m != nil && m.CleanupDelay != nil {
		return *m.CleanupDelay
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) GetReoptimizeTimer() uint32 {
	if m != nil && m.ReoptimizeTimer != nil {
		return *m.ReoptimizeTimer
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType struct {
	Interface            []*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                  `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) GetInterface() []*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList struct {
	InterfaceId          *string                                                                                                      `protobuf:"bytes,52,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType                `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	InterfaceRef         *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType         `protobuf:"bytes,152,opt,name=interface_ref,json=interfaceRef" json:"interface_ref,omitempty"`
	IgpFloodingBandwidth *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType `protobuf:"bytes,153,opt,name=igp_flooding_bandwidth,json=igpFloodingBandwidth" json:"igp_flooding_bandwidth,omitempty"`
	BandwidthMeasurement *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType `protobuf:"bytes,154,opt,name=bandwidth_measurement,json=bandwidthMeasurement" json:"bandwidth_measurement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                        `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) GetInterfaceRef() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType {
	if m != nil {
		return m.InterfaceRef
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) GetIgpFloodingBandwidth() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType {
	if m != nil {
		return m.IgpFloodingBandwidth
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) GetBandwidthMeasurement() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType {
	if m != nil {
		return m.BandwidthMeasurement
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType struct {
	InterfaceId          *string  `protobuf:"bytes,51,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	SrlgMembership       []string `protobuf:"bytes,52,rep,name=srlg_membership,json=srlgMembership" json:"srlg_membership,omitempty"`
	AdminGroup           []string `protobuf:"bytes,53,rep,name=admin_group,json=adminGroup" json:"admin_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) GetInterfaceId() string {
	if m != nil && m.InterfaceId != nil {
		return *m.InterfaceId
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) GetSrlgMembership() []string {
	if m != nil {
		return m.SrlgMembership
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) GetAdminGroup() []string {
	if m != nil {
		return m.AdminGroup
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                      `json:"-"`
	XXX_unrecognized     []byte                                                                                                        `json:"-"`
	XXX_sizecache        int32                                                                                                         `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType struct {
	Interface            *string  `protobuf:"bytes,51,opt,name=interface" json:"interface,omitempty"`
	Subinterface         *uint32  `protobuf:"varint,52,opt,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) GetInterface() string {
	if m != nil && m.Interface != nil {
		return *m.Interface
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) GetSubinterface() uint32 {
	if m != nil && m.Subinterface != nil {
		return *m.Subinterface
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType struct {
	ThresholdType        *string  `protobuf:"bytes,51,opt,name=threshold_type,json=thresholdType" json:"threshold_type,omitempty"`
	DeltaPercentage      *uint32  `protobuf:"varint,52,opt,name=delta_percentage,json=deltaPercentage" json:"delta_percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) GetThresholdType() string {
	if m != nil && m.ThresholdType != nil {
		return *m.ThresholdType
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) GetDeltaPercentage() uint32 {
	if m != nil && m.DeltaPercentage != nil {
		return *m.DeltaPercentage
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 3}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType struct {
	LastCalculatedSrUtilisation *uint64  `protobuf:"varint,51,opt,name=last_calculated_sr_utilisation,json=lastCalculatedSrUtilisation" json:"last_calculated_sr_utilisation,omitempty"`
	LastSampleMeasuredSrUtil    *uint64  `protobuf:"varint,52,opt,name=last_sample_measured_sr_util,json=lastSampleMeasuredSrUtil" json:"last_sample_measured_sr_util,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 1, 0, 3, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) GetLastCalculatedSrUtilisation() uint64 {
	if m != nil && m.LastCalculatedSrUtilisation != nil {
		return *m.LastCalculatedSrUtilisation
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) GetLastSampleMeasuredSrUtil() uint64 {
	if m != nil && m.LastSampleMeasuredSrUtil != nil {
		return *m.LastSampleMeasuredSrUtil
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsType struct {
	ConstrainedPath      *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType `protobuf:"bytes,151,opt,name=constrained_path,json=constrainedPath" json:"constrained_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) GetConstrainedPath() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType {
	if m != nil {
		return m.ConstrainedPath
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType struct {
	NamedExplicitPaths   *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType `protobuf:"bytes,151,opt,name=named_explicit_paths,json=namedExplicitPaths" json:"named_explicit_paths,omitempty"`
	Tunnels              *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType            `protobuf:"bytes,152,opt,name=tunnels" json:"tunnels,omitempty"`
	ContainerTunnels     *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType   `protobuf:"bytes,153,opt,name=container_tunnels,json=containerTunnels" json:"container_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                        `json:"-"`
	XXX_unrecognized     []byte                                                                                          `json:"-"`
	XXX_sizecache        int32                                                                                           `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) ProtoMessage() {}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) GetNamedExplicitPaths() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType {
	if m != nil {
		return m.NamedExplicitPaths
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) GetTunnels() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType {
	if m != nil {
		return m.Tunnels
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) GetContainerTunnels() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType {
	if m != nil {
		return m.ContainerTunnels
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType struct {
	NamedExplicitPath    []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList `protobuf:"bytes,151,rep,name=named_explicit_path,json=namedExplicitPath" json:"named_explicit_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) GetNamedExplicitPath() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList {
	if m != nil {
		return m.NamedExplicitPath
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList struct {
	Name                 *string                                                                                                                                      `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType                `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	ExplicitRouteObjects *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType `protobuf:"bytes,152,opt,name=explicit_route_objects,json=explicitRouteObjects" json:"explicit_route_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) GetExplicitRouteObjects() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType {
	if m != nil {
		return m.ExplicitRouteObjects
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType struct {
	Name                 *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType struct {
	ExplicitRouteObject  []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList `protobuf:"bytes,151,rep,name=explicit_route_object,json=explicitRouteObject" json:"explicit_route_object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) GetExplicitRouteObject() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList {
	if m != nil {
		return m.ExplicitRouteObject
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList struct {
	Index                *uint32                                                                                                                                                                      `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType struct {
	Address              *string  `protobuf:"bytes,51,opt,name=address" json:"address,omitempty"`
	HopType              *string  `protobuf:"bytes,52,opt,name=hop_type,json=hopType" json:"hop_type,omitempty"`
	Index                *uint32  `protobuf:"varint,53,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 0, 0, 1, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetHopType() string {
	if m != nil && m.HopType != nil {
		return *m.HopType
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType struct {
	Tunnel               []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList `protobuf:"bytes,151,rep,name=tunnel" json:"tunnel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                            `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) GetTunnel() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList {
	if m != nil {
		return m.Tunnel
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList struct {
	Name                 *string                                                                                                               `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	Source               *string                                                                                                               `protobuf:"bytes,52,opt,name=source" json:"source,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType               `protobuf:"bytes,53,opt,name=state" json:"state,omitempty"`
	Bandwidth            *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType           `protobuf:"bytes,152,opt,name=bandwidth" json:"bandwidth,omitempty"`
	P2PTunnelAttributes  *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType `protobuf:"bytes,153,opt,name=p2p_tunnel_attributes,json=p2pTunnelAttributes" json:"p2p_tunnel_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) GetBandwidth() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) GetP2PTunnelAttributes() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType {
	if m != nil {
		return m.P2PTunnelAttributes
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType struct {
	Name                     *string                                                                                                             `protobuf:"bytes,54,opt,name=name" json:"name,omitempty"`
	Type                     *string                                                                                                             `protobuf:"bytes,55,opt,name=type" json:"type,omitempty"`
	SignalingProtocol        *string                                                                                                             `protobuf:"bytes,56,opt,name=signaling_protocol,json=signalingProtocol" json:"signaling_protocol,omitempty"`
	Description              *string                                                                                                             `protobuf:"bytes,57,opt,name=description" json:"description,omitempty"`
	AdminStatus              *string                                                                                                             `protobuf:"bytes,58,opt,name=admin_status,json=adminStatus" json:"admin_status,omitempty"`
	Preference               *uint32                                                                                                             `protobuf:"varint,59,opt,name=preference" json:"preference,omitempty"`
	MetricType               *string                                                                                                             `protobuf:"bytes,60,opt,name=metric_type,json=metricType" json:"metric_type,omitempty"`
	Metric                   *int32                                                                                                              `protobuf:"varint,61,opt,name=metric" json:"metric,omitempty"`
	ProtectionStyleRequested *string                                                                                                             `protobuf:"bytes,63,opt,name=protection_style_requested,json=protectionStyleRequested" json:"protection_style_requested,omitempty"`
	ReoptimizeTimer          *uint32                                                                                                             `protobuf:"varint,64,opt,name=reoptimize_timer,json=reoptimizeTimer" json:"reoptimize_timer,omitempty"`
	Source                   *string                                                                                                             `protobuf:"bytes,65,opt,name=source" json:"source,omitempty"`
	SoftPreemption           *bool                                                                                                               `protobuf:"varint,66,opt,name=soft_preemption,json=softPreemption" json:"soft_preemption,omitempty"`
	SetupPriority            *uint32                                                                                                             `protobuf:"varint,67,opt,name=setup_priority,json=setupPriority" json:"setup_priority,omitempty"`
	HoldPriority             *uint32                                                                                                             `protobuf:"varint,68,opt,name=hold_priority,json=holdPriority" json:"hold_priority,omitempty"`
	OperStatus               *string                                                                                                             `protobuf:"bytes,69,opt,name=oper_status,json=operStatus" json:"oper_status,omitempty"`
	Counters                 *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	InheritedMetric          *uint32                                                                                                             `protobuf:"varint,62,opt,name=inherited_metric,json=inheritedMetric" json:"inherited_metric,omitempty"`
	TunnelId                 *uint32                                                                                                             `protobuf:"varint,52,opt,name=tunnel_id,json=tunnelId" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                                                                            `json:"-"`
	XXX_unrecognized         []byte                                                                                                              `json:"-"`
	XXX_sizecache            int32                                                                                                               `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetSignalingProtocol() string {
	if m != nil && m.SignalingProtocol != nil {
		return *m.SignalingProtocol
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetAdminStatus() string {
	if m != nil && m.AdminStatus != nil {
		return *m.AdminStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetPreference() uint32 {
	if m != nil && m.Preference != nil {
		return *m.Preference
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetMetricType() string {
	if m != nil && m.MetricType != nil {
		return *m.MetricType
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetMetric() int32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetProtectionStyleRequested() string {
	if m != nil && m.ProtectionStyleRequested != nil {
		return *m.ProtectionStyleRequested
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetReoptimizeTimer() uint32 {
	if m != nil && m.ReoptimizeTimer != nil {
		return *m.ReoptimizeTimer
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetSoftPreemption() bool {
	if m != nil && m.SoftPreemption != nil {
		return *m.SoftPreemption
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetSetupPriority() uint32 {
	if m != nil && m.SetupPriority != nil {
		return *m.SetupPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetHoldPriority() uint32 {
	if m != nil && m.HoldPriority != nil {
		return *m.HoldPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetOperStatus() string {
	if m != nil && m.OperStatus != nil {
		return *m.OperStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetCounters() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetInheritedMetric() uint32 {
	if m != nil && m.InheritedMetric != nil {
		return *m.InheritedMetric
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) GetTunnelId() uint32 {
	if m != nil && m.TunnelId != nil {
		return *m.TunnelId
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType struct {
	PathChanges            *uint64  `protobuf:"varint,51,opt,name=path_changes,json=pathChanges" json:"path_changes,omitempty"`
	StateChanges           *uint64  `protobuf:"varint,52,opt,name=state_changes,json=stateChanges" json:"state_changes,omitempty"`
	OnlineTime             *string  `protobuf:"bytes,53,opt,name=online_time,json=onlineTime" json:"online_time,omitempty"`
	CurrentPathTime        *string  `protobuf:"bytes,54,opt,name=current_path_time,json=currentPathTime" json:"current_path_time,omitempty"`
	NextReoptimizationTime *string  `protobuf:"bytes,55,opt,name=next_reoptimization_time,json=nextReoptimizationTime" json:"next_reoptimization_time,omitempty"`
	LastTransitionTime     *string  `protobuf:"bytes,56,opt,name=last_transition_time,json=lastTransitionTime" json:"last_transition_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetPathChanges() uint64 {
	if m != nil && m.PathChanges != nil {
		return *m.PathChanges
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetStateChanges() uint64 {
	if m != nil && m.StateChanges != nil {
		return *m.StateChanges
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetOnlineTime() string {
	if m != nil && m.OnlineTime != nil {
		return *m.OnlineTime
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetCurrentPathTime() string {
	if m != nil && m.CurrentPathTime != nil {
		return *m.CurrentPathTime
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetNextReoptimizationTime() string {
	if m != nil && m.NextReoptimizationTime != nil {
		return *m.NextReoptimizationTime
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) GetLastTransitionTime() string {
	if m != nil && m.LastTransitionTime != nil {
		return *m.LastTransitionTime
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType         `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	AutoBandwidth        *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType `protobuf:"bytes,152,opt,name=auto_bandwidth,json=autoBandwidth" json:"auto_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                                                        `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) GetAutoBandwidth() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType {
	if m != nil {
		return m.AutoBandwidth
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType struct {
	SpecificationType    *string  `protobuf:"bytes,51,opt,name=specification_type,json=specificationType" json:"specification_type,omitempty"`
	SetBandwidth         *uint64  `protobuf:"varint,52,opt,name=set_bandwidth,json=setBandwidth" json:"set_bandwidth,omitempty"`
	SignaledBandwidth    *uint64  `protobuf:"varint,53,opt,name=signaled_bandwidth,json=signaledBandwidth" json:"signaled_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) GetSpecificationType() string {
	if m != nil && m.SpecificationType != nil {
		return *m.SpecificationType
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) GetSetBandwidth() uint64 {
	if m != nil && m.SetBandwidth != nil {
		return *m.SetBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) GetSignaledBandwidth() uint64 {
	if m != nil && m.SignaledBandwidth != nil {
		return *m.SignaledBandwidth
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType     `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Overflow             *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType  `protobuf:"bytes,152,opt,name=overflow" json:"overflow,omitempty"`
	Underflow            *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType `protobuf:"bytes,153,opt,name=underflow" json:"underflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) GetOverflow() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType {
	if m != nil {
		return m.Overflow
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) GetUnderflow() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType {
	if m != nil {
		return m.Underflow
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType struct {
	Enabled              *bool    `protobuf:"varint,51,opt,name=enabled" json:"enabled,omitempty"`
	MinBw                *uint64  `protobuf:"varint,52,opt,name=min_bw,json=minBw" json:"min_bw,omitempty"`
	MaxBw                *uint64  `protobuf:"varint,53,opt,name=max_bw,json=maxBw" json:"max_bw,omitempty"`
	AdjustInterval       *uint32  `protobuf:"varint,54,opt,name=adjust_interval,json=adjustInterval" json:"adjust_interval,omitempty"`
	AdjustThreshold      *uint32  `protobuf:"varint,55,opt,name=adjust_threshold,json=adjustThreshold" json:"adjust_threshold,omitempty"`
	MaxAverageBw         *uint64  `protobuf:"varint,61,opt,name=max_average_bw,json=maxAverageBw" json:"max_average_bw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetMinBw() uint64 {
	if m != nil && m.MinBw != nil {
		return *m.MinBw
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetMaxBw() uint64 {
	if m != nil && m.MaxBw != nil {
		return *m.MaxBw
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetAdjustInterval() uint32 {
	if m != nil && m.AdjustInterval != nil {
		return *m.AdjustInterval
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetAdjustThreshold() uint32 {
	if m != nil && m.AdjustThreshold != nil {
		return *m.AdjustThreshold
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) GetMaxAverageBw() uint64 {
	if m != nil && m.MaxAverageBw != nil {
		return *m.MaxAverageBw
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType struct {
	Enabled              *bool    `protobuf:"varint,51,opt,name=enabled" json:"enabled,omitempty"`
	TriggerEventCount    *uint32  `protobuf:"varint,52,opt,name=trigger_event_count,json=triggerEventCount" json:"trigger_event_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) GetTriggerEventCount() uint32 {
	if m != nil && m.TriggerEventCount != nil {
		return *m.TriggerEventCount
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType struct {
	Enabled              *bool    `protobuf:"varint,51,opt,name=enabled" json:"enabled,omitempty"`
	TriggerEventCount    *uint32  `protobuf:"varint,52,opt,name=trigger_event_count,json=triggerEventCount" json:"trigger_event_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 1, 1, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) GetTriggerEventCount() uint32 {
	if m != nil && m.TriggerEventCount != nil {
		return *m.TriggerEventCount
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType             `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	P2PPrimaryPath       *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType    `protobuf:"bytes,152,opt,name=p2p_primary_path,json=p2pPrimaryPath" json:"p2p_primary_path,omitempty"`
	P2PSecondaryPaths    *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType `protobuf:"bytes,153,opt,name=p2p_secondary_paths,json=p2pSecondaryPaths" json:"p2p_secondary_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                                                      `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) GetP2PPrimaryPath() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType {
	if m != nil {
		return m.P2PPrimaryPath
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) GetP2PSecondaryPaths() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType {
	if m != nil {
		return m.P2PSecondaryPaths
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType struct {
	Destination          *string  `protobuf:"bytes,51,opt,name=destination" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) GetDestination() string {
	if m != nil && m.Destination != nil {
		return *m.Destination
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType struct {
	P2PPrimaryPath       []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList `protobuf:"bytes,151,rep,name=p2p_primary_path,json=p2pPrimaryPath" json:"p2p_primary_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) GetP2PPrimaryPath() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList {
	if m != nil {
		return m.P2PPrimaryPath
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList struct {
	Name                 *string                                                                                                                                                                     `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType          `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	AdminGroups          *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType    `protobuf:"bytes,152,opt,name=admin_groups,json=adminGroups" json:"admin_groups,omitempty"`
	LspInstances         []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList `protobuf:"bytes,153,rep,name=lsp_instances,json=lspInstances" json:"lsp_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                       `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) GetAdminGroups() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType {
	if m != nil {
		return m.AdminGroups
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) GetLspInstances() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList {
	if m != nil {
		return m.LspInstances
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType struct {
	Name                   *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	UseCspf                *bool    `protobuf:"varint,52,opt,name=use_cspf,json=useCspf" json:"use_cspf,omitempty"`
	CspfTiebreaker         *string  `protobuf:"bytes,53,opt,name=cspf_tiebreaker,json=cspfTiebreaker" json:"cspf_tiebreaker,omitempty"`
	ExplicitPathName       *string  `protobuf:"bytes,56,opt,name=explicit_path_name,json=explicitPathName" json:"explicit_path_name,omitempty"`
	Preference             *uint32  `protobuf:"varint,61,opt,name=preference" json:"preference,omitempty"`
	SetupPriority          *uint32  `protobuf:"varint,62,opt,name=setup_priority,json=setupPriority" json:"setup_priority,omitempty"`
	HoldPriority           *uint32  `protobuf:"varint,63,opt,name=hold_priority,json=holdPriority" json:"hold_priority,omitempty"`
	RetryTimer             *uint32  `protobuf:"varint,64,opt,name=retry_timer,json=retryTimer" json:"retry_timer,omitempty"`
	NotifyStatus           *string  `protobuf:"bytes,81,opt,name=notify_status,json=notifyStatus" json:"notify_status,omitempty"`
	CspfStatus             *string  `protobuf:"bytes,54,opt,name=cspf_status,json=cspfStatus" json:"cspf_status,omitempty"`
	CspfMetric             *uint64  `protobuf:"varint,55,opt,name=cspf_metric,json=cspfMetric" json:"cspf_metric,omitempty"`
	AssociatedRsvpSessions []uint32 `protobuf:"varint,59,rep,name=associated_rsvp_sessions,json=associatedRsvpSessions" json:"associated_rsvp_sessions,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetUseCspf() bool {
	if m != nil && m.UseCspf != nil {
		return *m.UseCspf
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetCspfTiebreaker() string {
	if m != nil && m.CspfTiebreaker != nil {
		return *m.CspfTiebreaker
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetExplicitPathName() string {
	if m != nil && m.ExplicitPathName != nil {
		return *m.ExplicitPathName
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetPreference() uint32 {
	if m != nil && m.Preference != nil {
		return *m.Preference
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetSetupPriority() uint32 {
	if m != nil && m.SetupPriority != nil {
		return *m.SetupPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetHoldPriority() uint32 {
	if m != nil && m.HoldPriority != nil {
		return *m.HoldPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetRetryTimer() uint32 {
	if m != nil && m.RetryTimer != nil {
		return *m.RetryTimer
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetNotifyStatus() string {
	if m != nil && m.NotifyStatus != nil {
		return *m.NotifyStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetCspfStatus() string {
	if m != nil && m.CspfStatus != nil {
		return *m.CspfStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetCspfMetric() uint64 {
	if m != nil && m.CspfMetric != nil {
		return *m.CspfMetric
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) GetAssociatedRsvpSessions() []uint32 {
	if m != nil {
		return m.AssociatedRsvpSessions
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                          `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                            `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                             `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType struct {
	ExcludeGroup         []string `protobuf:"bytes,51,rep,name=exclude_group,json=excludeGroup" json:"exclude_group,omitempty"`
	IncludeAllGroup      []string `protobuf:"bytes,52,rep,name=include_all_group,json=includeAllGroup" json:"include_all_group,omitempty"`
	IncludeAnyGroup      []string `protobuf:"bytes,53,rep,name=include_any_group,json=includeAnyGroup" json:"include_any_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) GetExcludeGroup() []string {
	if m != nil {
		return m.ExcludeGroup
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) GetIncludeAllGroup() []string {
	if m != nil {
		return m.IncludeAllGroup
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) GetIncludeAnyGroup() []string {
	if m != nil {
		return m.IncludeAnyGroup
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList struct {
	LocalIndex           *uint32                                                                                                                                                                            `protobuf:"varint,51,opt,name=local_index,json=localIndex" json:"local_index,omitempty"`
	LspId                *uint32                                                                                                                                                                            `protobuf:"varint,52,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	Subcode              *string                                                                                                                                                                            `protobuf:"bytes,53,opt,name=subcode" json:"subcode,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                              `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) GetLocalIndex() uint32 {
	if m != nil && m.LocalIndex != nil {
		return *m.LocalIndex
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) GetLspId() uint32 {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) GetSubcode() string {
	if m != nil && m.Subcode != nil {
		return *m.Subcode
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType struct {
	LocalIndex           *uint32  `protobuf:"varint,51,opt,name=local_index,json=localIndex" json:"local_index,omitempty"`
	NotifyStatus         *string  `protobuf:"bytes,52,opt,name=notify_status,json=notifyStatus" json:"notify_status,omitempty"`
	Metric               *int32   `protobuf:"varint,53,opt,name=metric" json:"metric,omitempty"`
	Bandwidth            *uint64  `protobuf:"varint,54,opt,name=bandwidth" json:"bandwidth,omitempty"`
	MaxAvgBandwidth      *uint64  `protobuf:"varint,55,opt,name=max_avg_bandwidth,json=maxAvgBandwidth" json:"max_avg_bandwidth,omitempty"`
	Reason               *string  `protobuf:"bytes,56,opt,name=reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetLocalIndex() uint32 {
	if m != nil && m.LocalIndex != nil {
		return *m.LocalIndex
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetNotifyStatus() string {
	if m != nil && m.NotifyStatus != nil {
		return *m.NotifyStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetMetric() int32 {
	if m != nil && m.Metric != nil {
		return *m.Metric
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetBandwidth() uint64 {
	if m != nil && m.Bandwidth != nil {
		return *m.Bandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetMaxAvgBandwidth() uint64 {
	if m != nil && m.MaxAvgBandwidth != nil {
		return *m.MaxAvgBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType struct {
	P2PSecondaryPath     []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList `protobuf:"bytes,151,rep,name=p2p_secondary_path,json=p2pSecondaryPath" json:"p2p_secondary_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) GetP2PSecondaryPath() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList {
	if m != nil {
		return m.P2PSecondaryPath
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList struct {
	Name                 *string                                                                                                                                                                          `protobuf:"bytes,52,opt,name=name" json:"name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType          `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	AdminGroups          *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType    `protobuf:"bytes,152,opt,name=admin_groups,json=adminGroups" json:"admin_groups,omitempty"`
	LspInstances         []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList `protobuf:"bytes,153,rep,name=lsp_instances,json=lspInstances" json:"lsp_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                           `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                            `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) GetAdminGroups() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType {
	if m != nil {
		return m.AdminGroups
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) GetLspInstances() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList {
	if m != nil {
		return m.LspInstances
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType struct {
	Name                   *string  `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	UseCspf                *bool    `protobuf:"varint,52,opt,name=use_cspf,json=useCspf" json:"use_cspf,omitempty"`
	CspfTiebreaker         *string  `protobuf:"bytes,53,opt,name=cspf_tiebreaker,json=cspfTiebreaker" json:"cspf_tiebreaker,omitempty"`
	ExplicitPathName       *string  `protobuf:"bytes,54,opt,name=explicit_path_name,json=explicitPathName" json:"explicit_path_name,omitempty"`
	Preference             *uint32  `protobuf:"varint,55,opt,name=preference" json:"preference,omitempty"`
	SetupPriority          *uint32  `protobuf:"varint,56,opt,name=setup_priority,json=setupPriority" json:"setup_priority,omitempty"`
	HoldPriority           *uint32  `protobuf:"varint,57,opt,name=hold_priority,json=holdPriority" json:"hold_priority,omitempty"`
	RetryTimer             *uint32  `protobuf:"varint,58,opt,name=retry_timer,json=retryTimer" json:"retry_timer,omitempty"`
	AssociatedRsvpSessions []uint32 `protobuf:"varint,59,rep,name=associated_rsvp_sessions,json=associatedRsvpSessions" json:"associated_rsvp_sessions,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetUseCspf() bool {
	if m != nil && m.UseCspf != nil {
		return *m.UseCspf
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetCspfTiebreaker() string {
	if m != nil && m.CspfTiebreaker != nil {
		return *m.CspfTiebreaker
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetExplicitPathName() string {
	if m != nil && m.ExplicitPathName != nil {
		return *m.ExplicitPathName
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetPreference() uint32 {
	if m != nil && m.Preference != nil {
		return *m.Preference
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetSetupPriority() uint32 {
	if m != nil && m.SetupPriority != nil {
		return *m.SetupPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetHoldPriority() uint32 {
	if m != nil && m.HoldPriority != nil {
		return *m.HoldPriority
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetRetryTimer() uint32 {
	if m != nil && m.RetryTimer != nil {
		return *m.RetryTimer
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) GetAssociatedRsvpSessions() []uint32 {
	if m != nil {
		return m.AssociatedRsvpSessions
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType struct {
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                               `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                 `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                  `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0, 1}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType struct {
	ExcludeGroup         []string `protobuf:"bytes,51,rep,name=exclude_group,json=excludeGroup" json:"exclude_group,omitempty"`
	IncludeAllGroup      []string `protobuf:"bytes,52,rep,name=include_all_group,json=includeAllGroup" json:"include_all_group,omitempty"`
	IncludeAnyGroup      []string `protobuf:"bytes,53,rep,name=include_any_group,json=includeAnyGroup" json:"include_any_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0, 1, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) GetExcludeGroup() []string {
	if m != nil {
		return m.ExcludeGroup
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) GetIncludeAllGroup() []string {
	if m != nil {
		return m.IncludeAllGroup
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) GetIncludeAnyGroup() []string {
	if m != nil {
		return m.IncludeAnyGroup
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList struct {
	LocalIndex           *uint32                                                                                                                                                                                 `protobuf:"varint,51,opt,name=local_index,json=localIndex" json:"local_index,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	LspId                *uint32                                                                                                                                                                                 `protobuf:"varint,52,opt,name=lsp_id,json=lspId" json:"lsp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                                                                                                   `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) GetLocalIndex() uint32 {
	if m != nil && m.LocalIndex != nil {
		return *m.LocalIndex
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) GetLspId() uint32 {
	if m != nil && m.LspId != nil {
		return *m.LspId
	}
	return 0
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType struct {
	NotifyStatus         *string  `protobuf:"bytes,52,opt,name=notify_status,json=notifyStatus" json:"notify_status,omitempty"`
	Reason               *string  `protobuf:"bytes,56,opt,name=reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 1, 0, 2, 2, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) GetNotifyStatus() string {
	if m != nil && m.NotifyStatus != nil {
		return *m.NotifyStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType struct {
	ContainerTunnel      []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList `protobuf:"bytes,151,rep,name=container_tunnel,json=containerTunnel" json:"container_tunnel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                              `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 2}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) GetContainerTunnel() []*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList {
	if m != nil {
		return m.ContainerTunnel
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList struct {
	Name                 *string                                                                                                                   `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State                *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                                                                    `json:"-"`
	XXX_sizecache        int32                                                                                                                     `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 2, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) GetState() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType struct {
	Name                      *string                                                                                                                               `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	OperState                 *string                                                                                                                               `protobuf:"bytes,52,opt,name=oper_state,json=operState" json:"oper_state,omitempty"`
	NormalizationStatus       *string                                                                                                                               `protobuf:"bytes,53,opt,name=normalization_status,json=normalizationStatus" json:"normalization_status,omitempty"`
	MemberCount               *uint32                                                                                                                               `protobuf:"varint,54,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	MinimumLspCount           *uint32                                                                                                                               `protobuf:"varint,55,opt,name=minimum_lsp_count,json=minimumLspCount" json:"minimum_lsp_count,omitempty"`
	MaximumLspCount           *uint32                                                                                                                               `protobuf:"varint,56,opt,name=maximum_lsp_count,json=maximumLspCount" json:"maximum_lsp_count,omitempty"`
	NormalizeTimer            *uint32                                                                                                                               `protobuf:"varint,57,opt,name=normalize_timer,json=normalizeTimer" json:"normalize_timer,omitempty"`
	NormalizeThreshold        *uint32                                                                                                                               `protobuf:"varint,58,opt,name=normalize_threshold,json=normalizeThreshold" json:"normalize_threshold,omitempty"`
	AggregateBandwidth        *uint64                                                                                                                               `protobuf:"varint,59,opt,name=aggregate_bandwidth,json=aggregateBandwidth" json:"aggregate_bandwidth,omitempty"`
	SampledAggregateBandwidth *uint64                                                                                                                               `protobuf:"varint,60,opt,name=sampled_aggregate_bandwidth,json=sampledAggregateBandwidth" json:"sampled_aggregate_bandwidth,omitempty"`
	MaxSignalingBandwidth     *uint64                                                                                                                               `protobuf:"varint,61,opt,name=max_signaling_bandwidth,json=maxSignalingBandwidth" json:"max_signaling_bandwidth,omitempty"`
	MinSignalingBandwidth     *uint64                                                                                                                               `protobuf:"varint,62,opt,name=min_signaling_bandwidth,json=minSignalingBandwidth" json:"min_signaling_bandwidth,omitempty"`
	SplittingBandwidth        *uint64                                                                                                                               `protobuf:"varint,63,opt,name=splitting_bandwidth,json=splittingBandwidth" json:"splitting_bandwidth,omitempty"`
	MergingBandwidth          *uint64                                                                                                                               `protobuf:"varint,64,opt,name=merging_bandwidth,json=mergingBandwidth" json:"merging_bandwidth,omitempty"`
	TimeToNormalize           *uint64                                                                                                                               `protobuf:"varint,65,opt,name=time_to_normalize,json=timeToNormalize" json:"time_to_normalize,omitempty"`
	IncrementalNormalization  *bool                                                                                                                                 `protobuf:"varint,66,opt,name=incremental_normalization,json=incrementalNormalization" json:"incremental_normalization,omitempty"`
	FailoverNormalization     *bool                                                                                                                                 `protobuf:"varint,67,opt,name=failover_normalization,json=failoverNormalization" json:"failover_normalization,omitempty"`
	Reason                    *string                                                                                                                               `protobuf:"bytes,68,opt,name=reason" json:"reason,omitempty"`
	Sampling                  *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType `protobuf:"bytes,151,opt,name=sampling" json:"sampling,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                                                                                                              `json:"-"`
	XXX_unrecognized          []byte                                                                                                                                `json:"-"`
	XXX_sizecache             int32                                                                                                                                 `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 2, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetOperState() string {
	if m != nil && m.OperState != nil {
		return *m.OperState
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetNormalizationStatus() string {
	if m != nil && m.NormalizationStatus != nil {
		return *m.NormalizationStatus
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMinimumLspCount() uint32 {
	if m != nil && m.MinimumLspCount != nil {
		return *m.MinimumLspCount
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMaximumLspCount() uint32 {
	if m != nil && m.MaximumLspCount != nil {
		return *m.MaximumLspCount
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetNormalizeTimer() uint32 {
	if m != nil && m.NormalizeTimer != nil {
		return *m.NormalizeTimer
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetNormalizeThreshold() uint32 {
	if m != nil && m.NormalizeThreshold != nil {
		return *m.NormalizeThreshold
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetAggregateBandwidth() uint64 {
	if m != nil && m.AggregateBandwidth != nil {
		return *m.AggregateBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetSampledAggregateBandwidth() uint64 {
	if m != nil && m.SampledAggregateBandwidth != nil {
		return *m.SampledAggregateBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMaxSignalingBandwidth() uint64 {
	if m != nil && m.MaxSignalingBandwidth != nil {
		return *m.MaxSignalingBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMinSignalingBandwidth() uint64 {
	if m != nil && m.MinSignalingBandwidth != nil {
		return *m.MinSignalingBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetSplittingBandwidth() uint64 {
	if m != nil && m.SplittingBandwidth != nil {
		return *m.SplittingBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetMergingBandwidth() uint64 {
	if m != nil && m.MergingBandwidth != nil {
		return *m.MergingBandwidth
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetTimeToNormalize() uint64 {
	if m != nil && m.TimeToNormalize != nil {
		return *m.TimeToNormalize
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetIncrementalNormalization() bool {
	if m != nil && m.IncrementalNormalization != nil {
		return *m.IncrementalNormalization
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetFailoverNormalization() bool {
	if m != nil && m.FailoverNormalization != nil {
		return *m.FailoverNormalization
	}
	return false
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) GetSampling() *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType {
	if m != nil {
		return m.Sampling
	}
	return nil
}

type NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType struct {
	SamplingOutlierCutoff *uint32  `protobuf:"varint,51,opt,name=sampling_outlier_cutoff,json=samplingOutlierCutoff" json:"sampling_outlier_cutoff,omitempty"`
	SamplingMode          *string  `protobuf:"bytes,52,opt,name=sampling_mode,json=samplingMode" json:"sampling_mode,omitempty"`
	SamplingPercentile    *uint32  `protobuf:"varint,53,opt,name=sampling_percentile,json=samplingPercentile" json:"sampling_percentile,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) Reset() {
	*m = NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType{}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) String() string {
	return proto.CompactTextString(m)
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) ProtoMessage() {
}
func (*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d10f38d59cb24ab, []int{0, 0, 0, 2, 0, 2, 0, 0, 0}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType.Merge(m, src)
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) XXX_Size() int {
	return m.Size()
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType proto.InternalMessageInfo

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) GetSamplingOutlierCutoff() uint32 {
	if m != nil && m.SamplingOutlierCutoff != nil {
		return *m.SamplingOutlierCutoff
	}
	return 0
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) GetSamplingMode() string {
	if m != nil && m.SamplingMode != nil {
		return *m.SamplingMode
	}
	return ""
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) GetSamplingPercentile() uint32 {
	if m != nil && m.SamplingPercentile != nil {
		return *m.SamplingPercentile
	}
	return 0
}

var E_JnprNetworkInstancesTeExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*NetworkInstancesTe)(nil),
	Field:         69,
	Name:          "jnpr_network_instances_te_ext",
	Tag:           "bytes,69,opt,name=jnpr_network_instances_te_ext",
	Filename:      "rpd_te_oc.proto",
}

func init() {
	proto.RegisterType((*NetworkInstancesTe)(nil), "network_instances_te")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceList)(nil), "network_instances_te.network_instance_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsType)(nil), "network_instances_te.network_instance_list.mpls_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.srlgs_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.srlgs_type.srlg_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.srlgs_type.srlg_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.mpls_admin_groups_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.mpls_admin_groups_type.admin_group_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.mpls_admin_groups_type.admin_group_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.te_lsp_timers_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_global_attributes_type.te_lsp_timers_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.interface_ref_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.interface_ref_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.igp_flooding_bandwidth_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.igp_flooding_bandwidth_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.bandwidth_measurement_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.te_interface_attributes_type.interface_list.bandwidth_measurement_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type.named_explicit_path_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type.named_explicit_path_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type.named_explicit_path_list.explicit_route_objects_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type.named_explicit_path_list.explicit_route_objects_type.explicit_route_object_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.named_explicit_paths_type.named_explicit_path_list.explicit_route_objects_type.explicit_route_object_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.state_type.counters_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type.overflow_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type.overflow_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type.underflow_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.bandwidth_type.auto_bandwidth_type.underflow_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list.admin_groups_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list.admin_groups_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list.lsp_instances_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_primary_path_type.p2p_primary_path_list.lsp_instances_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list.admin_groups_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list.admin_groups_type.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list.lsp_instances_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.tunnels_type.tunnel_list.p2p_tunnel_attributes_type.p2p_secondary_paths_type.p2p_secondary_path_list.lsp_instances_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.container_tunnels_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.container_tunnels_type.container_tunnel_list")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.container_tunnels_type.container_tunnel_list.state_type")
	proto.RegisterType((*NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType)(nil), "network_instances_te.network_instance_list.mpls_type.lsps_type.constrained_path_type.container_tunnels_type.container_tunnel_list.state_type.sampling_type")
	proto.RegisterExtension(E_JnprNetworkInstancesTeExt)
}

func init() { proto.RegisterFile("rpd_te_oc.proto", fileDescriptor_5d10f38d59cb24ab) }

var fileDescriptor_5d10f38d59cb24ab = []byte{
	// 3468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5c, 0x6b, 0x6c, 0x1d, 0xd5,
	0xb5, 0xd6, 0xf8, 0x11, 0xec, 0x75, 0x7c, 0xfc, 0xd8, 0x8e, 0x9d, 0xe3, 0x49, 0x08, 0x86, 0xdc,
	0x7b, 0x31, 0x70, 0x73, 0x7c, 0x6f, 0x88, 0x43, 0x20, 0x90, 0x10, 0x3b, 0x01, 0x05, 0x91, 0x90,
	0x7b, 0x6c, 0x2e, 0x2a, 0x3f, 0x3a, 0x9d, 0x33, 0xb3, 0xcf, 0xf1, 0x84, 0x39, 0x33, 0xc3, 0xec,
	0x7d, 0xfc, 0xa8, 0x8a, 0x0a, 0x81, 0x96, 0xa2, 0x96, 0xd2, 0x88, 0x8a, 0x77, 0x05, 0xa2, 0xe5,
	0x0f, 0xa0, 0x56, 0xaa, 0xe8, 0x8f, 0xd2, 0x56, 0xa0, 0x3e, 0x54, 0xd4, 0xd2, 0xaa, 0xa5, 0x95,
	0x4a, 0xab, 0x56, 0xa2, 0x51, 0x1f, 0x52, 0x5b, 0x89, 0x96, 0x3e, 0xf8, 0x55, 0xa9, 0xda, 0xaf,
	0x79, 0x9d, 0xb1, 0x9d, 0x26, 0x71, 0x62, 0xe7, 0x9f, 0xe7, 0x5b, 0x6b, 0xcf, 0x5e, 0x7b, 0xed,
	0xb5, 0xd6, 0x5e, 0x6b, 0xcd, 0x3e, 0x86, 0xbe, 0x30, 0xb0, 0x0d, 0x8a, 0x0d, 0xdf, 0x2a, 0x07,
	0xa1, 0x4f, 0x7d, 0x7d, 0x90, 0x62, 0x17, 0x37, 0x30, 0x0d, 0x17, 0x0d, 0xea, 0x07, 0x02, 0xbc,
	0xec, 0x17, 0xc7, 0x35, 0xd8, 0xe8, 0x61, 0x3a, 0xef, 0x87, 0x77, 0x19, 0x8e, 0x47, 0xa8, 0xe9,
	0x59, 0x98, 0x18, 0x14, 0xa3, 0x3b, 0xa0, 0x3f, 0x8b, 0x97, 0x1e, 0xd7, 0x46, 0xdb, 0xc7, 0x0a,
	0x3b, 0xae, 0x2a, 0xe7, 0x8d, 0x68, 0x01, 0x0d, 0xd7, 0x21, 0xb4, 0xd2, 0x27, 0xe1, 0x43, 0x12,
	0xd5, 0x7f, 0x7f, 0x9f, 0x06, 0x43, 0xb9, 0xbc, 0x68, 0x04, 0x3a, 0x3c, 0xb3, 0x81, 0x4b, 0x57,
	0x8f, 0x6a, 0x63, 0xdd, 0x93, 0x9d, 0xc7, 0x6f, 0x6c, 0xeb, 0xd2, 0x2a, 0x1c, 0x42, 0xb7, 0x40,
	0x47, 0x23, 0x70, 0x09, 0x13, 0x41, 0x1b, 0x2b, 0xec, 0x98, 0xf8, 0x37, 0x44, 0x28, 0xb3, 0x81,
	0x06, 0x5d, 0x0c, 0x70, 0x85, 0xbf, 0x43, 0xff, 0xed, 0xbd, 0x1a, 0x74, 0x47, 0x20, 0x62, 0x2a,
	0xa0, 0xd8, 0xa8, 0xbb, 0x7e, 0xd5, 0x74, 0x0d, 0x93, 0xd2, 0xd0, 0xa9, 0x36, 0x29, 0x8e, 0xe6,
	0xba, 0xed, 0xb4, 0xe6, 0x2a, 0xe7, 0xbd, 0x52, 0x48, 0x81, 0x28, 0xbe, 0x99, 0x53, 0xf6, 0x47,
	0x04, 0xf4, 0x49, 0x0d, 0x36, 0x51, 0x6c, 0x38, 0x1e, 0xc5, 0x61, 0xcd, 0xb4, 0x70, 0x52, 0x8e,
	0x27, 0x84, 0x1c, 0x95, 0xd3, 0x96, 0x23, 0xef, 0xad, 0x42, 0x94, 0x21, 0x8a, 0x0f, 0x29, 0x62,
	0x42, 0x9a, 0x19, 0xe8, 0x70, 0x49, 0x40, 0x4a, 0x4f, 0x8a, 0x99, 0xf7, 0x9d, 0xde, 0xcc, 0xec,
	0x15, 0x52, 0xef, 0xec, 0x4f, 0xfd, 0xbd, 0x1e, 0x18, 0x59, 0x52, 0x2b, 0xe8, 0x6e, 0xe8, 0x24,
	0xa1, 0x5b, 0x8f, 0xd4, 0x7e, 0xe7, 0x59, 0x56, 0x7b, 0x99, 0xbf, 0x5d, 0xc8, 0x23, 0x66, 0x42,
	0x8f, 0x6a, 0x30, 0xc0, 0x47, 0x9a, 0x76, 0xc3, 0xf1, 0x8c, 0x7a, 0xe8, 0x37, 0x83, 0x48, 0xdd,
	0xb5, 0xb3, 0x3d, 0x7f, 0xcb, 0x4c, 0x42, 0x96, 0x3e, 0x86, 0xef, 0x67, 0xf0, 0xcd, 0x1c, 0x45,
	0x0f, 0x6a, 0x50, 0xa4, 0xd8, 0x70, 0x49, 0x60, 0x50, 0xa7, 0x81, 0xc3, 0x68, 0x1b, 0xaa, 0x67,
	0x5b, 0xa2, 0xd4, 0x2c, 0x42, 0x9a, 0x02, 0xc5, 0xb7, 0x92, 0x60, 0x86, 0x23, 0xfa, 0x8b, 0xed,
	0x00, 0xb1, 0xd6, 0xd0, 0x22, 0x74, 0xb0, 0x27, 0x15, 0x06, 0xec, 0xd5, 0xdb, 0x20, 0xfe, 0xa7,
	0x88, 0x1f, 0x7c, 0x4a, 0xfd, 0xb9, 0x36, 0xe8, 0x8e, 0xb0, 0x28, 0x4e, 0xec, 0x6c, 0x8d, 0x13,
	0x1f, 0xd7, 0xa0, 0x93, 0x50, 0x93, 0x62, 0x65, 0x46, 0xfe, 0xb9, 0x90, 0xb2, 0xcc, 0xa7, 0x54,
	0xb6, 0xc5, 0xfe, 0xd6, 0x7d, 0x80, 0x18, 0x44, 0x28, 0x19, 0xd9, 0xa4, 0xa8, 0x1b, 0xa1, 0x73,
	0xce, 0x74, 0x9b, 0x62, 0x19, 0xc5, 0x8a, 0x78, 0x60, 0x9c, 0x96, 0x4f, 0x68, 0x69, 0x82, 0x83,
	0xfc, 0x6f, 0xb4, 0x0d, 0x8a, 0x35, 0xd7, 0xf7, 0x6d, 0xc7, 0xab, 0xf3, 0xd7, 0x95, 0x76, 0xf1,
	0xd7, 0xf4, 0x28, 0x70, 0x66, 0x31, 0xc0, 0xfa, 0x7b, 0xed, 0x30, 0x9c, 0x6f, 0x62, 0xe8, 0x49,
	0x0d, 0x0a, 0x09, 0x54, 0x6d, 0xe0, 0xfc, 0xb9, 0xb1, 0xf0, 0x72, 0x02, 0x11, 0x7b, 0x0a, 0x66,
	0x64, 0xee, 0xfa, 0xd7, 0xda, 0xa0, 0x3f, 0xcb, 0x80, 0xc6, 0xd3, 0x58, 0xeb, 0x66, 0xf7, 0xc6,
	0x6f, 0x38, 0xc2, 0x74, 0xf9, 0x54, 0x76, 0xdb, 0x8f, 0x6b, 0xe7, 0x69, 0x71, 0x39, 0xa6, 0xf0,
	0x81, 0x94, 0x29, 0x8c, 0xe5, 0xac, 0x4d, 0x98, 0x45, 0x76, 0x51, 0x97, 0x42, 0x4f, 0xd5, 0xa1,
	0x46, 0xe0, 0x13, 0x87, 0x3a, 0xbe, 0x27, 0xed, 0xa4, 0x50, 0x75, 0xe8, 0x51, 0x09, 0xe9, 0xcf,
	0xb6, 0x01, 0x6a, 0xf5, 0x62, 0xf4, 0x40, 0x56, 0x1d, 0x8d, 0xd5, 0x0f, 0x1d, 0x39, 0x0b, 0xbf,
	0x4f, 0x4b, 0xad, 0x7c, 0x1b, 0x14, 0xf9, 0x44, 0xae, 0x6b, 0xd8, 0xd8, 0x35, 0x17, 0xf9, 0xb2,
	0x8b, 0x95, 0x1e, 0x09, 0x1e, 0x60, 0x18, 0x63, 0xb2, 0x5c, 0x6c, 0x7a, 0xcd, 0x40, 0x32, 0x89,
	0x55, 0xf7, 0x48, 0x50, 0x30, 0x5d, 0x01, 0xfd, 0x21, 0xf6, 0x03, 0xea, 0x34, 0x9c, 0x0f, 0x63,
	0x21, 0x84, 0x74, 0x98, 0xbe, 0x18, 0xe7, 0x41, 0x4c, 0x7f, 0xa7, 0x17, 0xb6, 0x2c, 0x77, 0x04,
	0x22, 0x96, 0x0c, 0x44, 0x54, 0xe5, 0x1a, 0xe6, 0xd9, 0x3f, 0x6b, 0xcb, 0x31, 0x85, 0x3b, 0x41,
	0x3c, 0xa9, 0xfe, 0xf5, 0x22, 0xf4, 0xa6, 0xa9, 0x68, 0x0c, 0x7a, 0x62, 0xc4, 0xb1, 0xd3, 0xd6,
	0x5f, 0x88, 0x48, 0x87, 0x6c, 0x74, 0x7f, 0x76, 0xaf, 0xdd, 0x55, 0x97, 0xbd, 0x75, 0xab, 0x99,
	0x03, 0x16, 0x63, 0xa6, 0x10, 0xd7, 0xd4, 0x31, 0x4a, 0x57, 0x5f, 0x9a, 0xd4, 0xbc, 0x42, 0xaa,
	0x58, 0x79, 0x15, 0x5c, 0x43, 0xaf, 0x68, 0x30, 0xec, 0xd4, 0x03, 0x23, 0x0a, 0xa2, 0x55, 0xd3,
	0xb3, 0xe7, 0x1d, 0x9b, 0xce, 0xaa, 0xa3, 0xf5, 0x9e, 0x73, 0x20, 0x65, 0xae, 0x00, 0x42, 0xdc,
	0x8d, 0x4e, 0x3d, 0xb8, 0x49, 0xd2, 0x26, 0x15, 0x09, 0x7d, 0x59, 0x83, 0xa1, 0x98, 0xb1, 0x81,
	0x4d, 0xd2, 0x0c, 0x71, 0x03, 0x7b, 0xb4, 0xf4, 0x94, 0x90, 0xfa, 0x23, 0xab, 0x2f, 0x75, 0xee,
	0xfc, 0x52, 0xe8, 0x88, 0x76, 0x38, 0x26, 0xe9, 0x8b, 0x29, 0x97, 0xbf, 0x34, 0x63, 0xc6, 0x22,
	0xd0, 0xa5, 0xec, 0xf7, 0x72, 0xe8, 0xe3, 0xe7, 0x68, 0x03, 0x37, 0xaa, 0x38, 0x24, 0xb3, 0x4e,
	0x50, 0xda, 0x39, 0xda, 0xce, 0xc2, 0x21, 0x83, 0x0f, 0x47, 0x28, 0xba, 0x24, 0x7d, 0x88, 0x4d,
	0x70, 0xa6, 0xe4, 0x51, 0xf2, 0x4f, 0x0d, 0x50, 0xab, 0x2d, 0xa0, 0xc7, 0xb2, 0x0e, 0xf2, 0xd1,
	0xf3, 0x61, 0x92, 0x39, 0xe1, 0xf1, 0x48, 0x4a, 0x55, 0x5b, 0x92, 0x61, 0x48, 0xe8, 0x29, 0x06,
	0xd0, 0x65, 0xd0, 0x43, 0x9a, 0xd5, 0x98, 0x41, 0x46, 0xc5, 0x24, 0xc6, 0x92, 0xa4, 0xcd, 0xcb,
	0x58, 0x19, 0x7a, 0x2e, 0xab, 0x88, 0x4f, 0x68, 0xe7, 0xd5, 0xec, 0x73, 0x54, 0xf2, 0xc1, 0x94,
	0x4a, 0xfe, 0x13, 0x7a, 0xe9, 0x6c, 0x88, 0xc9, 0xac, 0xef, 0xda, 0x22, 0xf1, 0x11, 0x7a, 0x29,
	0x46, 0x28, 0xcb, 0x7c, 0xd8, 0x69, 0x60, 0x63, 0x97, 0x9a, 0x46, 0x80, 0x43, 0x0b, 0x7b, 0xd4,
	0xac, 0x2b, 0xfd, 0xf4, 0x71, 0xfc, 0x68, 0x04, 0xeb, 0x6f, 0xb5, 0x81, 0xbe, 0xb4, 0x49, 0xa3,
	0x67, 0xb3, 0x1a, 0x7a, 0x50, 0x3b, 0x9f, 0x2e, 0x96, 0xa3, 0xa0, 0x13, 0xe9, 0x23, 0x75, 0x0a,
	0xb6, 0xba, 0x26, 0xa1, 0x86, 0x65, 0xba, 0x56, 0xd3, 0x35, 0x29, 0xb6, 0x0d, 0x12, 0x1a, 0x4d,
	0xea, 0xb8, 0x0e, 0x31, 0x79, 0xd2, 0xc0, 0x34, 0xd6, 0x51, 0xd9, 0xcc, 0xb8, 0xa6, 0x22, 0xa6,
	0xe9, 0xf0, 0xf6, 0x98, 0x05, 0xed, 0x85, 0x2d, 0xfc, 0x25, 0xc4, 0x6c, 0x04, 0x2e, 0x56, 0x52,
	0x44, 0x6f, 0xe2, 0xba, 0xec, 0xa8, 0x94, 0x18, 0xcf, 0x34, 0x67, 0x91, 0xfe, 0x2e, 0x5f, 0xa3,
	0x3f, 0x56, 0x85, 0xee, 0xa8, 0xd6, 0x43, 0xf7, 0x69, 0xd0, 0x6f, 0xf9, 0x1e, 0xa1, 0xa1, 0xe9,
	0x78, 0xd8, 0x36, 0x02, 0x93, 0xce, 0x2a, 0x75, 0xde, 0x7e, 0x86, 0x85, 0x64, 0x39, 0xfb, 0x62,
	0x59, 0x42, 0x25, 0xe0, 0xa3, 0x26, 0x9d, 0xd5, 0x1f, 0x30, 0x61, 0x28, 0x97, 0x15, 0x3d, 0xaf,
	0xc1, 0x46, 0x96, 0x72, 0xd9, 0x06, 0x5e, 0x08, 0x5c, 0xc7, 0x62, 0xf9, 0x95, 0x49, 0x67, 0xc9,
	0x19, 0x96, 0x0b, 0x2b, 0x48, 0x58, 0xce, 0x9b, 0x52, 0x36, 0x03, 0x38, 0xe9, 0xa0, 0xa4, 0x30,
	0xe9, 0x09, 0xba, 0x07, 0x2e, 0xa2, 0x4d, 0xcf, 0xc3, 0x6e, 0x54, 0x8c, 0x56, 0x57, 0x47, 0x2c,
	0x39, 0x8b, 0x90, 0x44, 0xcd, 0xc9, 0xce, 0xf2, 0x01, 0xcb, 0xf7, 0x28, 0xe3, 0x0e, 0x0d, 0x25,
	0xc9, 0x93, 0x67, 0x94, 0x5d, 0xac, 0x24, 0x49, 0xcb, 0x7c, 0x42, 0xa6, 0xfe, 0x08, 0x9f, 0x11,
	0xb0, 0xfe, 0x63, 0x80, 0x91, 0x25, 0xb5, 0x89, 0x5e, 0xd5, 0x60, 0x30, 0x87, 0xaa, 0xd2, 0xba,
	0xd3, 0x0d, 0x78, 0xa7, 0xbd, 0xbd, 0x79, 0x14, 0x91, 0xfe, 0x0d, 0xb4, 0xec, 0xbb, 0xfe, 0x8f,
	0x2e, 0x28, 0x2d, 0xc5, 0xbf, 0x5c, 0x6f, 0xec, 0xa5, 0x6c, 0xd4, 0x7a, 0x74, 0xcd, 0x2c, 0x33,
	0x27, 0x53, 0xfc, 0xa5, 0x06, 0xc3, 0x11, 0x63, 0xe8, 0x37, 0x29, 0x36, 0xfc, 0xea, 0x31, 0x6c,
	0xd1, 0xc8, 0xd8, 0xbf, 0xb0, 0x76, 0xc4, 0xcf, 0x17, 0x54, 0xe6, 0x3f, 0x8a, 0x58, 0x61, 0xb4,
	0xdb, 0x04, 0x49, 0x1f, 0x5d, 0xa9, 0xee, 0xd7, 0x1f, 0xe9, 0x84, 0xcd, 0xcb, 0xbc, 0x17, 0xfd,
	0x5d, 0x83, 0xa1, 0x5c, 0xba, 0xb2, 0xe2, 0xd7, 0xd6, 0x85, 0x7e, 0xf2, 0x69, 0xc2, 0xf8, 0x07,
	0x73, 0x54, 0xa7, 0xbf, 0xdf, 0x06, 0xfa, 0xd2, 0x63, 0xd0, 0x66, 0xe8, 0x74, 0x3c, 0x1b, 0x2f,
	0x88, 0xaa, 0x51, 0x79, 0x80, 0xc0, 0xd0, 0xc9, 0xac, 0x0b, 0x7c, 0x6f, 0xbd, 0xeb, 0x28, 0xe7,
	0xec, 0xbf, 0x23, 0x65, 0x5a, 0x25, 0xb8, 0xc8, 0xb4, 0xed, 0x10, 0x13, 0x22, 0xad, 0x4b, 0x3d,
	0xa2, 0x11, 0xe8, 0x9a, 0xf5, 0x03, 0x91, 0x30, 0xed, 0x14, 0xa4, 0x59, 0x3f, 0xe0, 0xa9, 0xd2,
	0x46, 0xa5, 0x44, 0x51, 0x2d, 0x8b, 0x07, 0xfd, 0xd3, 0x37, 0x41, 0x4f, 0x32, 0xec, 0xa2, 0x07,
	0x35, 0xd8, 0x20, 0x00, 0x65, 0x73, 0xde, 0xea, 0x1f, 0x40, 0xf2, 0x41, 0x58, 0x88, 0x9c, 0x5e,
	0xff, 0xeb, 0x01, 0x28, 0x24, 0xf0, 0xe5, 0xc2, 0xe0, 0x30, 0x6c, 0x20, 0x7e, 0x33, 0xb4, 0xd4,
	0xa2, 0xe5, 0x13, 0x7a, 0x24, 0xb2, 0x8d, 0x09, 0x6e, 0x1a, 0x8b, 0xe7, 0x76, 0x29, 0x39, 0x21,
	0xf0, 0x19, 0x0d, 0xba, 0xe3, 0x12, 0xf4, 0x89, 0x33, 0x2a, 0x41, 0x4f, 0x5b, 0xac, 0x4c, 0x09,
	0x1a, 0x0b, 0x84, 0x5e, 0xd3, 0x60, 0x28, 0xd8, 0x11, 0xc8, 0x93, 0x38, 0xf9, 0x25, 0x42, 0xe6,
	0x00, 0x0f, 0x69, 0xe7, 0x58, 0xd6, 0x5c, 0x69, 0x84, 0xdc, 0x83, 0xc1, 0x8e, 0x40, 0xe4, 0x06,
	0xf1, 0xf7, 0x0b, 0xfd, 0xe9, 0xae, 0xdc, 0x28, 0xbc, 0x2b, 0xd1, 0x7d, 0x45, 0xd0, 0xc1, 0x1d,
	0xe4, 0x1a, 0x81, 0x71, 0xbe, 0xed, 0x80, 0x88, 0x53, 0xf7, 0x4c, 0x97, 0xd5, 0x2a, 0xfc, 0x03,
	0x99, 0xe5, 0xbb, 0xa5, 0xdd, 0x9c, 0x63, 0x20, 0xa2, 0x1c, 0x95, 0x04, 0x34, 0x0a, 0x05, 0x1b,
	0x13, 0x2b, 0x74, 0x02, 0x9e, 0x69, 0x5f, 0x2b, 0x6a, 0xdb, 0x04, 0xc4, 0xca, 0x5f, 0x51, 0xb2,
	0x32, 0x61, 0x9a, 0xa4, 0x74, 0x9d, 0x60, 0xe1, 0xd8, 0x34, 0x87, 0xd0, 0x56, 0x80, 0x20, 0xc4,
	0x35, 0x1c, 0x62, 0xcf, 0xc2, 0xa5, 0x3d, 0xdc, 0x2d, 0x13, 0x08, 0xab, 0x7a, 0x1b, 0x98, 0x86,
	0x8e, 0x25, 0xfc, 0xf9, 0x7a, 0xfe, 0x06, 0x10, 0x10, 0x77, 0xe9, 0x61, 0xd8, 0x20, 0x9e, 0x4a,
	0x37, 0x8c, 0x6a, 0x63, 0x9d, 0x15, 0xf9, 0x84, 0xae, 0x07, 0x9d, 0x2d, 0x01, 0x5b, 0x4c, 0x12,
	0x83, 0xd0, 0x45, 0x97, 0x15, 0xa3, 0x77, 0x37, 0x31, 0xa1, 0xd8, 0x2e, 0xed, 0xe3, 0xef, 0x29,
	0xc5, 0x1c, 0xd3, 0x8c, 0xa1, 0xa2, 0xe8, 0xb9, 0x1d, 0xb6, 0x1b, 0x73, 0x3b, 0x6c, 0x09, 0xbf,
	0xdb, 0x9f, 0xf2, 0x3b, 0x56, 0xd8, 0xfb, 0x35, 0x6a, 0x04, 0x21, 0xc6, 0x0d, 0xa1, 0xa2, 0xc9,
	0x51, 0x6d, 0xac, 0xab, 0xd2, 0xcb, 0xe0, 0xa3, 0x11, 0xca, 0xca, 0x3c, 0x82, 0x69, 0x33, 0x30,
	0x82, 0xd0, 0xf1, 0x43, 0x87, 0x2e, 0x96, 0xa6, 0xf8, 0x4c, 0x45, 0x8e, 0x1e, 0x95, 0x20, 0xda,
	0x06, 0x45, 0x5e, 0x08, 0x46, 0x5c, 0x07, 0x44, 0x0d, 0xcc, 0xc0, 0x88, 0xe9, 0x12, 0x28, 0xf8,
	0x01, 0x0e, 0x95, 0xc2, 0x0f, 0x0a, 0x75, 0x31, 0x48, 0xea, 0xfb, 0x05, 0x0d, 0xba, 0x2c, 0xbf,
	0xc9, 0x4a, 0x30, 0x72, 0xa6, 0x55, 0xde, 0x59, 0x08, 0x09, 0x65, 0x25, 0x8b, 0xb0, 0xe6, 0x48,
	0x34, 0xb6, 0x01, 0x8e, 0x37, 0x8b, 0x43, 0x87, 0xd5, 0x74, 0x72, 0x83, 0xf7, 0x8a, 0x0d, 0x88,
	0xf0, 0xc3, 0x62, 0xa7, 0x37, 0x43, 0xb7, 0x7c, 0xb9, 0x6c, 0x14, 0x16, 0x2b, 0x5d, 0x02, 0x38,
	0x64, 0xeb, 0x9f, 0x69, 0x83, 0x62, 0x6a, 0x0e, 0x66, 0x94, 0x5c, 0x44, 0x6b, 0xd6, 0xf4, 0xea,
	0x98, 0xc8, 0x0a, 0xb1, 0xc0, 0xb0, 0x29, 0x01, 0x31, 0x55, 0x0b, 0x11, 0x15, 0x8f, 0x28, 0x01,
	0x7b, 0x38, 0xa8, 0x98, 0x98, 0xaa, 0x3d, 0xd7, 0xf1, 0x84, 0x79, 0xf0, 0xe0, 0xca, 0x54, 0xcd,
	0x21, 0x66, 0x19, 0xe8, 0x4a, 0x18, 0xb0, 0x9a, 0x61, 0xc8, 0xaa, 0x59, 0xa1, 0x13, 0x27, 0xf2,
	0xc1, 0x3e, 0x49, 0x60, 0x79, 0x2f, 0xe7, 0xdd, 0x0d, 0x25, 0x0f, 0x2f, 0x50, 0x23, 0x32, 0x2e,
	0x5e, 0x9a, 0x8a, 0x21, 0xc2, 0x45, 0x87, 0x19, 0xbd, 0x92, 0x22, 0xf3, 0x91, 0xff, 0x03, 0x1b,
	0x79, 0xf5, 0x4a, 0x43, 0xd3, 0x13, 0x5d, 0x71, 0x31, 0x4a, 0xb8, 0x2d, 0x62, 0xb4, 0x99, 0x88,
	0xc4, 0x46, 0xe8, 0x1f, 0xeb, 0x83, 0xde, 0xd5, 0x6a, 0x8d, 0x9c, 0xa5, 0x70, 0x9c, 0x73, 0x68,
	0xbc, 0xaa, 0x41, 0xaf, 0xd9, 0xa4, 0xbe, 0xd1, 0x72, 0x72, 0x9c, 0x38, 0xcf, 0xb2, 0xa6, 0xa5,
	0x12, 0x42, 0x17, 0x19, 0x18, 0xb5, 0x32, 0xf5, 0x47, 0xd2, 0x6d, 0x0b, 0x16, 0x68, 0x03, 0x6c,
	0x39, 0x35, 0xc7, 0x92, 0xfb, 0x1c, 0x37, 0x77, 0x06, 0x52, 0x94, 0x19, 0xf9, 0xe1, 0x80, 0x60,
	0x9a, 0x58, 0xb8, 0x32, 0x47, 0x4c, 0xe3, 0x6e, 0x69, 0x14, 0xbc, 0xb1, 0x9d, 0xe0, 0x9c, 0xe0,
	0x9c, 0x03, 0x8a, 0x12, 0x4b, 0x74, 0x6f, 0x01, 0x06, 0x73, 0x04, 0x47, 0xaf, 0x64, 0x2d, 0xe1,
	0x99, 0xb5, 0xa7, 0xdd, 0x1c, 0xeb, 0xf8, 0x86, 0x06, 0x5d, 0xfe, 0x1c, 0x0e, 0x6b, 0xae, 0x3f,
	0xaf, 0xec, 0xe2, 0xd9, 0x35, 0x28, 0xb9, 0x92, 0x51, 0x86, 0x3b, 0xf5, 0x88, 0x5e, 0xd7, 0xa0,
	0xbb, 0xe9, 0xd9, 0x72, 0x01, 0x32, 0xcf, 0x78, 0x6e, 0x0d, 0x2e, 0x20, 0x12, 0x52, 0xa6, 0x4d,
	0xd1, 0xb3, 0xfe, 0x43, 0x2d, 0x9b, 0x9f, 0x63, 0xcf, 0xac, 0xba, 0x58, 0x74, 0xbd, 0xbb, 0x2a,
	0xea, 0x11, 0x0d, 0xc1, 0x06, 0x96, 0x13, 0x54, 0xe7, 0xa5, 0x1d, 0x77, 0x36, 0x1c, 0x6f, 0x72,
	0x9e, 0xc3, 0xe6, 0x02, 0x83, 0x27, 0x24, 0x6c, 0x2e, 0x4c, 0xce, 0xb3, 0x63, 0xd4, 0xb4, 0x8f,
	0x35, 0x09, 0x15, 0x1d, 0xc5, 0x39, 0xd3, 0xe5, 0x31, 0xb4, 0x58, 0xe9, 0x15, 0xf0, 0x21, 0x89,
	0xb2, 0x13, 0x43, 0x32, 0x46, 0xed, 0x51, 0x1e, 0x3a, 0x8b, 0x15, 0xf9, 0x82, 0x19, 0x05, 0xa3,
	0xff, 0x80, 0x5e, 0x36, 0x95, 0x39, 0x87, 0x43, 0xb3, 0x8e, 0xd9, 0x94, 0x37, 0x08, 0x8f, 0x6a,
	0x98, 0x0b, 0xfb, 0x05, 0x38, 0x39, 0xaf, 0xbf, 0xdc, 0x06, 0xc5, 0xd4, 0x7e, 0xa1, 0x6f, 0x66,
	0x9d, 0xe3, 0xc5, 0xb5, 0x6e, 0x62, 0x39, 0x65, 0xd4, 0xff, 0x9f, 0xe2, 0x36, 0x95, 0x61, 0x90,
	0x86, 0x4e, 0xbd, 0x8e, 0x43, 0x03, 0xcf, 0xb1, 0x43, 0x8c, 0x1f, 0xa3, 0xf2, 0x80, 0x1d, 0x90,
	0xa4, 0x83, 0x8c, 0x32, 0xc5, 0x08, 0xfa, 0x17, 0xdb, 0xa0, 0x37, 0x6d, 0x1d, 0xe8, 0x5b, 0x59,
	0x7d, 0xbd, 0xb4, 0xe6, 0x2d, 0xfa, 0x1c, 0x2a, 0xec, 0xf1, 0x2b, 0x40, 0x5f, 0x3a, 0xb3, 0x47,
	0x2f, 0x67, 0x95, 0xf7, 0xd9, 0xb5, 0x53, 0x76, 0xe4, 0x44, 0xe0, 0xef, 0x6b, 0xd0, 0xcf, 0x06,
	0x04, 0xa1, 0xd3, 0x30, 0xc3, 0x45, 0xd1, 0x77, 0x3c, 0x5f, 0x91, 0x78, 0x19, 0xc9, 0xb3, 0x32,
	0x8a, 0x45, 0xf4, 0x06, 0x3b, 0x58, 0xa6, 0xcd, 0x50, 0x96, 0x93, 0xa1, 0x9f, 0x6a, 0xc0, 0x2a,
	0x2b, 0x83, 0x60, 0xcb, 0xf7, 0x6c, 0xc5, 0x1b, 0x55, 0x80, 0xcf, 0xaf, 0xb1, 0x05, 0x65, 0xc4,
	0x14, 0x6b, 0x1a, 0x08, 0x76, 0x04, 0xd3, 0x8a, 0xc0, 0x3b, 0xeb, 0x7a, 0x39, 0x65, 0xca, 0xa2,
	0x80, 0xa3, 0x8e, 0x17, 0x7f, 0x2a, 0x11, 0x05, 0x9c, 0x82, 0xf4, 0xdf, 0x20, 0x51, 0x0a, 0xb7,
	0x28, 0x0c, 0xfd, 0x3a, 0x6f, 0xbb, 0x65, 0xb3, 0xe4, 0x2b, 0x6b, 0x7d, 0xbb, 0x5b, 0x51, 0xde,
	0x74, 0xc9, 0x18, 0x81, 0xfe, 0xbb, 0xfe, 0x9c, 0xd5, 0xaf, 0xd4, 0x86, 0x79, 0x3b, 0xeb, 0xb6,
	0xaf, 0xaf, 0x4f, 0x6d, 0xe4, 0xb8, 0xf8, 0x9f, 0x34, 0x55, 0xcf, 0xa7, 0xaf, 0x0a, 0x7e, 0x77,
	0x9d, 0xae, 0xb0, 0xf5, 0x32, 0x62, 0xc1, 0x4c, 0x5c, 0x44, 0x7c, 0x57, 0x83, 0xa2, 0x4b, 0x82,
	0x78, 0x4d, 0xcc, 0xfb, 0x99, 0x7d, 0xbf, 0xb1, 0x4e, 0xd7, 0x9b, 0x5a, 0x8c, 0x30, 0xf9, 0x1e,
	0x97, 0x04, 0xea, 0x6a, 0x32, 0xd1, 0x5f, 0x6f, 0x5f, 0xf1, 0xd6, 0xde, 0x08, 0x74, 0x35, 0x09,
	0x36, 0x2c, 0x12, 0xd4, 0xf8, 0xc9, 0xd6, 0x55, 0xb9, 0xa8, 0x49, 0xf0, 0x14, 0x09, 0x6a, 0x2c,
	0x53, 0x63, 0xb0, 0x41, 0x1d, 0x5c, 0x0d, 0xb1, 0x79, 0x97, 0xbc, 0x94, 0xd4, 0x5d, 0xe9, 0x65,
	0xf0, 0x4c, 0x84, 0xa2, 0xff, 0x06, 0x94, 0xee, 0x13, 0xf3, 0x59, 0x44, 0xc1, 0xda, 0x8f, 0x13,
	0x9f, 0x84, 0xf8, 0x35, 0xb0, 0x74, 0x87, 0xe8, 0x86, 0x96, 0x0e, 0x51, 0x6b, 0xfb, 0x64, 0xef,
	0x29, 0xb5, 0x4f, 0xf6, 0xe5, 0xb7, 0x4f, 0x42, 0x71, 0x45, 0x3c, 0xd1, 0xf1, 0x01, 0x0e, 0x89,
	0x66, 0xcf, 0x36, 0x28, 0x7a, 0x3e, 0x75, 0x6a, 0x8b, 0xaa, 0xc3, 0xf2, 0x7f, 0xe2, 0x2a, 0xa2,
	0x00, 0x65, 0x8f, 0xe5, 0x12, 0x28, 0x70, 0x45, 0x48, 0x16, 0x51, 0xf2, 0x03, 0x83, 0x32, 0x0c,
	0xb2, 0xaf, 0x71, 0x0d, 0x4f, 0x3e, 0x39, 0x83, 0x6c, 0x69, 0xec, 0x86, 0x92, 0x49, 0x88, 0x6f,
	0x39, 0xfc, 0x93, 0x76, 0x48, 0xe6, 0x58, 0x88, 0x27, 0xc4, 0xf1, 0x3d, 0x52, 0xda, 0x33, 0xda,
	0x3e, 0x56, 0xac, 0x0c, 0xc7, 0xf4, 0x0a, 0x99, 0x0b, 0xa6, 0x25, 0x55, 0xff, 0x54, 0x3b, 0x0c,
	0xb4, 0xde, 0x80, 0xfc, 0x43, 0x36, 0x28, 0xbd, 0x75, 0xa1, 0xb8, 0x6c, 0x4e, 0xbe, 0xf6, 0x50,
	0xcb, 0xb5, 0x3b, 0xbc, 0x60, 0xb9, 0x4d, 0x1b, 0xcb, 0x9b, 0x33, 0x57, 0xf3, 0x9b, 0x33, 0x3d,
	0x12, 0xe4, 0xce, 0x8e, 0xae, 0x84, 0x01, 0xc7, 0x13, 0x4c, 0xa6, 0xeb, 0x4a, 0x46, 0x71, 0x0f,
	0xa7, 0x4f, 0x12, 0xf6, 0xbb, 0x6e, 0x2b, 0xaf, 0xb7, 0x98, 0xba, 0x8e, 0x13, 0xf1, 0x7a, 0x8b,
	0xe2, 0x4e, 0xce, 0xe7, 0x3b, 0x00, 0xb5, 0xba, 0x1d, 0x33, 0x00, 0xd7, 0xb7, 0x4c, 0xd7, 0x48,
	0x7c, 0xd2, 0xa9, 0x00, 0x87, 0x0e, 0xf1, 0x0f, 0x3a, 0x43, 0xb0, 0x81, 0x0f, 0x53, 0x0d, 0xad,
	0x4e, 0xe6, 0xa7, 0x36, 0x4b, 0x3e, 0x49, 0xb3, 0x6a, 0xf9, 0xb6, 0xea, 0x37, 0xa9, 0x47, 0xf4,
	0xc7, 0xec, 0x0e, 0xff, 0xe4, 0x82, 0x09, 0x52, 0x39, 0x5b, 0xfc, 0x66, 0x7a, 0x8b, 0x57, 0x54,
	0x67, 0x8b, 0xdb, 0xee, 0xcc, 0x71, 0xdb, 0xb8, 0x93, 0x3c, 0x91, 0xea, 0x24, 0x6f, 0x49, 0x7e,
	0xad, 0xd8, 0xc5, 0x7d, 0x35, 0xf1, 0xb5, 0xe0, 0x4a, 0x18, 0x10, 0xb5, 0x64, 0xf2, 0x5a, 0x9d,
	0xf0, 0xe8, 0x3e, 0x5e, 0x4e, 0x26, 0x6e, 0xb4, 0x0d, 0xc3, 0x86, 0x10, 0x9b, 0xc4, 0xf7, 0x64,
	0xb0, 0x93, 0x4f, 0xfa, 0xc3, 0x03, 0x50, 0x5a, 0x2a, 0x8d, 0x63, 0xbe, 0x8b, 0x5a, 0x89, 0x2a,
	0xd7, 0x7a, 0x75, 0x1d, 0x64, 0xa2, 0x39, 0x04, 0x71, 0xfa, 0xf4, 0x67, 0x33, 0x54, 0xfd, 0xfe,
	0x3e, 0xd8, 0xb4, 0x04, 0xf7, 0x72, 0xd7, 0xde, 0x7f, 0x95, 0xb5, 0xfe, 0xef, 0xac, 0x63, 0xb5,
	0xe4, 0x64, 0x5e, 0x7f, 0x59, 0x22, 0xf3, 0x7a, 0x73, 0x3d, 0x2f, 0x73, 0x85, 0xf4, 0xeb, 0x6f,
	0x4b, 0xa5, 0x5f, 0x3f, 0x58, 0xcf, 0x8b, 0x5e, 0x31, 0x07, 0xfb, 0x79, 0xdb, 0x79, 0xcc, 0xc1,
	0x76, 0x9d, 0x52, 0x0e, 0x76, 0xcd, 0x29, 0xe4, 0x60, 0xbb, 0x4f, 0x29, 0x07, 0xbb, 0x76, 0xe5,
	0x1c, 0xec, 0xba, 0x96, 0x1c, 0xec, 0xf4, 0x93, 0xa3, 0x13, 0xb9, 0xc9, 0xd1, 0xbb, 0xd9, 0xe0,
	0xf1, 0xb3, 0x0b, 0xca, 0xab, 0xd6, 0x78, 0x86, 0x74, 0xa2, 0x3d, 0x37, 0x43, 0xfa, 0xaf, 0x9c,
	0x23, 0x5d, 0xc5, 0xfc, 0xe4, 0xc9, 0xfe, 0xe7, 0xec, 0xe6, 0xbd, 0x7d, 0x61, 0x45, 0x87, 0x9c,
	0xc3, 0x20, 0x3f, 0x37, 0xd4, 0x0f, 0x65, 0xf7, 0xf4, 0x94, 0x32, 0x9e, 0xdc, 0x7c, 0xe4, 0xdb,
	0x3d, 0x30, 0x9c, 0x7f, 0x23, 0x11, 0x7d, 0x49, 0x5c, 0x6f, 0x4d, 0x91, 0x54, 0x2e, 0x72, 0x5c,
	0x3b, 0x97, 0x97, 0x23, 0x5b, 0x60, 0xf9, 0x83, 0xdb, 0xcc, 0x95, 0x49, 0xfd, 0x7d, 0xe0, 0x97,
	0x61, 0x5b, 0x59, 0x97, 0xeb, 0xe2, 0xbc, 0x90, 0x35, 0xab, 0x87, 0xd7, 0xc0, 0xda, 0x72, 0x3c,
	0xf9, 0xa9, 0xee, 0x15, 0x4f, 0x8b, 0x8b, 0x01, 0xa2, 0x2b, 0x01, 0xea, 0x6e, 0x50, 0xb7, 0xba,
	0x11, 0x80, 0xd1, 0xff, 0xc2, 0x46, 0xcf, 0x0f, 0x1b, 0xa6, 0xab, 0xbe, 0x39, 0x4b, 0x7b, 0x11,
	0xc7, 0xc6, 0x60, 0x8a, 0x26, 0xcd, 0xe6, 0x52, 0xe8, 0x11, 0xbf, 0x56, 0x90, 0x1d, 0x6e, 0xf1,
	0x3d, 0xa6, 0x20, 0x30, 0xde, 0xdb, 0xe6, 0x59, 0xb1, 0xe3, 0x39, 0x8d, 0x66, 0x83, 0xff, 0x4e,
	0x4a, 0xf0, 0xc9, 0xaf, 0x31, 0x92, 0x70, 0x2b, 0x09, 0x62, 0x5e, 0x73, 0x21, 0xc3, 0xbb, 0x5b,
	0xf2, 0x0a, 0x42, 0xc4, 0x7b, 0x39, 0xf4, 0x29, 0x89, 0xd4, 0xb5, 0x0c, 0x71, 0x86, 0xf4, 0x46,
	0xb0, 0x38, 0x24, 0xc6, 0x61, 0x30, 0xc1, 0x18, 0x7d, 0x10, 0x12, 0xa7, 0x09, 0x8a, 0x99, 0xa3,
	0x6f, 0x42, 0xe3, 0x30, 0x68, 0xd6, 0xeb, 0x21, 0xae, 0x33, 0x65, 0xc6, 0x99, 0xfc, 0x1e, 0x9e,
	0xc9, 0xa3, 0x88, 0x14, 0x27, 0xf3, 0x7b, 0x61, 0xb3, 0xb8, 0x31, 0x6e, 0x1b, 0x79, 0x03, 0xaf,
	0xe7, 0x03, 0x47, 0x24, 0xcb, 0xfe, 0xd6, 0xf1, 0xbb, 0x60, 0x13, 0x2b, 0x1c, 0xe2, 0x1b, 0x37,
	0xf1, 0x58, 0xf1, 0x35, 0x6a, 0xa8, 0x61, 0x2e, 0x4c, 0x2b, 0x6a, 0x7a, 0x9c, 0xe3, 0xe5, 0x8e,
	0xdb, 0x2b, 0xc7, 0x39, 0x5e, 0xce, 0xb8, 0x71, 0x18, 0x24, 0x81, 0xeb, 0x50, 0x9a, 0x1e, 0xb3,
	0x4f, 0x2c, 0x30, 0x22, 0xc5, 0x03, 0xae, 0x82, 0x81, 0x06, 0x0e, 0xeb, 0x69, 0xf6, 0x1b, 0x39,
	0x7b, 0xbf, 0x24, 0x4c, 0x26, 0xcb, 0x20, 0xb6, 0x1d, 0x06, 0xf5, 0x8d, 0x48, 0xb9, 0xfc, 0x42,
	0x4c, 0x47, 0xa5, 0x8f, 0x11, 0x66, 0xfc, 0x23, 0x0a, 0x46, 0x7b, 0x60, 0xc4, 0xf1, 0x2c, 0x71,
	0xd1, 0xdf, 0x74, 0x8d, 0x94, 0x89, 0xc9, 0x3b, 0x32, 0xa5, 0x04, 0xc3, 0x91, 0x24, 0x1d, 0x4d,
	0xc0, 0x70, 0xcd, 0x74, 0x5c, 0x7f, 0x0e, 0x87, 0x99, 0x91, 0x53, 0x7c, 0xe4, 0x90, 0xa2, 0xa6,
	0x87, 0xc5, 0xa1, 0xee, 0x40, 0x32, 0xd4, 0xa1, 0xaf, 0x6a, 0xd0, 0xc5, 0xf7, 0xc8, 0xf1, 0xea,
	0xca, 0xd7, 0x9f, 0x5e, 0x5b, 0xbe, 0x5e, 0x56, 0xf2, 0xc9, 0x8f, 0xc6, 0xea, 0x51, 0xff, 0x9c,
	0x06, 0xc5, 0x14, 0x8d, 0xd9, 0x46, 0x04, 0xf8, 0x4d, 0xea, 0x3a, 0xcc, 0x47, 0x9b, 0xd4, 0xaf,
	0xd5, 0x64, 0x51, 0x3c, 0xa4, 0xc8, 0xb7, 0x09, 0xea, 0x14, 0x27, 0xf2, 0x1b, 0x06, 0x6a, 0x5c,
	0xc3, 0xb7, 0x55, 0x98, 0xe8, 0x51, 0xe0, 0x61, 0xdf, 0xc6, 0xdc, 0x80, 0x14, 0x93, 0xfc, 0xa9,
	0x89, 0xe3, 0x62, 0x79, 0x95, 0x12, 0x29, 0xd2, 0xd1, 0x88, 0x72, 0x5d, 0x00, 0x17, 0x1f, 0xf3,
	0x82, 0xd0, 0xc8, 0x53, 0xa6, 0x81, 0x17, 0x28, 0xda, 0x54, 0xbe, 0xa5, 0xe9, 0x39, 0x01, 0x0e,
	0x8f, 0x08, 0x0e, 0x32, 0x8d, 0x3d, 0xe2, 0x87, 0xe2, 0xde, 0x52, 0x61, 0xc7, 0x50, 0xee, 0x36,
	0x54, 0x46, 0xd8, 0x4b, 0x8f, 0xa4, 0xff, 0xad, 0x02, 0x99, 0xc1, 0x07, 0x17, 0xe8, 0xe4, 0x87,
	0xde, 0x38, 0xb9, 0x55, 0xfb, 0xd1, 0xc9, 0xad, 0xda, 0x3b, 0x27, 0xb7, 0x6a, 0x77, 0x56, 0xea,
	0x0e, 0x2d, 0x1f, 0x13, 0x33, 0xb0, 0x57, 0x8d, 0x3b, 0x16, 0xae, 0xe2, 0xb0, 0x3e, 0x3e, 0x8b,
	0x4d, 0x97, 0xce, 0x56, 0x7d, 0xba, 0xdd, 0xf1, 0xea, 0x98, 0xd0, 0xed, 0xc7, 0xa8, 0xb3, 0xdd,
	0x33, 0xa9, 0x33, 0x87, 0xc7, 0x83, 0xbb, 0xea, 0xe3, 0xc7, 0xa8, 0x33, 0x6e, 0xda, 0x66, 0x40,
	0x71, 0x48, 0xc6, 0x8d, 0x63, 0x4d, 0xcf, 0x27, 0xe3, 0xc4, 0x9a, 0xc5, 0x0d, 0xf3, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x4c, 0xf4, 0x79, 0x9f, 0x58, 0x42, 0x00, 0x00,
}

func (m *NetworkInstancesTe) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTe) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTe) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NetworkInstance) > 0 {
		for iNdEx := len(m.NetworkInstance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NetworkInstance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mpls != nil {
		{
			size, err := m.Mpls.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Lsps != nil {
		{
			size, err := m.Lsps.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.TeInterfaceAttributes != nil {
		{
			size, err := m.TeInterfaceAttributes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.TeGlobalAttributes != nil {
		{
			size, err := m.TeGlobalAttributes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TeLspTimers != nil {
		{
			size, err := m.TeLspTimers.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.MplsAdminGroups != nil {
		{
			size, err := m.MplsAdminGroups.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Srlgs != nil {
		{
			size, err := m.Srlgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Srlg) > 0 {
		for iNdEx := len(m.Srlg) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Srlg[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FloodingType != nil {
		i -= len(*m.FloodingType)
		copy(dAtA[i:], *m.FloodingType)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.FloodingType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.Cost != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Cost))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Value != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Value))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AdminGroup) > 0 {
		for iNdEx := len(m.AdminGroup) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AdminGroup[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.AdminGroupName != nil {
		i -= len(*m.AdminGroupName)
		copy(dAtA[i:], *m.AdminGroupName)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.AdminGroupName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BitPosition != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.BitPosition))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.AdminGroupName != nil {
		i -= len(*m.AdminGroupName)
		copy(dAtA[i:], *m.AdminGroupName)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.AdminGroupName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReoptimizeTimer != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.ReoptimizeTimer))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.CleanupDelay != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.CleanupDelay))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InstallDelay != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.InstallDelay))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BandwidthMeasurement != nil {
		{
			size, err := m.BandwidthMeasurement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xd2
	}
	if m.IgpFloodingBandwidth != nil {
		{
			size, err := m.IgpFloodingBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.InterfaceRef != nil {
		{
			size, err := m.InterfaceRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AdminGroup) > 0 {
		for iNdEx := len(m.AdminGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AdminGroup[iNdEx])
			copy(dAtA[i:], m.AdminGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.AdminGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.SrlgMembership) > 0 {
		for iNdEx := len(m.SrlgMembership) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SrlgMembership[iNdEx])
			copy(dAtA[i:], m.SrlgMembership[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.SrlgMembership[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa2
		}
	}
	if m.InterfaceId != nil {
		i -= len(*m.InterfaceId)
		copy(dAtA[i:], *m.InterfaceId)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.InterfaceId)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterface != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Subinterface))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Interface != nil {
		i -= len(*m.Interface)
		copy(dAtA[i:], *m.Interface)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Interface)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DeltaPercentage != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.DeltaPercentage))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.ThresholdType != nil {
		i -= len(*m.ThresholdType)
		copy(dAtA[i:], *m.ThresholdType)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.ThresholdType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastSampleMeasuredSrUtil != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LastSampleMeasuredSrUtil))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.LastCalculatedSrUtilisation != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LastCalculatedSrUtilisation))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ConstrainedPath != nil {
		{
			size, err := m.ConstrainedPath.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContainerTunnels != nil {
		{
			size, err := m.ContainerTunnels.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Tunnels != nil {
		{
			size, err := m.Tunnels.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.NamedExplicitPaths != nil {
		{
			size, err := m.NamedExplicitPaths.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NamedExplicitPath) > 0 {
		for iNdEx := len(m.NamedExplicitPath) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NamedExplicitPath[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ExplicitRouteObjects != nil {
		{
			size, err := m.ExplicitRouteObjects.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExplicitRouteObject) > 0 {
		for iNdEx := len(m.ExplicitRouteObject) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExplicitRouteObject[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.HopType != nil {
		i -= len(*m.HopType)
		copy(dAtA[i:], *m.HopType)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.HopType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Tunnel) > 0 {
		for iNdEx := len(m.Tunnel) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tunnel[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.P2PTunnelAttributes != nil {
		{
			size, err := m.P2PTunnelAttributes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Bandwidth != nil {
		{
			size, err := m.Bandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Source != nil {
		i -= len(*m.Source)
		copy(dAtA[i:], *m.Source)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Source)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.OperStatus != nil {
		i -= len(*m.OperStatus)
		copy(dAtA[i:], *m.OperStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.OperStatus)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xaa
	}
	if m.HoldPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.HoldPriority))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.SetupPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SetupPriority))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.SoftPreemption != nil {
		i--
		if *m.SoftPreemption {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.Source != nil {
		i -= len(*m.Source)
		copy(dAtA[i:], *m.Source)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Source)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x8a
	}
	if m.ReoptimizeTimer != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.ReoptimizeTimer))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.ProtectionStyleRequested != nil {
		i -= len(*m.ProtectionStyleRequested)
		copy(dAtA[i:], *m.ProtectionStyleRequested)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.ProtectionStyleRequested)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xfa
	}
	if m.InheritedMetric != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.InheritedMetric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.Metric != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.MetricType != nil {
		i -= len(*m.MetricType)
		copy(dAtA[i:], *m.MetricType)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.MetricType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if m.Preference != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Preference))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.AdminStatus != nil {
		i -= len(*m.AdminStatus)
		copy(dAtA[i:], *m.AdminStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.AdminStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd2
	}
	if m.Description != nil {
		i -= len(*m.Description)
		copy(dAtA[i:], *m.Description)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Description)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xca
	}
	if m.SignalingProtocol != nil {
		i -= len(*m.SignalingProtocol)
		copy(dAtA[i:], *m.SignalingProtocol)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.SignalingProtocol)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.Type != nil {
		i -= len(*m.Type)
		copy(dAtA[i:], *m.Type)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Type)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.TunnelId != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.TunnelId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastTransitionTime != nil {
		i -= len(*m.LastTransitionTime)
		copy(dAtA[i:], *m.LastTransitionTime)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.LastTransitionTime)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.NextReoptimizationTime != nil {
		i -= len(*m.NextReoptimizationTime)
		copy(dAtA[i:], *m.NextReoptimizationTime)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.NextReoptimizationTime)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if m.CurrentPathTime != nil {
		i -= len(*m.CurrentPathTime)
		copy(dAtA[i:], *m.CurrentPathTime)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.CurrentPathTime)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.OnlineTime != nil {
		i -= len(*m.OnlineTime)
		copy(dAtA[i:], *m.OnlineTime)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.OnlineTime)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.StateChanges != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.StateChanges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.PathChanges != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.PathChanges))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AutoBandwidth != nil {
		{
			size, err := m.AutoBandwidth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SignaledBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SignaledBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.SetBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SetBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.SpecificationType != nil {
		i -= len(*m.SpecificationType)
		copy(dAtA[i:], *m.SpecificationType)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.SpecificationType)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Underflow != nil {
		{
			size, err := m.Underflow.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.Overflow != nil {
		{
			size, err := m.Overflow.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxAverageBw != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MaxAverageBw))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.AdjustThreshold != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.AdjustThreshold))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.AdjustInterval != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.AdjustInterval))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.MaxBw != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MaxBw))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.MinBw != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MinBw))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TriggerEventCount != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.TriggerEventCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TriggerEventCount != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.TriggerEventCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.P2PSecondaryPaths != nil {
		{
			size, err := m.P2PSecondaryPaths.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xca
	}
	if m.P2PPrimaryPath != nil {
		{
			size, err := m.P2PPrimaryPath.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Destination != nil {
		i -= len(*m.Destination)
		copy(dAtA[i:], *m.Destination)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Destination)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.P2PPrimaryPath) > 0 {
		for iNdEx := len(m.P2PPrimaryPath) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.P2PPrimaryPath[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LspInstances) > 0 {
		for iNdEx := len(m.LspInstances) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LspInstances[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xca
		}
	}
	if m.AdminGroups != nil {
		{
			size, err := m.AdminGroups.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NotifyStatus != nil {
		i -= len(*m.NotifyStatus)
		copy(dAtA[i:], *m.NotifyStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.NotifyStatus)))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x8a
	}
	if m.RetryTimer != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.RetryTimer))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.HoldPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.HoldPriority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.SetupPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SetupPriority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.Preference != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Preference))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if len(m.AssociatedRsvpSessions) > 0 {
		for iNdEx := len(m.AssociatedRsvpSessions) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdTeOc(dAtA, i, uint64(m.AssociatedRsvpSessions[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xd8
		}
	}
	if m.ExplicitPathName != nil {
		i -= len(*m.ExplicitPathName)
		copy(dAtA[i:], *m.ExplicitPathName)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.ExplicitPathName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.CspfMetric != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.CspfMetric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.CspfStatus != nil {
		i -= len(*m.CspfStatus)
		copy(dAtA[i:], *m.CspfStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.CspfStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.CspfTiebreaker != nil {
		i -= len(*m.CspfTiebreaker)
		copy(dAtA[i:], *m.CspfTiebreaker)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.CspfTiebreaker)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.UseCspf != nil {
		i--
		if *m.UseCspf {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IncludeAnyGroup) > 0 {
		for iNdEx := len(m.IncludeAnyGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IncludeAnyGroup[iNdEx])
			copy(dAtA[i:], m.IncludeAnyGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.IncludeAnyGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.IncludeAllGroup) > 0 {
		for iNdEx := len(m.IncludeAllGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IncludeAllGroup[iNdEx])
			copy(dAtA[i:], m.IncludeAllGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.IncludeAllGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.ExcludeGroup) > 0 {
		for iNdEx := len(m.ExcludeGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExcludeGroup[iNdEx])
			copy(dAtA[i:], m.ExcludeGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.ExcludeGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Subcode != nil {
		i -= len(*m.Subcode)
		copy(dAtA[i:], *m.Subcode)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Subcode)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.LspId != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LspId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.LocalIndex != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LocalIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != nil {
		i -= len(*m.Reason)
		copy(dAtA[i:], *m.Reason)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Reason)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.MaxAvgBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MaxAvgBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.Bandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Bandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.Metric != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.NotifyStatus != nil {
		i -= len(*m.NotifyStatus)
		copy(dAtA[i:], *m.NotifyStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.NotifyStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.LocalIndex != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LocalIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.P2PSecondaryPath) > 0 {
		for iNdEx := len(m.P2PSecondaryPath) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.P2PSecondaryPath[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LspInstances) > 0 {
		for iNdEx := len(m.LspInstances) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LspInstances[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xca
		}
	}
	if m.AdminGroups != nil {
		{
			size, err := m.AdminGroups.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AssociatedRsvpSessions) > 0 {
		for iNdEx := len(m.AssociatedRsvpSessions) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintRpdTeOc(dAtA, i, uint64(m.AssociatedRsvpSessions[iNdEx]))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xd8
		}
	}
	if m.RetryTimer != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.RetryTimer))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.HoldPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.HoldPriority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.SetupPriority != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SetupPriority))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.Preference != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.Preference))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.ExplicitPathName != nil {
		i -= len(*m.ExplicitPathName)
		copy(dAtA[i:], *m.ExplicitPathName)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.ExplicitPathName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.CspfTiebreaker != nil {
		i -= len(*m.CspfTiebreaker)
		copy(dAtA[i:], *m.CspfTiebreaker)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.CspfTiebreaker)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.UseCspf != nil {
		i--
		if *m.UseCspf {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IncludeAnyGroup) > 0 {
		for iNdEx := len(m.IncludeAnyGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IncludeAnyGroup[iNdEx])
			copy(dAtA[i:], m.IncludeAnyGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.IncludeAnyGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.IncludeAllGroup) > 0 {
		for iNdEx := len(m.IncludeAllGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.IncludeAllGroup[iNdEx])
			copy(dAtA[i:], m.IncludeAllGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.IncludeAllGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.ExcludeGroup) > 0 {
		for iNdEx := len(m.ExcludeGroup) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ExcludeGroup[iNdEx])
			copy(dAtA[i:], m.ExcludeGroup[iNdEx])
			i = encodeVarintRpdTeOc(dAtA, i, uint64(len(m.ExcludeGroup[iNdEx])))
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x9a
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.LspId != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LspId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.LocalIndex != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.LocalIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != nil {
		i -= len(*m.Reason)
		copy(dAtA[i:], *m.Reason)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Reason)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.NotifyStatus != nil {
		i -= len(*m.NotifyStatus)
		copy(dAtA[i:], *m.NotifyStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.NotifyStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ContainerTunnel) > 0 {
		for iNdEx := len(m.ContainerTunnel) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ContainerTunnel[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sampling != nil {
		{
			size, err := m.Sampling.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRpdTeOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Reason != nil {
		i -= len(*m.Reason)
		copy(dAtA[i:], *m.Reason)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Reason)))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa2
	}
	if m.FailoverNormalization != nil {
		i--
		if *m.FailoverNormalization {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.IncrementalNormalization != nil {
		i--
		if *m.IncrementalNormalization {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.TimeToNormalize != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.TimeToNormalize))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.MergingBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MergingBandwidth))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.SplittingBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SplittingBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.MinSignalingBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MinSignalingBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.MaxSignalingBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MaxSignalingBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.SampledAggregateBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SampledAggregateBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.AggregateBandwidth != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.AggregateBandwidth))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.NormalizeThreshold != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.NormalizeThreshold))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.NormalizeTimer != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.NormalizeTimer))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.MaximumLspCount != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MaximumLspCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.MinimumLspCount != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MinimumLspCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.MemberCount != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.MemberCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.NormalizationStatus != nil {
		i -= len(*m.NormalizationStatus)
		copy(dAtA[i:], *m.NormalizationStatus)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.NormalizationStatus)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.OperState != nil {
		i -= len(*m.OperState)
		copy(dAtA[i:], *m.OperState)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.OperState)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SamplingPercentile != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SamplingPercentile))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.SamplingMode != nil {
		i -= len(*m.SamplingMode)
		copy(dAtA[i:], *m.SamplingMode)
		i = encodeVarintRpdTeOc(dAtA, i, uint64(len(*m.SamplingMode)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.SamplingOutlierCutoff != nil {
		i = encodeVarintRpdTeOc(dAtA, i, uint64(*m.SamplingOutlierCutoff))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintRpdTeOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovRpdTeOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkInstancesTe) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NetworkInstance) > 0 {
		for _, e := range m.NetworkInstance {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Mpls != nil {
		l = m.Mpls.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TeGlobalAttributes != nil {
		l = m.TeGlobalAttributes.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.TeInterfaceAttributes != nil {
		l = m.TeInterfaceAttributes.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Lsps != nil {
		l = m.Lsps.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Srlgs != nil {
		l = m.Srlgs.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.MplsAdminGroups != nil {
		l = m.MplsAdminGroups.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.TeLspTimers != nil {
		l = m.TeLspTimers.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Srlg) > 0 {
		for _, e := range m.Srlg {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Value != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Value))
	}
	if m.Cost != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Cost))
	}
	if m.FloodingType != nil {
		l = len(*m.FloodingType)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AdminGroup) > 0 {
		for _, e := range m.AdminGroup {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdminGroupName != nil {
		l = len(*m.AdminGroupName)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdminGroupName != nil {
		l = len(*m.AdminGroupName)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.BitPosition != nil {
		n += 2 + sovRpdTeOc(uint64(*m.BitPosition))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InstallDelay != nil {
		n += 2 + sovRpdTeOc(uint64(*m.InstallDelay))
	}
	if m.CleanupDelay != nil {
		n += 2 + sovRpdTeOc(uint64(*m.CleanupDelay))
	}
	if m.ReoptimizeTimer != nil {
		n += 2 + sovRpdTeOc(uint64(*m.ReoptimizeTimer))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.InterfaceRef != nil {
		l = m.InterfaceRef.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.IgpFloodingBandwidth != nil {
		l = m.IgpFloodingBandwidth.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.BandwidthMeasurement != nil {
		l = m.BandwidthMeasurement.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InterfaceId != nil {
		l = len(*m.InterfaceId)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if len(m.SrlgMembership) > 0 {
		for _, s := range m.SrlgMembership {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if len(m.AdminGroup) > 0 {
		for _, s := range m.AdminGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interface != nil {
		l = len(*m.Interface)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Subinterface != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Subinterface))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ThresholdType != nil {
		l = len(*m.ThresholdType)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.DeltaPercentage != nil {
		n += 2 + sovRpdTeOc(uint64(*m.DeltaPercentage))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastCalculatedSrUtilisation != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LastCalculatedSrUtilisation))
	}
	if m.LastSampleMeasuredSrUtil != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LastSampleMeasuredSrUtil))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConstrainedPath != nil {
		l = m.ConstrainedPath.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NamedExplicitPaths != nil {
		l = m.NamedExplicitPaths.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Tunnels != nil {
		l = m.Tunnels.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.ContainerTunnels != nil {
		l = m.ContainerTunnels.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.NamedExplicitPath) > 0 {
		for _, e := range m.NamedExplicitPath {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.ExplicitRouteObjects != nil {
		l = m.ExplicitRouteObjects.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExplicitRouteObject) > 0 {
		for _, e := range m.ExplicitRouteObject {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Address != nil {
		l = len(*m.Address)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.HopType != nil {
		l = len(*m.HopType)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Index != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Tunnel) > 0 {
		for _, e := range m.Tunnel {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Source != nil {
		l = len(*m.Source)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Bandwidth != nil {
		l = m.Bandwidth.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.P2PTunnelAttributes != nil {
		l = m.P2PTunnelAttributes.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TunnelId != nil {
		n += 2 + sovRpdTeOc(uint64(*m.TunnelId))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Type != nil {
		l = len(*m.Type)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.SignalingProtocol != nil {
		l = len(*m.SignalingProtocol)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Description != nil {
		l = len(*m.Description)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.AdminStatus != nil {
		l = len(*m.AdminStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Preference != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Preference))
	}
	if m.MetricType != nil {
		l = len(*m.MetricType)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Metric != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Metric))
	}
	if m.InheritedMetric != nil {
		n += 2 + sovRpdTeOc(uint64(*m.InheritedMetric))
	}
	if m.ProtectionStyleRequested != nil {
		l = len(*m.ProtectionStyleRequested)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.ReoptimizeTimer != nil {
		n += 2 + sovRpdTeOc(uint64(*m.ReoptimizeTimer))
	}
	if m.Source != nil {
		l = len(*m.Source)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.SoftPreemption != nil {
		n += 3
	}
	if m.SetupPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SetupPriority))
	}
	if m.HoldPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.HoldPriority))
	}
	if m.OperStatus != nil {
		l = len(*m.OperStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PathChanges != nil {
		n += 2 + sovRpdTeOc(uint64(*m.PathChanges))
	}
	if m.StateChanges != nil {
		n += 2 + sovRpdTeOc(uint64(*m.StateChanges))
	}
	if m.OnlineTime != nil {
		l = len(*m.OnlineTime)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.CurrentPathTime != nil {
		l = len(*m.CurrentPathTime)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.NextReoptimizationTime != nil {
		l = len(*m.NextReoptimizationTime)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.LastTransitionTime != nil {
		l = len(*m.LastTransitionTime)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.AutoBandwidth != nil {
		l = m.AutoBandwidth.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SpecificationType != nil {
		l = len(*m.SpecificationType)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.SetBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SetBandwidth))
	}
	if m.SignaledBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SignaledBandwidth))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Overflow != nil {
		l = m.Overflow.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Underflow != nil {
		l = m.Underflow.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		n += 3
	}
	if m.MinBw != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MinBw))
	}
	if m.MaxBw != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MaxBw))
	}
	if m.AdjustInterval != nil {
		n += 2 + sovRpdTeOc(uint64(*m.AdjustInterval))
	}
	if m.AdjustThreshold != nil {
		n += 2 + sovRpdTeOc(uint64(*m.AdjustThreshold))
	}
	if m.MaxAverageBw != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MaxAverageBw))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		n += 3
	}
	if m.TriggerEventCount != nil {
		n += 2 + sovRpdTeOc(uint64(*m.TriggerEventCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		n += 3
	}
	if m.TriggerEventCount != nil {
		n += 2 + sovRpdTeOc(uint64(*m.TriggerEventCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.P2PPrimaryPath != nil {
		l = m.P2PPrimaryPath.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.P2PSecondaryPaths != nil {
		l = m.P2PSecondaryPaths.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Destination != nil {
		l = len(*m.Destination)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.P2PPrimaryPath) > 0 {
		for _, e := range m.P2PPrimaryPath {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.AdminGroups != nil {
		l = m.AdminGroups.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if len(m.LspInstances) > 0 {
		for _, e := range m.LspInstances {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.UseCspf != nil {
		n += 3
	}
	if m.CspfTiebreaker != nil {
		l = len(*m.CspfTiebreaker)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.CspfStatus != nil {
		l = len(*m.CspfStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.CspfMetric != nil {
		n += 2 + sovRpdTeOc(uint64(*m.CspfMetric))
	}
	if m.ExplicitPathName != nil {
		l = len(*m.ExplicitPathName)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if len(m.AssociatedRsvpSessions) > 0 {
		for _, e := range m.AssociatedRsvpSessions {
			n += 2 + sovRpdTeOc(uint64(e))
		}
	}
	if m.Preference != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Preference))
	}
	if m.SetupPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SetupPriority))
	}
	if m.HoldPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.HoldPriority))
	}
	if m.RetryTimer != nil {
		n += 2 + sovRpdTeOc(uint64(*m.RetryTimer))
	}
	if m.NotifyStatus != nil {
		l = len(*m.NotifyStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExcludeGroup) > 0 {
		for _, s := range m.ExcludeGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if len(m.IncludeAllGroup) > 0 {
		for _, s := range m.IncludeAllGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if len(m.IncludeAnyGroup) > 0 {
		for _, s := range m.IncludeAnyGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalIndex != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LocalIndex))
	}
	if m.LspId != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LspId))
	}
	if m.Subcode != nil {
		l = len(*m.Subcode)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalIndex != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LocalIndex))
	}
	if m.NotifyStatus != nil {
		l = len(*m.NotifyStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Metric != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Metric))
	}
	if m.Bandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Bandwidth))
	}
	if m.MaxAvgBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MaxAvgBandwidth))
	}
	if m.Reason != nil {
		l = len(*m.Reason)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.P2PSecondaryPath) > 0 {
		for _, e := range m.P2PSecondaryPath {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.AdminGroups != nil {
		l = m.AdminGroups.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if len(m.LspInstances) > 0 {
		for _, e := range m.LspInstances {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.UseCspf != nil {
		n += 3
	}
	if m.CspfTiebreaker != nil {
		l = len(*m.CspfTiebreaker)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.ExplicitPathName != nil {
		l = len(*m.ExplicitPathName)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Preference != nil {
		n += 2 + sovRpdTeOc(uint64(*m.Preference))
	}
	if m.SetupPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SetupPriority))
	}
	if m.HoldPriority != nil {
		n += 2 + sovRpdTeOc(uint64(*m.HoldPriority))
	}
	if m.RetryTimer != nil {
		n += 2 + sovRpdTeOc(uint64(*m.RetryTimer))
	}
	if len(m.AssociatedRsvpSessions) > 0 {
		for _, e := range m.AssociatedRsvpSessions {
			n += 2 + sovRpdTeOc(uint64(e))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExcludeGroup) > 0 {
		for _, s := range m.ExcludeGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if len(m.IncludeAllGroup) > 0 {
		for _, s := range m.IncludeAllGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if len(m.IncludeAnyGroup) > 0 {
		for _, s := range m.IncludeAnyGroup {
			l = len(s)
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocalIndex != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LocalIndex))
	}
	if m.LspId != nil {
		n += 2 + sovRpdTeOc(uint64(*m.LspId))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NotifyStatus != nil {
		l = len(*m.NotifyStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Reason != nil {
		l = len(*m.Reason)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ContainerTunnel) > 0 {
		for _, e := range m.ContainerTunnel {
			l = e.Size()
			n += 2 + l + sovRpdTeOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.OperState != nil {
		l = len(*m.OperState)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.NormalizationStatus != nil {
		l = len(*m.NormalizationStatus)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.MemberCount != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MemberCount))
	}
	if m.MinimumLspCount != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MinimumLspCount))
	}
	if m.MaximumLspCount != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MaximumLspCount))
	}
	if m.NormalizeTimer != nil {
		n += 2 + sovRpdTeOc(uint64(*m.NormalizeTimer))
	}
	if m.NormalizeThreshold != nil {
		n += 2 + sovRpdTeOc(uint64(*m.NormalizeThreshold))
	}
	if m.AggregateBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.AggregateBandwidth))
	}
	if m.SampledAggregateBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SampledAggregateBandwidth))
	}
	if m.MaxSignalingBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MaxSignalingBandwidth))
	}
	if m.MinSignalingBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MinSignalingBandwidth))
	}
	if m.SplittingBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SplittingBandwidth))
	}
	if m.MergingBandwidth != nil {
		n += 2 + sovRpdTeOc(uint64(*m.MergingBandwidth))
	}
	if m.TimeToNormalize != nil {
		n += 2 + sovRpdTeOc(uint64(*m.TimeToNormalize))
	}
	if m.IncrementalNormalization != nil {
		n += 3
	}
	if m.FailoverNormalization != nil {
		n += 3
	}
	if m.Reason != nil {
		l = len(*m.Reason)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.Sampling != nil {
		l = m.Sampling.Size()
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SamplingOutlierCutoff != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SamplingOutlierCutoff))
	}
	if m.SamplingMode != nil {
		l = len(*m.SamplingMode)
		n += 2 + l + sovRpdTeOc(uint64(l))
	}
	if m.SamplingPercentile != nil {
		n += 2 + sovRpdTeOc(uint64(*m.SamplingPercentile))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRpdTeOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRpdTeOc(x uint64) (n int) {
	return sovRpdTeOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkInstancesTe) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instances_te: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instances_te: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkInstance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkInstance = append(m.NetworkInstance, &NetworkInstancesTeNetworkInstanceList{})
			if err := m.NetworkInstance[len(m.NetworkInstance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: network_instance_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: network_instance_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mpls", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Mpls == nil {
				m.Mpls = &NetworkInstancesTeNetworkInstanceListMplsType{}
			}
			if err := m.Mpls.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeGlobalAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TeGlobalAttributes == nil {
				m.TeGlobalAttributes = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType{}
			}
			if err := m.TeGlobalAttributes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeInterfaceAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TeInterfaceAttributes == nil {
				m.TeInterfaceAttributes = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType{}
			}
			if err := m.TeInterfaceAttributes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lsps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Lsps == nil {
				m.Lsps = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsType{}
			}
			if err := m.Lsps.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_global_attributes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_global_attributes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Srlgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Srlgs == nil {
				m.Srlgs = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType{}
			}
			if err := m.Srlgs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MplsAdminGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MplsAdminGroups == nil {
				m.MplsAdminGroups = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType{}
			}
			if err := m.MplsAdminGroups.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeLspTimers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TeLspTimers == nil {
				m.TeLspTimers = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType{}
			}
			if err := m.TeLspTimers.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: srlgs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: srlgs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Srlg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Srlg = append(m.Srlg, &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList{})
			if err := m.Srlg[len(m.Srlg)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: srlg_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: srlg_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeSrlgsTypeSrlgListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cost", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Cost = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FloodingType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FloodingType = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_admin_groups_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_admin_groups_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminGroup = append(m.AdminGroup, &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList{})
			if err := m.AdminGroup[len(m.AdminGroup)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: admin_group_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: admin_group_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdminGroupName = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeMplsAdminGroupsTypeAdminGroupListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdminGroupName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BitPosition", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BitPosition = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_lsp_timers_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_lsp_timers_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeGlobalAttributesTypeTeLspTimersTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallDelay", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstallDelay = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CleanupDelay", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CleanupDelay = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReoptimizeTimer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReoptimizeTimer = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: te_interface_attributes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: te_interface_attributes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InterfaceRef == nil {
				m.InterfaceRef = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType{}
			}
			if err := m.InterfaceRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IgpFloodingBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IgpFloodingBandwidth == nil {
				m.IgpFloodingBandwidth = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType{}
			}
			if err := m.IgpFloodingBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 154:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BandwidthMeasurement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BandwidthMeasurement == nil {
				m.BandwidthMeasurement = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType{}
			}
			if err := m.BandwidthMeasurement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterfaceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InterfaceId = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrlgMembership", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrlgMembership = append(m.SrlgMembership, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminGroup = append(m.AdminGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_ref_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_ref_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListInterfaceRefTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Interface = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Subinterface = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: igp_flooding_bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: igp_flooding_bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListIgpFloodingBandwidthTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThresholdType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ThresholdType = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeltaPercentage", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeltaPercentage = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_measurement_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_measurement_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeTeInterfaceAttributesTypeInterfaceListBandwidthMeasurementTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastCalculatedSrUtilisation", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastCalculatedSrUtilisation = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSampleMeasuredSrUtil", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LastSampleMeasuredSrUtil = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsps_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsps_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConstrainedPath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ConstrainedPath == nil {
				m.ConstrainedPath = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType{}
			}
			if err := m.ConstrainedPath.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: constrained_path_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: constrained_path_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamedExplicitPaths", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NamedExplicitPaths == nil {
				m.NamedExplicitPaths = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType{}
			}
			if err := m.NamedExplicitPaths.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tunnels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tunnels == nil {
				m.Tunnels = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType{}
			}
			if err := m.Tunnels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainerTunnels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContainerTunnels == nil {
				m.ContainerTunnels = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType{}
			}
			if err := m.ContainerTunnels.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: named_explicit_paths_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: named_explicit_paths_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamedExplicitPath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NamedExplicitPath = append(m.NamedExplicitPath, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList{})
			if err := m.NamedExplicitPath[len(m.NamedExplicitPath)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: named_explicit_path_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: named_explicit_path_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRouteObjects", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExplicitRouteObjects == nil {
				m.ExplicitRouteObjects = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType{}
			}
			if err := m.ExplicitRouteObjects.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: explicit_route_objects_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: explicit_route_objects_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRouteObject", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplicitRouteObject = append(m.ExplicitRouteObject, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList{})
			if err := m.ExplicitRouteObject[len(m.ExplicitRouteObject)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: explicit_route_object_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: explicit_route_object_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeNamedExplicitPathsTypeNamedExplicitPathListExplicitRouteObjectsTypeExplicitRouteObjectListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HopType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HopType = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tunnels_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tunnels_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tunnel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tunnel = append(m.Tunnel, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList{})
			if err := m.Tunnel[len(m.Tunnel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tunnel_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tunnel_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Source = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bandwidth == nil {
				m.Bandwidth = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType{}
			}
			if err := m.Bandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P2PTunnelAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.P2PTunnelAttributes == nil {
				m.P2PTunnelAttributes = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType{}
			}
			if err := m.P2PTunnelAttributes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TunnelId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TunnelId = &v
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Type = &s
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignalingProtocol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SignalingProtocol = &s
			iNdEx = postIndex
		case 57:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Description = &s
			iNdEx = postIndex
		case 58:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdminStatus = &s
			iNdEx = postIndex
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Preference", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Preference = &v
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MetricType = &s
			iNdEx = postIndex
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InheritedMetric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InheritedMetric = &v
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtectionStyleRequested", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProtectionStyleRequested = &s
			iNdEx = postIndex
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReoptimizeTimer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReoptimizeTimer = &v
		case 65:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Source = &s
			iNdEx = postIndex
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftPreemption", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.SoftPreemption = &b
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetupPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SetupPriority = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HoldPriority = &v
		case 69:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OperStatus = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PathChanges", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PathChanges = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateChanges", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StateChanges = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlineTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OnlineTime = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPathTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CurrentPathTime = &s
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextReoptimizationTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NextReoptimizationTime = &s
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LastTransitionTime = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoBandwidth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AutoBandwidth == nil {
				m.AutoBandwidth = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType{}
			}
			if err := m.AutoBandwidth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SpecificationType = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SetBandwidth = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignaledBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SignaledBandwidth = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: auto_bandwidth_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: auto_bandwidth_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Overflow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Overflow == nil {
				m.Overflow = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType{}
			}
			if err := m.Overflow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Underflow", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Underflow == nil {
				m.Underflow = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType{}
			}
			if err := m.Underflow.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinBw", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinBw = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBw", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxBw = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjustInterval", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdjustInterval = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdjustThreshold", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AdjustThreshold = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAverageBw", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAverageBw = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: overflow_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: overflow_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeOverflowTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TriggerEventCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TriggerEventCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: underflow_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: underflow_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListBandwidthTypeAutoBandwidthTypeUnderflowTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TriggerEventCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TriggerEventCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: p2p_tunnel_attributes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: p2p_tunnel_attributes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P2PPrimaryPath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.P2PPrimaryPath == nil {
				m.P2PPrimaryPath = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType{}
			}
			if err := m.P2PPrimaryPath.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P2PSecondaryPaths", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.P2PSecondaryPaths == nil {
				m.P2PSecondaryPaths = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType{}
			}
			if err := m.P2PSecondaryPaths.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Destination = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: p2p_primary_path_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: p2p_primary_path_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P2PPrimaryPath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.P2PPrimaryPath = append(m.P2PPrimaryPath, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList{})
			if err := m.P2PPrimaryPath[len(m.P2PPrimaryPath)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: p2p_primary_path_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: p2p_primary_path_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminGroups == nil {
				m.AdminGroups = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType{}
			}
			if err := m.AdminGroups.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspInstances", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LspInstances = append(m.LspInstances, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList{})
			if err := m.LspInstances[len(m.LspInstances)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCspf", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UseCspf = &b
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CspfTiebreaker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CspfTiebreaker = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CspfStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CspfStatus = &s
			iNdEx = postIndex
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CspfMetric", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CspfMetric = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitPathName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExplicitPathName = &s
			iNdEx = postIndex
		case 59:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdTeOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AssociatedRsvpSessions = append(m.AssociatedRsvpSessions, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdTeOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdTeOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdTeOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AssociatedRsvpSessions) == 0 {
					m.AssociatedRsvpSessions = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdTeOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AssociatedRsvpSessions = append(m.AssociatedRsvpSessions, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AssociatedRsvpSessions", wireType)
			}
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Preference", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Preference = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetupPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SetupPriority = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HoldPriority = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetryTimer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetryTimer = &v
		case 81:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NotifyStatus = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: admin_groups_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: admin_groups_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListAdminGroupsTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludeGroup = append(m.ExcludeGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncludeAllGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncludeAllGroup = append(m.IncludeAllGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncludeAnyGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncludeAnyGroup = append(m.IncludeAnyGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsp_instances_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsp_instances_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalIndex = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspId = &v
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Subcode = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PPrimaryPathTypeP2PPrimaryPathListLspInstancesListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalIndex = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NotifyStatus = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Bandwidth = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAvgBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxAvgBandwidth = &v
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Reason = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: p2p_secondary_paths_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: p2p_secondary_paths_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field P2PSecondaryPath", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.P2PSecondaryPath = append(m.P2PSecondaryPath, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList{})
			if err := m.P2PSecondaryPath[len(m.P2PSecondaryPath)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: p2p_secondary_path_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: p2p_secondary_path_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminGroups == nil {
				m.AdminGroups = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType{}
			}
			if err := m.AdminGroups.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 153:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspInstances", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LspInstances = append(m.LspInstances, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList{})
			if err := m.LspInstances[len(m.LspInstances)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseCspf", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UseCspf = &b
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CspfTiebreaker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CspfTiebreaker = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitPathName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ExplicitPathName = &s
			iNdEx = postIndex
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Preference", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Preference = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetupPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SetupPriority = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldPriority", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HoldPriority = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetryTimer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RetryTimer = &v
		case 59:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdTeOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AssociatedRsvpSessions = append(m.AssociatedRsvpSessions, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowRpdTeOc
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthRpdTeOc
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthRpdTeOc
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AssociatedRsvpSessions) == 0 {
					m.AssociatedRsvpSessions = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowRpdTeOc
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AssociatedRsvpSessions = append(m.AssociatedRsvpSessions, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AssociatedRsvpSessions", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: admin_groups_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: admin_groups_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListAdminGroupsTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExcludeGroup = append(m.ExcludeGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncludeAllGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncludeAllGroup = append(m.IncludeAllGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncludeAnyGroup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IncludeAnyGroup = append(m.IncludeAnyGroup, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: lsp_instances_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: lsp_instances_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalIndex = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LspId = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeTunnelsTypeTunnelListP2PTunnelAttributesTypeP2PSecondaryPathsTypeP2PSecondaryPathListLspInstancesListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NotifyStatus = &s
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Reason = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: container_tunnels_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: container_tunnels_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainerTunnel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContainerTunnel = append(m.ContainerTunnel, &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList{})
			if err := m.ContainerTunnel[len(m.ContainerTunnel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: container_tunnel_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: container_tunnel_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperState", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.OperState = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NormalizationStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.NormalizationStatus = &s
			iNdEx = postIndex
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemberCount = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinimumLspCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinimumLspCount = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaximumLspCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaximumLspCount = &v
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NormalizeTimer", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NormalizeTimer = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NormalizeThreshold", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NormalizeThreshold = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AggregateBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AggregateBandwidth = &v
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SampledAggregateBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SampledAggregateBandwidth = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxSignalingBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxSignalingBandwidth = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinSignalingBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinSignalingBandwidth = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SplittingBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SplittingBandwidth = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergingBandwidth", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MergingBandwidth = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeToNormalize", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TimeToNormalize = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IncrementalNormalization", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IncrementalNormalization = &b
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailoverNormalization", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FailoverNormalization = &b
		case 68:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Reason = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sampling", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sampling == nil {
				m.Sampling = &NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType{}
			}
			if err := m.Sampling.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkInstancesTeNetworkInstanceListMplsTypeLspsTypeConstrainedPathTypeContainerTunnelsTypeContainerTunnelListStateTypeSamplingType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sampling_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sampling_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SamplingOutlierCutoff", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SamplingOutlierCutoff = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SamplingMode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SamplingMode = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SamplingPercentile", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SamplingPercentile = &v
		default:
			iNdEx = preIndex
			skippy, err := skipRpdTeOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRpdTeOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRpdTeOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRpdTeOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRpdTeOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRpdTeOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRpdTeOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRpdTeOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRpdTeOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRpdTeOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRpdTeOc = fmt.Errorf("proto: unexpected end of group")
)
