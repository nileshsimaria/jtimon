// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: smid_oc.proto

package schema

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type JunosSmi struct {
	System               *JunosSmiSystemType `protobuf:"bytes,151,opt,name=system" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JunosSmi) Reset()         { *m = JunosSmi{} }
func (m *JunosSmi) String() string { return proto.CompactTextString(m) }
func (*JunosSmi) ProtoMessage()    {}
func (*JunosSmi) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0}
}
func (m *JunosSmi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmi.Merge(m, src)
}
func (m *JunosSmi) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmi) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmi.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmi proto.InternalMessageInfo

func (m *JunosSmi) GetSystem() *JunosSmiSystemType {
	if m != nil {
		return m.System
	}
	return nil
}

type JunosSmiSystemType struct {
	SubscriberManagement *JunosSmiSystemTypeSubscriberManagementType `protobuf:"bytes,151,opt,name=subscriber_management,json=subscriberManagement" json:"subscriber_management,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *JunosSmiSystemType) Reset()         { *m = JunosSmiSystemType{} }
func (m *JunosSmiSystemType) String() string { return proto.CompactTextString(m) }
func (*JunosSmiSystemType) ProtoMessage()    {}
func (*JunosSmiSystemType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0}
}
func (m *JunosSmiSystemType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemType.Merge(m, src)
}
func (m *JunosSmiSystemType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemType proto.InternalMessageInfo

func (m *JunosSmiSystemType) GetSubscriberManagement() *JunosSmiSystemTypeSubscriberManagementType {
	if m != nil {
		return m.SubscriberManagement
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementType struct {
	Infra                *JunosSmiSystemTypeSubscriberManagementTypeInfraType     `protobuf:"bytes,151,opt,name=infra" json:"infra,omitempty"`
	Chassis              []*JunosSmiSystemTypeSubscriberManagementTypeChassisList `protobuf:"bytes,152,rep,name=chassis" json:"chassis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementType) GetInfra() *JunosSmiSystemTypeSubscriberManagementTypeInfraType {
	if m != nil {
		return m.Infra
	}
	return nil
}

func (m *JunosSmiSystemTypeSubscriberManagementType) GetChassis() []*JunosSmiSystemTypeSubscriberManagementTypeChassisList {
	if m != nil {
		return m.Chassis
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraType struct {
	Sdb                  *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType             `protobuf:"bytes,151,opt,name=sdb" json:"sdb,omitempty"`
	ResourceMonitor      *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType `protobuf:"bytes,152,opt,name=resource_monitor,json=resourceMonitor" json:"resource_monitor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                  `json:"-"`
	XXX_sizecache        int32                                                                   `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) GetSdb() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType {
	if m != nil {
		return m.Sdb
	}
	return nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) GetResourceMonitor() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType {
	if m != nil {
		return m.ResourceMonitor
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType struct {
	Statistics           *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) GetStatistics() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType {
	if m != nil {
		return m.Statistics
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType struct {
	State                *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType      `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	ClientType           *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType `protobuf:"bytes,152,opt,name=client_type,json=clientType" json:"client_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                   `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) GetState() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) GetClientType() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType {
	if m != nil {
		return m.ClientType
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType struct {
	InitStateCount        *uint32  `protobuf:"varint,51,opt,name=init_state_count,json=initStateCount" json:"init_state_count,omitempty"`
	ConfiguredStateCount  *uint32  `protobuf:"varint,52,opt,name=configured_state_count,json=configuredStateCount" json:"configured_state_count,omitempty"`
	ActiveStateCount      *uint32  `protobuf:"varint,53,opt,name=active_state_count,json=activeStateCount" json:"active_state_count,omitempty"`
	TerminatingStateCount *uint32  `protobuf:"varint,54,opt,name=terminating_state_count,json=terminatingStateCount" json:"terminating_state_count,omitempty"`
	TerminatedStateCount  *uint32  `protobuf:"varint,55,opt,name=terminated_state_count,json=terminatedStateCount" json:"terminated_state_count,omitempty"`
	TotalStateCount       *uint32  `protobuf:"varint,56,opt,name=total_state_count,json=totalStateCount" json:"total_state_count,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetInitStateCount() uint32 {
	if m != nil && m.InitStateCount != nil {
		return *m.InitStateCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetConfiguredStateCount() uint32 {
	if m != nil && m.ConfiguredStateCount != nil {
		return *m.ConfiguredStateCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetActiveStateCount() uint32 {
	if m != nil && m.ActiveStateCount != nil {
		return *m.ActiveStateCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetTerminatingStateCount() uint32 {
	if m != nil && m.TerminatingStateCount != nil {
		return *m.TerminatingStateCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetTerminatedStateCount() uint32 {
	if m != nil && m.TerminatedStateCount != nil {
		return *m.TerminatedStateCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) GetTotalStateCount() uint32 {
	if m != nil && m.TotalStateCount != nil {
		return *m.TotalStateCount
	}
	return 0
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType struct {
	DhcpClientCount      *uint32  `protobuf:"varint,61,opt,name=dhcp_client_count,json=dhcpClientCount" json:"dhcp_client_count,omitempty"`
	VlanClientCount      *uint32  `protobuf:"varint,62,opt,name=vlan_client_count,json=vlanClientCount" json:"vlan_client_count,omitempty"`
	PppClientCount       *uint32  `protobuf:"varint,63,opt,name=ppp_client_count,json=pppClientCount" json:"ppp_client_count,omitempty"`
	PppoeClientCount     *uint32  `protobuf:"varint,64,opt,name=pppoe_client_count,json=pppoeClientCount" json:"pppoe_client_count,omitempty"`
	L2TpClientCount      *uint32  `protobuf:"varint,65,opt,name=l2tp_client_count,json=l2tpClientCount" json:"l2tp_client_count,omitempty"`
	StaticClientCount    *uint32  `protobuf:"varint,66,opt,name=static_client_count,json=staticClientCount" json:"static_client_count,omitempty"`
	VplsPwClientCount    *uint32  `protobuf:"varint,67,opt,name=vpls_pw_client_count,json=vplsPwClientCount" json:"vpls_pw_client_count,omitempty"`
	MlpppClientCount     *uint32  `protobuf:"varint,68,opt,name=mlppp_client_count,json=mlpppClientCount" json:"mlppp_client_count,omitempty"`
	EssmClientCount      *uint32  `protobuf:"varint,69,opt,name=essm_client_count,json=essmClientCount" json:"essm_client_count,omitempty"`
	TotalClientCount     *uint32  `protobuf:"varint,70,opt,name=total_client_count,json=totalClientCount" json:"total_client_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 0, 0, 1}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetDhcpClientCount() uint32 {
	if m != nil && m.DhcpClientCount != nil {
		return *m.DhcpClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetVlanClientCount() uint32 {
	if m != nil && m.VlanClientCount != nil {
		return *m.VlanClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetPppClientCount() uint32 {
	if m != nil && m.PppClientCount != nil {
		return *m.PppClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetPppoeClientCount() uint32 {
	if m != nil && m.PppoeClientCount != nil {
		return *m.PppoeClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetL2TpClientCount() uint32 {
	if m != nil && m.L2TpClientCount != nil {
		return *m.L2TpClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetStaticClientCount() uint32 {
	if m != nil && m.StaticClientCount != nil {
		return *m.StaticClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetVplsPwClientCount() uint32 {
	if m != nil && m.VplsPwClientCount != nil {
		return *m.VplsPwClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetMlpppClientCount() uint32 {
	if m != nil && m.MlpppClientCount != nil {
		return *m.MlpppClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetEssmClientCount() uint32 {
	if m != nil && m.EssmClientCount != nil {
		return *m.EssmClientCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) GetTotalClientCount() uint32 {
	if m != nil && m.TotalClientCount != nil {
		return *m.TotalClientCount
	}
	return 0
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType struct {
	Chassis              *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType `protobuf:"bytes,151,opt,name=chassis" json:"chassis,omitempty"`
	Fpcs                 *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType    `protobuf:"bytes,152,opt,name=fpcs" json:"fpcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                             `json:"-"`
	XXX_sizecache        int32                                                                              `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) GetChassis() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType {
	if m != nil {
		return m.Chassis
	}
	return nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) GetFpcs() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType {
	if m != nil {
		return m.Fpcs
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType struct {
	ConfiguredSubscriberLimit *uint32  `protobuf:"varint,131,opt,name=configured_subscriber_limit,json=configuredSubscriberLimit" json:"configured_subscriber_limit,omitempty"`
	CurrentSubscriberCount    *uint32  `protobuf:"varint,132,opt,name=current_subscriber_count,json=currentSubscriberCount" json:"current_subscriber_count,omitempty"`
	SubscriberLimitExceeded   *uint32  `protobuf:"varint,201,opt,name=subscriber_limit_exceeded,json=subscriberLimitExceeded" json:"subscriber_limit_exceeded,omitempty"`
	SubscriberLimitNominal    *uint32  `protobuf:"varint,202,opt,name=subscriber_limit_nominal,json=subscriberLimitNominal" json:"subscriber_limit_nominal,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) GetConfiguredSubscriberLimit() uint32 {
	if m != nil && m.ConfiguredSubscriberLimit != nil {
		return *m.ConfiguredSubscriberLimit
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) GetCurrentSubscriberCount() uint32 {
	if m != nil && m.CurrentSubscriberCount != nil {
		return *m.CurrentSubscriberCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) GetSubscriberLimitExceeded() uint32 {
	if m != nil && m.SubscriberLimitExceeded != nil {
		return *m.SubscriberLimitExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) GetSubscriberLimitNominal() uint32 {
	if m != nil && m.SubscriberLimitNominal != nil {
		return *m.SubscriberLimitNominal
	}
	return 0
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType struct {
	Fpc                  []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList `protobuf:"bytes,151,rep,name=fpc" json:"fpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) GetFpc() []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList {
	if m != nil {
		return m.Fpc
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList struct {
	Slot                 *uint32                                                                                              `protobuf:"varint,51,opt,name=slot" json:"slot,omitempty"`
	Statistics           *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType `protobuf:"bytes,151,opt,name=statistics" json:"statistics,omitempty"`
	Pics                 *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType       `protobuf:"bytes,152,opt,name=pics" json:"pics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                             `json:"-"`
	XXX_unrecognized     []byte                                                                                               `json:"-"`
	XXX_sizecache        int32                                                                                                `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetSlot() uint32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetStatistics() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) GetPics() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType {
	if m != nil {
		return m.Pics
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType struct {
	HeapMemoryUsed              *uint32                                                                                                      `protobuf:"varint,81,opt,name=heap_memory_used,json=heapMemoryUsed" json:"heap_memory_used,omitempty"`
	ClientSessionDeniedCount    *uint32                                                                                                      `protobuf:"varint,82,opt,name=client_session_denied_count,json=clientSessionDeniedCount" json:"client_session_denied_count,omitempty"`
	ServiceSessionDeniedCount   *uint32                                                                                                      `protobuf:"varint,83,opt,name=service_session_denied_count,json=serviceSessionDeniedCount" json:"service_session_denied_count,omitempty"`
	RttThrottledSubCountClient  *uint32                                                                                                      `protobuf:"varint,84,opt,name=rtt_throttled_sub_count_client,json=rttThrottledSubCountClient" json:"rtt_throttled_sub_count_client,omitempty"`
	RttThrottledSubCountService *uint32                                                                                                      `protobuf:"varint,85,opt,name=rtt_throttled_sub_count_service,json=rttThrottledSubCountService" json:"rtt_throttled_sub_count_service,omitempty"`
	ConfiguredSubscriberLimit   *uint32                                                                                                      `protobuf:"varint,131,opt,name=configured_subscriber_limit,json=configuredSubscriberLimit" json:"configured_subscriber_limit,omitempty"`
	CurrentSubscriberCount      *uint32                                                                                                      `protobuf:"varint,132,opt,name=current_subscriber_count,json=currentSubscriberCount" json:"current_subscriber_count,omitempty"`
	MemHeapExceeded             *uint32                                                                                                      `protobuf:"varint,91,opt,name=mem_heap_exceeded,json=memHeapExceeded" json:"mem_heap_exceeded,omitempty"`
	MemHeapNominal              *uint32                                                                                                      `protobuf:"varint,92,opt,name=mem_heap_nominal,json=memHeapNominal" json:"mem_heap_nominal,omitempty"`
	SubscriberLimitExceeded     *uint32                                                                                                      `protobuf:"varint,201,opt,name=subscriber_limit_exceeded,json=subscriberLimitExceeded" json:"subscriber_limit_exceeded,omitempty"`
	SubscriberLimitNominal      *uint32                                                                                                      `protobuf:"varint,202,opt,name=subscriber_limit_nominal,json=subscriberLimitNominal" json:"subscriber_limit_nominal,omitempty"`
	Pfes                        *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType `protobuf:"bytes,151,opt,name=pfes" json:"pfes,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                                                                                     `json:"-"`
	XXX_unrecognized            []byte                                                                                                       `json:"-"`
	XXX_sizecache               int32                                                                                                        `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetHeapMemoryUsed() uint32 {
	if m != nil && m.HeapMemoryUsed != nil {
		return *m.HeapMemoryUsed
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetClientSessionDeniedCount() uint32 {
	if m != nil && m.ClientSessionDeniedCount != nil {
		return *m.ClientSessionDeniedCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetServiceSessionDeniedCount() uint32 {
	if m != nil && m.ServiceSessionDeniedCount != nil {
		return *m.ServiceSessionDeniedCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetRttThrottledSubCountClient() uint32 {
	if m != nil && m.RttThrottledSubCountClient != nil {
		return *m.RttThrottledSubCountClient
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetRttThrottledSubCountService() uint32 {
	if m != nil && m.RttThrottledSubCountService != nil {
		return *m.RttThrottledSubCountService
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetConfiguredSubscriberLimit() uint32 {
	if m != nil && m.ConfiguredSubscriberLimit != nil {
		return *m.ConfiguredSubscriberLimit
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetCurrentSubscriberCount() uint32 {
	if m != nil && m.CurrentSubscriberCount != nil {
		return *m.CurrentSubscriberCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetMemHeapExceeded() uint32 {
	if m != nil && m.MemHeapExceeded != nil {
		return *m.MemHeapExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetMemHeapNominal() uint32 {
	if m != nil && m.MemHeapNominal != nil {
		return *m.MemHeapNominal
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetSubscriberLimitExceeded() uint32 {
	if m != nil && m.SubscriberLimitExceeded != nil {
		return *m.SubscriberLimitExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetSubscriberLimitNominal() uint32 {
	if m != nil && m.SubscriberLimitNominal != nil {
		return *m.SubscriberLimitNominal
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) GetPfes() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType {
	if m != nil {
		return m.Pfes
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType struct {
	Pfe                  []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList `protobuf:"bytes,151,rep,name=pfe" json:"pfe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                                                                `json:"-"`
	XXX_sizecache        int32                                                                                                                 `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) GetPfe() []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList {
	if m != nil {
		return m.Pfe
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList struct {
	PfeNo                *uint32                                                                                                                            `protobuf:"varint,51,opt,name=pfe_no,json=pfeNo" json:"pfe_no,omitempty"`
	FilterMemoryUsed     *uint32                                                                                                                            `protobuf:"varint,101,opt,name=filter_memory_used,json=filterMemoryUsed" json:"filter_memory_used,omitempty"`
	IflMemoryUsed        *uint32                                                                                                                            `protobuf:"varint,102,opt,name=ifl_memory_used,json=iflMemoryUsed" json:"ifl_memory_used,omitempty"`
	ExpansionMemoryUsed  *uint32                                                                                                                            `protobuf:"varint,103,opt,name=expansion_memory_used,json=expansionMemoryUsed" json:"expansion_memory_used,omitempty"`
	NhMemoryFree         *uint32                                                                                                                            `protobuf:"varint,104,opt,name=nh_memory_free,json=nhMemoryFree" json:"nh_memory_free,omitempty"`
	FwMemoryFree         *uint32                                                                                                                            `protobuf:"varint,105,opt,name=fw_memory_free,json=fwMemoryFree" json:"fw_memory_free,omitempty"`
	MemIflExceeded       *uint32                                                                                                                            `protobuf:"varint,111,opt,name=mem_ifl_exceeded,json=memIflExceeded" json:"mem_ifl_exceeded,omitempty"`
	MemIflNominal        *uint32                                                                                                                            `protobuf:"varint,112,opt,name=mem_ifl_nominal,json=memIflNominal" json:"mem_ifl_nominal,omitempty"`
	MemExpansionExceeded *uint32                                                                                                                            `protobuf:"varint,113,opt,name=mem_expansion_exceeded,json=memExpansionExceeded" json:"mem_expansion_exceeded,omitempty"`
	MemExpansionNominal  *uint32                                                                                                                            `protobuf:"varint,114,opt,name=mem_expansion_nominal,json=memExpansionNominal" json:"mem_expansion_nominal,omitempty"`
	SchedBlocks          *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType `protobuf:"bytes,151,opt,name=sched_blocks,json=schedBlocks" json:"sched_blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                              `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetPfeNo() uint32 {
	if m != nil && m.PfeNo != nil {
		return *m.PfeNo
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetFilterMemoryUsed() uint32 {
	if m != nil && m.FilterMemoryUsed != nil {
		return *m.FilterMemoryUsed
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetIflMemoryUsed() uint32 {
	if m != nil && m.IflMemoryUsed != nil {
		return *m.IflMemoryUsed
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetExpansionMemoryUsed() uint32 {
	if m != nil && m.ExpansionMemoryUsed != nil {
		return *m.ExpansionMemoryUsed
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetNhMemoryFree() uint32 {
	if m != nil && m.NhMemoryFree != nil {
		return *m.NhMemoryFree
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetFwMemoryFree() uint32 {
	if m != nil && m.FwMemoryFree != nil {
		return *m.FwMemoryFree
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetMemIflExceeded() uint32 {
	if m != nil && m.MemIflExceeded != nil {
		return *m.MemIflExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetMemIflNominal() uint32 {
	if m != nil && m.MemIflNominal != nil {
		return *m.MemIflNominal
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetMemExpansionExceeded() uint32 {
	if m != nil && m.MemExpansionExceeded != nil {
		return *m.MemExpansionExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetMemExpansionNominal() uint32 {
	if m != nil && m.MemExpansionNominal != nil {
		return *m.MemExpansionNominal
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) GetSchedBlocks() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType {
	if m != nil {
		return m.SchedBlocks
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType struct {
	SchedBlock           []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList `protobuf:"bytes,151,rep,name=sched_block,json=schedBlock" json:"sched_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                           `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                             `json:"-"`
	XXX_sizecache        int32                                                                                                                                              `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) GetSchedBlock() []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList {
	if m != nil {
		return m.SchedBlock
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList struct {
	SblockNo               *uint32  `protobuf:"varint,51,opt,name=sblock_no,json=sblockNo" json:"sblock_no,omitempty"`
	QueuesMax              *uint32  `protobuf:"varint,121,opt,name=queues_max,json=queuesMax" json:"queues_max,omitempty"`
	QueuesAllocated        *uint32  `protobuf:"varint,122,opt,name=queues_allocated,json=queuesAllocated" json:"queues_allocated,omitempty"`
	CosUtilizationExceeded *uint32  `protobuf:"varint,141,opt,name=cos_utilization_exceeded,json=cosUtilizationExceeded" json:"cos_utilization_exceeded,omitempty"`
	CosUtilizationNominal  *uint32  `protobuf:"varint,142,opt,name=cos_utilization_nominal,json=cosUtilizationNominal" json:"cos_utilization_nominal,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) GetSblockNo() uint32 {
	if m != nil && m.SblockNo != nil {
		return *m.SblockNo
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) GetQueuesMax() uint32 {
	if m != nil && m.QueuesMax != nil {
		return *m.QueuesMax
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) GetQueuesAllocated() uint32 {
	if m != nil && m.QueuesAllocated != nil {
		return *m.QueuesAllocated
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) GetCosUtilizationExceeded() uint32 {
	if m != nil && m.CosUtilizationExceeded != nil {
		return *m.CosUtilizationExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) GetCosUtilizationNominal() uint32 {
	if m != nil && m.CosUtilizationNominal != nil {
		return *m.CosUtilizationNominal
	}
	return 0
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType struct {
	Pic                  []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList `protobuf:"bytes,151,rep,name=pic" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                `json:"-"`
	XXX_unrecognized     []byte                                                                                                  `json:"-"`
	XXX_sizecache        int32                                                                                                   `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 1}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) GetPic() []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList {
	if m != nil {
		return m.Pic
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList struct {
	PicNo                     *uint32                                                                                                        `protobuf:"varint,51,opt,name=pic_no,json=picNo" json:"pic_no,omitempty"`
	ConfiguredSubscriberLimit *uint32                                                                                                        `protobuf:"varint,131,opt,name=configured_subscriber_limit,json=configuredSubscriberLimit" json:"configured_subscriber_limit,omitempty"`
	CurrentSubscriberCount    *uint32                                                                                                        `protobuf:"varint,132,opt,name=current_subscriber_count,json=currentSubscriberCount" json:"current_subscriber_count,omitempty"`
	SubscriberLimitExceeded   *uint32                                                                                                        `protobuf:"varint,201,opt,name=subscriber_limit_exceeded,json=subscriberLimitExceeded" json:"subscriber_limit_exceeded,omitempty"`
	SubscriberLimitNominal    *uint32                                                                                                        `protobuf:"varint,202,opt,name=subscriber_limit_nominal,json=subscriberLimitNominal" json:"subscriber_limit_nominal,omitempty"`
	Ports                     *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType `protobuf:"bytes,151,opt,name=ports" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                                                                                       `json:"-"`
	XXX_unrecognized          []byte                                                                                                         `json:"-"`
	XXX_sizecache             int32                                                                                                          `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 1, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetPicNo() uint32 {
	if m != nil && m.PicNo != nil {
		return *m.PicNo
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetConfiguredSubscriberLimit() uint32 {
	if m != nil && m.ConfiguredSubscriberLimit != nil {
		return *m.ConfiguredSubscriberLimit
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetCurrentSubscriberCount() uint32 {
	if m != nil && m.CurrentSubscriberCount != nil {
		return *m.CurrentSubscriberCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetSubscriberLimitExceeded() uint32 {
	if m != nil && m.SubscriberLimitExceeded != nil {
		return *m.SubscriberLimitExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetSubscriberLimitNominal() uint32 {
	if m != nil && m.SubscriberLimitNominal != nil {
		return *m.SubscriberLimitNominal
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) GetPorts() *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType {
	if m != nil {
		return m.Ports
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType struct {
	Port                 []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList `protobuf:"bytes,151,rep,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 1, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) GetPort() []*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList {
	if m != nil {
		return m.Port
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList struct {
	PortNo                    *uint32  `protobuf:"varint,51,opt,name=port_no,json=portNo" json:"port_no,omitempty"`
	ConfiguredSubscriberLimit *uint32  `protobuf:"varint,131,opt,name=configured_subscriber_limit,json=configuredSubscriberLimit" json:"configured_subscriber_limit,omitempty"`
	CurrentSubscriberCount    *uint32  `protobuf:"varint,132,opt,name=current_subscriber_count,json=currentSubscriberCount" json:"current_subscriber_count,omitempty"`
	SubscriberLimitExceeded   *uint32  `protobuf:"varint,201,opt,name=subscriber_limit_exceeded,json=subscriberLimitExceeded" json:"subscriber_limit_exceeded,omitempty"`
	SubscriberLimitNominal    *uint32  `protobuf:"varint,202,opt,name=subscriber_limit_nominal,json=subscriberLimitNominal" json:"subscriber_limit_nominal,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) GetPortNo() uint32 {
	if m != nil && m.PortNo != nil {
		return *m.PortNo
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) GetConfiguredSubscriberLimit() uint32 {
	if m != nil && m.ConfiguredSubscriberLimit != nil {
		return *m.ConfiguredSubscriberLimit
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) GetCurrentSubscriberCount() uint32 {
	if m != nil && m.CurrentSubscriberCount != nil {
		return *m.CurrentSubscriberCount
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) GetSubscriberLimitExceeded() uint32 {
	if m != nil && m.SubscriberLimitExceeded != nil {
		return *m.SubscriberLimitExceeded
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) GetSubscriberLimitNominal() uint32 {
	if m != nil && m.SubscriberLimitNominal != nil {
		return *m.SubscriberLimitNominal
	}
	return 0
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisList struct {
	MemberId             *uint32                                                                  `protobuf:"varint,51,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
	Role                 *string                                                                  `protobuf:"bytes,52,opt,name=role" json:"role,omitempty"`
	RoutingEngines       *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType `protobuf:"bytes,151,opt,name=routing_engines,json=routingEngines" json:"routing_engines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                   `json:"-"`
	XXX_sizecache        int32                                                                    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisList) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) GetMemberId() uint32 {
	if m != nil && m.MemberId != nil {
		return *m.MemberId
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) GetRole() string {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return ""
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) GetRoutingEngines() *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType {
	if m != nil {
		return m.RoutingEngines
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType struct {
	RoutingEngine        []*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList `protobuf:"bytes,151,rep,name=routing_engine,json=routingEngine" json:"routing_engine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                    `json:"-"`
	XXX_unrecognized     []byte                                                                                      `json:"-"`
	XXX_sizecache        int32                                                                                       `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) ProtoMessage() {}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) GetRoutingEngine() []*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList {
	if m != nil {
		return m.RoutingEngine
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList struct {
	ReIndex              *uint32                                                                                                    `protobuf:"varint,51,opt,name=re_index,json=reIndex" json:"re_index,omitempty"`
	Role                 *string                                                                                                    `protobuf:"bytes,52,opt,name=role" json:"role,omitempty"`
	DbSynced             *bool                                                                                                      `protobuf:"varint,53,opt,name=db_synced,json=dbSynced" json:"db_synced,omitempty"`
	ProcessStatus        *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType `protobuf:"bytes,151,opt,name=process_status,json=processStatus" json:"process_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                   `json:"-"`
	XXX_unrecognized     []byte                                                                                                     `json:"-"`
	XXX_sizecache        int32                                                                                                      `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) GetReIndex() uint32 {
	if m != nil && m.ReIndex != nil {
		return *m.ReIndex
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) GetRole() string {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return ""
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) GetDbSynced() bool {
	if m != nil && m.DbSynced != nil {
		return *m.DbSynced
	}
	return false
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) GetProcessStatus() *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType {
	if m != nil {
		return m.ProcessStatus
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType struct {
	SubscriberManagementProcesses *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType `protobuf:"bytes,151,opt,name=subscriber_management_processes,json=subscriberManagementProcesses" json:"subscriber_management_processes,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                                                                                                                                    `json:"-"`
	XXX_unrecognized              []byte                                                                                                                                      `json:"-"`
	XXX_sizecache                 int32                                                                                                                                       `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) GetSubscriberManagementProcesses() *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType {
	if m != nil {
		return m.SubscriberManagementProcesses
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType struct {
	SubscriberManagementProcess []*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList `protobuf:"bytes,151,rep,name=subscriber_management_process,json=subscriberManagementProcess" json:"subscriber_management_process,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                                                                                                                                                     `json:"-"`
	XXX_unrecognized            []byte                                                                                                                                                                       `json:"-"`
	XXX_sizecache               int32                                                                                                                                                                        `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) GetSubscriberManagementProcess() []*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList {
	if m != nil {
		return m.SubscriberManagementProcess
	}
	return nil
}

type JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList struct {
	ProcessName          *string  `protobuf:"bytes,51,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	Pid                  *uint64  `protobuf:"varint,52,opt,name=pid" json:"pid,omitempty"`
	Runtime              *uint64  `protobuf:"varint,53,opt,name=runtime" json:"runtime,omitempty"`
	CpuUtilization       *float64 `protobuf:"fixed64,54,opt,name=cpu_utilization,json=cpuUtilization" json:"cpu_utilization,omitempty"`
	MemoryUtilization    *float64 `protobuf:"fixed64,55,opt,name=memory_utilization,json=memoryUtilization" json:"memory_utilization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) Reset() {
	*m = JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList{}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) String() string {
	return proto.CompactTextString(m)
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) ProtoMessage() {
}
func (*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) Descriptor() ([]byte, []int) {
	return fileDescriptor_352359fcef49673a, []int{0, 0, 0, 1, 0, 0, 0, 0, 0}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList.Merge(m, src)
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) XXX_Size() int {
	return m.Size()
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) XXX_DiscardUnknown() {
	xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList.DiscardUnknown(m)
}

var xxx_messageInfo_JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList proto.InternalMessageInfo

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) GetProcessName() string {
	if m != nil && m.ProcessName != nil {
		return *m.ProcessName
	}
	return ""
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) GetPid() uint64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) GetRuntime() uint64 {
	if m != nil && m.Runtime != nil {
		return *m.Runtime
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) GetCpuUtilization() float64 {
	if m != nil && m.CpuUtilization != nil {
		return *m.CpuUtilization
	}
	return 0
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) GetMemoryUtilization() float64 {
	if m != nil && m.MemoryUtilization != nil {
		return *m.MemoryUtilization
	}
	return 0
}

var E_JnprJunosSmiExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*JunosSmi)(nil),
	Field:         70,
	Name:          "jnpr_junos_smi_ext",
	Tag:           "bytes,70,opt,name=jnpr_junos_smi_ext",
	Filename:      "smid_oc.proto",
}

func init() {
	proto.RegisterType((*JunosSmi)(nil), "junos_smi")
	proto.RegisterType((*JunosSmiSystemType)(nil), "junos_smi.system_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementType)(nil), "junos_smi.system_type.subscriber_management_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.sdb_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.sdb_type.statistics_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.sdb_type.statistics_type.state_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.sdb_type.statistics_type.client_type_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.chassis_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type.pfes_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type.pfes_type.pfe_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type.pfes_type.pfe_list.sched_blocks_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.statistics_type.pfes_type.pfe_list.sched_blocks_type.sched_block_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.pics_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.pics_type.pic_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.pics_type.pic_list.ports_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList)(nil), "junos_smi.system_type.subscriber_management_type.infra_type.resource_monitor_type.fpcs_type.fpc_list.pics_type.pic_list.ports_type.port_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisList)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list.routing_engines_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list.routing_engines_type.routing_engine_list")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list.routing_engines_type.routing_engine_list.process_status_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list.routing_engines_type.routing_engine_list.process_status_type.subscriber_management_processes_type")
	proto.RegisterType((*JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList)(nil), "junos_smi.system_type.subscriber_management_type.chassis_list.routing_engines_type.routing_engine_list.process_status_type.subscriber_management_processes_type.subscriber_management_process_list")
	proto.RegisterExtension(E_JnprJunosSmiExt)
}

func init() { proto.RegisterFile("smid_oc.proto", fileDescriptor_352359fcef49673a) }

var fileDescriptor_352359fcef49673a = []byte{
	// 1932 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x59, 0x5b, 0x8f, 0x1c, 0x47,
	0x15, 0x56, 0xef, 0xc5, 0x3b, 0x73, 0xd6, 0xbb, 0x3b, 0x5b, 0xeb, 0xb5, 0xc7, 0xbd, 0xf6, 0x66,
	0x65, 0x45, 0x61, 0x09, 0xf1, 0xac, 0x58, 0x4c, 0x1c, 0x03, 0x89, 0x93, 0xb5, 0x37, 0xc2, 0x11,
	0x5e, 0x99, 0x19, 0x5b, 0xe2, 0x12, 0xa9, 0xd3, 0xd3, 0x7d, 0x7a, 0xa6, 0xec, 0xbe, 0xb9, 0xab,
	0x7a, 0x2f, 0x46, 0x80, 0x94, 0x44, 0x4a, 0x10, 0x84, 0x8b, 0x84, 0x00, 0x71, 0x11, 0x48, 0x48,
	0x08, 0x29, 0x42, 0xf2, 0x03, 0x12, 0x6f, 0xf0, 0xc0, 0x4b, 0xe0, 0x01, 0x21, 0x04, 0x42, 0x82,
	0x17, 0xe4, 0x47, 0x5e, 0x78, 0xe1, 0x07, 0xa0, 0xaa, 0xea, 0xea, 0x9b, 0x27, 0x0e, 0x91, 0xb3,
	0x5e, 0x4b, 0x7e, 0xeb, 0xfe, 0xce, 0x77, 0x2e, 0x55, 0x75, 0xce, 0xe9, 0x33, 0x35, 0x30, 0xc3,
	0x02, 0xea, 0x5a, 0x91, 0xd3, 0x89, 0x93, 0x88, 0x47, 0xe6, 0x02, 0x47, 0x1f, 0x03, 0xe4, 0xc9,
	0x9e, 0xc5, 0xa3, 0x58, 0x81, 0xa7, 0xfe, 0x73, 0x0e, 0x9a, 0xd7, 0xd3, 0x30, 0x62, 0x16, 0x0b,
	0x28, 0x59, 0x83, 0x43, 0x6c, 0x8f, 0x71, 0x0c, 0xda, 0xdf, 0x37, 0x56, 0x8c, 0xd5, 0xe9, 0xf5,
	0xa3, 0x9d, 0x5c, 0xd8, 0x51, 0x12, 0x8b, 0xef, 0xc5, 0xd8, 0xcd, 0x68, 0xe6, 0xed, 0x73, 0x30,
	0x5d, 0xc2, 0xc9, 0x00, 0x16, 0x59, 0xda, 0x67, 0x4e, 0x42, 0xfb, 0x98, 0x58, 0x81, 0x1d, 0xda,
	0x03, 0x0c, 0x30, 0xe4, 0xda, 0xde, 0x47, 0x47, 0xdb, 0xeb, 0x8c, 0x54, 0x52, 0xae, 0x8e, 0x14,
	0xb2, 0xcb, 0xb9, 0xc8, 0xfc, 0xcd, 0x33, 0x60, 0xbe, 0xbb, 0x12, 0xe9, 0xc1, 0x24, 0x0d, 0xbd,
	0xc4, 0xd6, 0x7e, 0x3f, 0xf5, 0xbe, 0xfd, 0x76, 0xa4, 0xbe, 0x0a, 0x41, 0xd9, 0x22, 0x9f, 0x87,
	0x29, 0x67, 0x68, 0x33, 0x46, 0x59, 0xfb, 0x07, 0xc6, 0xca, 0xf8, 0xea, 0xf4, 0xfa, 0x73, 0xef,
	0xdf, 0x6c, 0x66, 0xc1, 0xf2, 0x29, 0xe3, 0x5d, 0x6d, 0xcf, 0xfc, 0xdb, 0x47, 0x00, 0x0a, 0x87,
	0xe4, 0x73, 0x30, 0xce, 0xdc, 0xbe, 0x0e, 0x7e, 0xf3, 0x7e, 0x82, 0xef, 0x30, 0xb7, 0xaf, 0x56,
	0x21, 0x4c, 0x92, 0xaf, 0x40, 0x2b, 0x41, 0x16, 0xa5, 0x89, 0x83, 0x56, 0x10, 0x85, 0x94, 0x47,
	0x89, 0x58, 0x8c, 0x70, 0xd3, 0xbd, 0x2f, 0x37, 0x75, 0xab, 0xca, 0xe7, 0x9c, 0x86, 0x2f, 0x2b,
	0xd4, 0x7c, 0xbb, 0x09, 0x0d, 0x1d, 0x11, 0xd9, 0x06, 0x60, 0xdc, 0xe6, 0x94, 0x71, 0xea, 0x30,
	0xbd, 0xda, 0x6b, 0x1f, 0xc8, 0x6a, 0x3b, 0x85, 0x61, 0x15, 0x49, 0xc9, 0x93, 0xf9, 0x8b, 0x06,
	0xcc, 0xd5, 0xe4, 0x64, 0x07, 0x26, 0x05, 0x84, 0x3a, 0x8c, 0x57, 0xf6, 0x25, 0x0c, 0xf9, 0x8e,
	0x59, 0x56, 0xc9, 0x67, 0xf2, 0xa6, 0x01, 0xd3, 0x8e, 0x4f, 0xb5, 0x15, 0x7d, 0x1a, 0xde, 0xfe,
	0xf8, 0x2f, 0x79, 0xca, 0xf6, 0x45, 0x21, 0x57, 0xf7, 0x62, 0x34, 0x7f, 0x3d, 0xa6, 0x0e, 0x44,
	0x89, 0xc8, 0x2a, 0xb4, 0x68, 0x48, 0xb9, 0xa5, 0x20, 0x27, 0x4a, 0x43, 0xde, 0xfe, 0xd8, 0x8a,
	0xb1, 0x3a, 0xd3, 0x9d, 0x15, 0x78, 0x4f, 0xc0, 0x17, 0x04, 0x4a, 0xce, 0xc0, 0x51, 0x27, 0x0a,
	0x3d, 0x3a, 0x48, 0x13, 0x74, 0x2b, 0xfc, 0x33, 0x92, 0x7f, 0xa4, 0x90, 0x96, 0xb4, 0x9e, 0x02,
	0x62, 0x3b, 0x9c, 0x6e, 0x63, 0x45, 0xe3, 0xe3, 0x52, 0xa3, 0xa5, 0x24, 0x25, 0xf6, 0xd3, 0x70,
	0x8c, 0x63, 0x12, 0xd0, 0xd0, 0xe6, 0x34, 0x1c, 0x54, 0x54, 0x9e, 0x96, 0x2a, 0x8b, 0x25, 0x71,
	0x35, 0x36, 0x2d, 0xa8, 0xc5, 0x76, 0x56, 0xc5, 0x56, 0x48, 0x4b, 0x5a, 0x4f, 0xc2, 0x3c, 0x8f,
	0xb8, 0xed, 0x57, 0x14, 0x9e, 0x91, 0x0a, 0x73, 0x52, 0x50, 0x70, 0xcd, 0xbf, 0x8f, 0x43, 0xab,
	0xbe, 0xaf, 0xc2, 0x80, 0x3b, 0x74, 0x62, 0x2b, 0x13, 0x28, 0x03, 0xcf, 0x2a, 0x03, 0x42, 0x70,
	0x41, 0xe2, 0xb9, 0xb3, 0x6d, 0xdf, 0x0e, 0xab, 0xdc, 0xe7, 0x14, 0x57, 0x08, 0xca, 0xdc, 0x55,
	0x68, 0xc5, 0x71, 0xcd, 0xec, 0x79, 0x75, 0x28, 0x71, 0x5c, 0xb1, 0xfa, 0x14, 0x90, 0x38, 0x8e,
	0x23, 0xac, 0x72, 0x9f, 0x57, 0xdb, 0x2b, 0x25, 0xb5, 0x18, 0xfc, 0x75, 0x5e, 0x33, 0xfc, 0x82,
	0x8a, 0x41, 0x08, 0xca, 0xdc, 0x0e, 0x2c, 0xc8, 0xbc, 0x72, 0xaa, 0xec, 0x0d, 0xc9, 0x9e, 0x57,
	0xa2, 0x32, 0x7f, 0x0d, 0x8e, 0x6c, 0xc7, 0x3e, 0xb3, 0xe2, 0x9d, 0xaa, 0xc2, 0x05, 0xa5, 0x20,
	0x64, 0x57, 0x76, 0x6a, 0xa1, 0x07, 0xfe, 0x5d, 0xcb, 0xbc, 0xa8, 0x42, 0x97, 0x92, 0x5a, 0xe8,
	0xc8, 0x58, 0x50, 0x25, 0x6f, 0xaa, 0xd0, 0x85, 0xa0, 0x66, 0x59, 0x9d, 0x6b, 0x85, 0xfc, 0xa2,
	0xb2, 0x2c, 0x25, 0x25, 0xb6, 0xf9, 0xdb, 0x15, 0x58, 0x1c, 0xd9, 0xd8, 0xc8, 0xad, 0xe2, 0x5b,
	0x90, 0x35, 0x0c, 0xeb, 0x83, 0x6f, 0x9f, 0xf9, 0xc7, 0x42, 0x56, 0xaa, 0x76, 0x48, 0x6e, 0xc2,
	0x84, 0x17, 0x3b, 0x4c, 0x77, 0x8a, 0x97, 0xf7, 0xc1, 0xb1, 0xb0, 0xaf, 0xbc, 0x4a, 0x57, 0xe6,
	0xab, 0x63, 0x70, 0xb8, 0x1c, 0x0c, 0x39, 0x0f, 0x4b, 0xe5, 0x8a, 0x2f, 0x5c, 0xf9, 0x34, 0xa0,
	0xbc, 0xfd, 0x9a, 0x21, 0x77, 0xf4, 0x78, 0xa9, 0xee, 0x73, 0xca, 0x67, 0x04, 0x83, 0x9c, 0x83,
	0xb6, 0x93, 0x26, 0x89, 0x08, 0xa9, 0xa4, 0xad, 0x8e, 0xe3, 0x75, 0xa5, 0x7d, 0x34, 0x23, 0x14,
	0xaa, 0xea, 0x0c, 0x3f, 0x09, 0xc7, 0xeb, 0x0e, 0x2d, 0xdc, 0x75, 0x10, 0x5d, 0x74, 0xdb, 0x7f,
	0x50, 0xba, 0xc7, 0x58, 0xd5, 0xdf, 0x66, 0x26, 0x17, 0x7e, 0xef, 0x52, 0x0e, 0x23, 0xd1, 0x00,
	0xfc, 0xf6, 0x1f, 0x33, 0xbf, 0x35, 0xdd, 0x2d, 0x25, 0x36, 0x6f, 0x9f, 0x80, 0x66, 0xbe, 0x31,
	0x64, 0x17, 0xc6, 0xbd, 0xd8, 0x11, 0xa7, 0x2f, 0x26, 0x01, 0xdc, 0xcf, 0x43, 0x10, 0x4f, 0x6a,
	0x60, 0x10, 0x2e, 0xcd, 0x5f, 0x2e, 0x41, 0x43, 0x23, 0xe4, 0x38, 0x4c, 0x30, 0x3f, 0xca, 0x1a,
	0xf3, 0xc6, 0xe4, 0xab, 0xcf, 0x8f, 0x35, 0x8c, 0xae, 0x84, 0xc8, 0xf7, 0x8c, 0x51, 0xdf, 0xd7,
	0xf4, 0x81, 0x44, 0x7a, 0xaf, 0xef, 0x2f, 0x79, 0xdd, 0x80, 0x89, 0x98, 0x16, 0x19, 0x1c, 0x3d,
	0x98, 0x90, 0xe2, 0x3c, 0x18, 0xe9, 0xdd, 0xbc, 0xdd, 0xba, 0x7b, 0x0c, 0x58, 0x85, 0xd6, 0x10,
	0xed, 0xd8, 0x0a, 0x30, 0x88, 0x92, 0x3d, 0x2b, 0x65, 0xe8, 0xb6, 0x3f, 0xab, 0xda, 0xab, 0xc0,
	0x2f, 0x4b, 0xf8, 0x1a, 0x43, 0x97, 0x3c, 0x0b, 0x4b, 0x59, 0x0f, 0x61, 0xc8, 0x18, 0x8d, 0x42,
	0xcb, 0xc5, 0x90, 0xa2, 0x9b, 0xe5, 0x70, 0x57, 0x2a, 0xb5, 0x15, 0xa5, 0xa7, 0x18, 0x17, 0x25,
	0x41, 0x25, 0xf1, 0x79, 0x38, 0xc1, 0x30, 0xd9, 0xa6, 0x0e, 0x8e, 0xd6, 0xef, 0xa9, 0x02, 0xca,
	0x38, 0x23, 0x0c, 0x6c, 0xc0, 0x72, 0xc2, 0xb9, 0xc5, 0x87, 0x49, 0xc4, 0xb9, 0xaf, 0x8a, 0x50,
	0xe9, 0x66, 0xbd, 0xad, 0x7d, 0x55, 0x9a, 0x30, 0x13, 0xce, 0xaf, 0x6a, 0x52, 0x2f, 0xed, 0x4b,
	0x6d, 0xd5, 0xe4, 0xc8, 0x45, 0x78, 0xec, 0xdd, 0x6c, 0x64, 0x8e, 0xdb, 0xd7, 0xa4, 0x91, 0xa5,
	0x51, 0x46, 0x7a, 0x8a, 0x72, 0xa0, 0xbd, 0xe0, 0x49, 0x98, 0x0f, 0x30, 0xb0, 0xe4, 0x99, 0xe5,
	0x3d, 0xe0, 0x8b, 0xaa, 0xf7, 0x07, 0x18, 0x7c, 0x1a, 0xed, 0x38, 0x2f, 0xfd, 0x55, 0x68, 0xe5,
	0x5c, 0x5d, 0xf2, 0x2f, 0xab, 0xb3, 0xcd, 0xa8, 0x59, 0xa5, 0x1f, 0x54, 0x87, 0x21, 0xdf, 0x15,
	0x85, 0xe1, 0x61, 0x5e, 0xab, 0x5f, 0x3d, 0x90, 0x5a, 0xed, 0x88, 0x10, 0x74, 0xa1, 0x78, 0xc8,
	0xcc, 0x37, 0x00, 0x9a, 0x39, 0x46, 0x7e, 0x6c, 0xc0, 0x78, 0xec, 0xa1, 0xee, 0x7c, 0x6f, 0x1a,
	0x07, 0x1c, 0xa4, 0x78, 0xca, 0xba, 0x63, 0xec, 0xa1, 0xf9, 0x8f, 0x06, 0x34, 0x34, 0x42, 0x4e,
	0xc0, 0x21, 0xf1, 0x1c, 0x46, 0xd5, 0xfe, 0x38, 0x19, 0x7b, 0xb8, 0x15, 0x89, 0x61, 0xc0, 0xa3,
	0x3e, 0x17, 0x01, 0x96, 0xca, 0x1d, 0xd5, 0x30, 0xa0, 0x24, 0xa5, 0x82, 0x7f, 0x02, 0xe6, 0xa8,
	0xe7, 0x57, 0xa8, 0x9e, 0xa4, 0xce, 0x50, 0xcf, 0x2f, 0xf1, 0xd6, 0x61, 0x11, 0x77, 0x63, 0x3b,
	0x94, 0x35, 0x5d, 0x66, 0x0f, 0x24, 0x7b, 0x21, 0x17, 0x96, 0x74, 0x1e, 0x87, 0xd9, 0x70, 0xa8,
	0xc9, 0x5e, 0x82, 0xd8, 0x1e, 0x4a, 0xf2, 0xe1, 0x70, 0xa8, 0x58, 0x2f, 0x26, 0x88, 0x82, 0xe5,
	0xed, 0x54, 0x58, 0x54, 0xb1, 0xbc, 0x9d, 0x12, 0x2b, 0x4b, 0x73, 0x11, 0x6b, 0x9e, 0xb3, 0x51,
	0x9e, 0xe6, 0x97, 0x3c, 0x3f, 0xcf, 0xd4, 0x27, 0x60, 0x4e, 0x33, 0x75, 0x82, 0xc6, 0x6a, 0x45,
	0x8a, 0xa8, 0xd3, 0xf2, 0x0c, 0x1c, 0x15, 0xbc, 0x62, 0x55, 0xb9, 0xdd, 0x9b, 0x6a, 0x84, 0x0e,
	0x30, 0xd8, 0xd4, 0xc2, 0xdc, 0xfa, 0x3a, 0x2c, 0x56, 0xb5, 0xb4, 0x8f, 0x44, 0xed, 0x43, 0x59,
	0x49, 0x7b, 0xfa, 0x9d, 0x01, 0x87, 0x99, 0x33, 0x44, 0xd7, 0xea, 0xfb, 0x91, 0x73, 0x23, 0x2f,
	0x84, 0x1f, 0x3e, 0x34, 0x49, 0xd6, 0x29, 0x87, 0xa7, 0x8a, 0x64, 0x5a, 0x42, 0x1b, 0x12, 0x31,
	0xff, 0x39, 0x0e, 0xf3, 0x77, 0x51, 0xc8, 0x9f, 0x0c, 0x98, 0x2e, 0xa1, 0xba, 0x76, 0xde, 0x7e,
	0x88, 0x97, 0x55, 0x46, 0x54, 0x79, 0x41, 0xb1, 0x4e, 0xf3, 0xbf, 0x06, 0xb4, 0xea, 0x04, 0x72,
	0x0a, 0x9a, 0x4c, 0xbd, 0xd6, 0x0b, 0xae, 0xa1, 0xf0, 0xad, 0x88, 0x9c, 0x04, 0xb8, 0x99, 0x62,
	0x8a, 0xcc, 0x0a, 0xec, 0xdd, 0xf6, 0x9e, 0x4c, 0x85, 0xa6, 0x42, 0x2e, 0xdb, 0xbb, 0xe4, 0xc3,
	0xd0, 0xca, 0xc4, 0xb6, 0xef, 0x47, 0x8e, 0xf8, 0x55, 0xd6, 0xbe, 0xa5, 0xda, 0xb9, 0xc2, 0x5f,
	0xd0, 0xb0, 0xfc, 0x6a, 0x44, 0xcc, 0x4a, 0x39, 0xf5, 0xe9, 0x2d, 0x9b, 0x57, 0xf2, 0xf2, 0x2d,
	0xfd, 0xd5, 0x88, 0xd8, 0xb5, 0x42, 0x9e, 0xa7, 0xe6, 0x59, 0x38, 0x56, 0x57, 0xd5, 0xc9, 0xf9,
	0x4d, 0xa5, 0xb9, 0x58, 0xd5, 0xd4, 0x23, 0xe0, 0xaf, 0x1a, 0xd0, 0xcc, 0xc7, 0x08, 0xf2, 0x75,
	0xd1, 0x09, 0x69, 0x3e, 0x03, 0xee, 0x3e, 0xe0, 0x31, 0x46, 0x3c, 0xe9, 0xc6, 0x47, 0x1d, 0xf3,
	0x3b, 0x53, 0xd0, 0xd0, 0x88, 0x6c, 0x7c, 0xd4, 0x19, 0xd1, 0xf8, 0xa8, 0xb3, 0x15, 0x3d, 0x8a,
	0xd3, 0x3b, 0xf9, 0x91, 0x01, 0x93, 0x71, 0x94, 0xf0, 0xbc, 0xa7, 0xbc, 0x66, 0x1c, 0xd4, 0x79,
	0x75, 0x64, 0x1c, 0xd9, 0x2d, 0x90, 0x7c, 0x36, 0xff, 0x3a, 0x0e, 0x50, 0xa0, 0xe4, 0xe7, 0x62,
	0x10, 0x88, 0x12, 0xae, 0x53, 0xeb, 0xad, 0x87, 0x21, 0x56, 0xf9, 0xa8, 0x12, 0x4e, 0x06, 0x67,
	0xfe, 0x74, 0x0c, 0x9a, 0x39, 0x46, 0x96, 0x61, 0x4a, 0xbe, 0xd4, 0x73, 0xee, 0x90, 0x40, 0x1f,
	0xcd, 0xa4, 0x33, 0xbf, 0x3d, 0x5d, 0xfc, 0x6e, 0xd6, 0x2d, 0x32, 0xc0, 0x40, 0xd8, 0xa1, 0x6e,
	0xad, 0x45, 0x2a, 0xfc, 0x92, 0x4b, 0x08, 0x4c, 0x24, 0x91, 0x8f, 0xf2, 0xee, 0xac, 0xd9, 0x95,
	0xcf, 0xe4, 0xcb, 0x30, 0x97, 0x44, 0xa9, 0xbc, 0xf9, 0xc2, 0x70, 0x40, 0xc3, 0x62, 0x46, 0xec,
	0xdd, 0xdf, 0x1d, 0x74, 0xa7, 0x66, 0x56, 0x65, 0xe5, 0x6c, 0x86, 0x6e, 0x2a, 0xd0, 0x7c, 0xa7,
	0x09, 0x47, 0x46, 0x11, 0xc9, 0xb7, 0x0c, 0x98, 0xad, 0x0a, 0x74, 0xca, 0x0e, 0xf6, 0x21, 0xae,
	0x1a, 0xa8, 0x72, 0x71, 0xa6, 0x12, 0xab, 0xf9, 0x93, 0x06, 0x2c, 0x8c, 0xa0, 0x91, 0x15, 0x68,
	0x24, 0x68, 0xd1, 0xd0, 0xc5, 0xdd, 0xea, 0xc6, 0x4f, 0x25, 0x78, 0x49, 0xa0, 0x23, 0xf7, 0x7d,
	0x09, 0x9a, 0x6e, 0xdf, 0x62, 0x7b, 0xa1, 0x83, 0xae, 0xbc, 0x9a, 0x6c, 0x74, 0x1b, 0x6e, 0xbf,
	0x27, 0xdf, 0x45, 0x95, 0xce, 0xc6, 0x49, 0xe4, 0x20, 0x63, 0xf2, 0x9e, 0x30, 0xcd, 0x0f, 0xe5,
	0x4b, 0x0f, 0x68, 0xf1, 0x9d, 0xaa, 0x7b, 0x75, 0x78, 0x33, 0x19, 0xd8, 0x93, 0x98, 0xf9, 0x8d,
	0x43, 0xb0, 0x30, 0x82, 0x46, 0xfe, 0x6d, 0xc0, 0x63, 0xa3, 0xe3, 0xc9, 0xd8, 0x45, 0x8e, 0xfd,
	0xcc, 0x38, 0xc0, 0xf5, 0x74, 0xde, 0x23, 0x48, 0xb5, 0xe8, 0x93, 0xa3, 0xfe, 0x26, 0xba, 0xa2,
	0x39, 0xe6, 0x1b, 0x13, 0xf0, 0xf8, 0xff, 0x63, 0x87, 0x7c, 0x6d, 0x0c, 0x4e, 0xde, 0x93, 0xa8,
	0xf3, 0xfb, 0xf7, 0x0f, 0xfd, 0x9e, 0xdc, 0x9b, 0xa4, 0x8a, 0x67, 0xe9, 0x1e, 0xdb, 0x66, 0xfe,
	0xc5, 0x80, 0x53, 0xef, 0x6d, 0x83, 0xac, 0xc2, 0x61, 0xfd, 0x1e, 0xda, 0x01, 0xca, 0xea, 0x6a,
	0xea, 0xea, 0x9a, 0xce, 0x44, 0x5b, 0x76, 0x80, 0xa4, 0x25, 0xe6, 0x25, 0x57, 0x16, 0xd8, 0x84,
	0x18, 0x5a, 0x5c, 0xd2, 0x86, 0xa9, 0x24, 0x0d, 0x39, 0x0d, 0x50, 0x56, 0xd7, 0x44, 0x57, 0xbf,
	0x92, 0x0f, 0xc1, 0x9c, 0x13, 0xa7, 0xe5, 0x19, 0x4d, 0xde, 0xf3, 0x1b, 0xdd, 0x59, 0x27, 0x4e,
	0x4b, 0xa3, 0x19, 0x39, 0x0d, 0x44, 0xff, 0xca, 0x2a, 0x71, 0xcf, 0x4a, 0xee, 0xbc, 0x92, 0x94,
	0xe8, 0x9f, 0xb8, 0x02, 0xe4, 0x7a, 0x18, 0x27, 0x56, 0x7e, 0x78, 0x16, 0xee, 0x72, 0x72, 0xac,
	0xf3, 0x52, 0x1a, 0xd2, 0x18, 0x93, 0x2d, 0xe4, 0x3b, 0x51, 0x72, 0x83, 0xf5, 0x30, 0x64, 0x51,
	0xc2, 0xe4, 0xd5, 0xf0, 0xf4, 0x3a, 0x14, 0x67, 0xdd, 0x9d, 0x13, 0xea, 0x2f, 0x89, 0xd7, 0x5e,
	0x40, 0x37, 0x77, 0xf9, 0xc6, 0x2b, 0xef, 0xdc, 0x59, 0x36, 0xfe, 0x7c, 0x67, 0xd9, 0xf8, 0xd7,
	0x9d, 0x65, 0xe3, 0x0b, 0xdd, 0x01, 0xe5, 0x82, 0x2d, 0x8c, 0x75, 0x42, 0xe4, 0x6b, 0xd4, 0xc1,
	0x3e, 0x26, 0x83, 0xb5, 0x21, 0xda, 0x3e, 0x1f, 0xf6, 0x23, 0x7e, 0x9a, 0x86, 0x03, 0x64, 0xfc,
	0xf4, 0x75, 0x4e, 0x4f, 0x87, 0x36, 0xa7, 0xdb, 0xb8, 0x16, 0xdf, 0x18, 0xac, 0x5d, 0xe7, 0x74,
	0xcd, 0x76, 0xed, 0x98, 0x63, 0xc2, 0xd6, 0x54, 0x78, 0x6b, 0x62, 0xc4, 0x0e, 0xec, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x2e, 0xef, 0x20, 0xae, 0xca, 0x1d, 0x00, 0x00,
}

func (m *JunosSmi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.System != nil {
		{
			size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagement != nil {
		{
			size, err := m.SubscriberManagement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Chassis) > 0 {
		for iNdEx := len(m.Chassis) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Chassis[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xc2
		}
	}
	if m.Infra != nil {
		{
			size, err := m.Infra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ResourceMonitor != nil {
		{
			size, err := m.ResourceMonitor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Sdb != nil {
		{
			size, err := m.Sdb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Statistics != nil {
		{
			size, err := m.Statistics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClientType != nil {
		{
			size, err := m.ClientType.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.TotalStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.TerminatedStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.TerminatedStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.TerminatingStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.TerminatingStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.ActiveStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ActiveStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.ConfiguredStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ConfiguredStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InitStateCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.InitStateCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.TotalClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb0
	}
	if m.EssmClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.EssmClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa8
	}
	if m.MlpppClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MlpppClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xa0
	}
	if m.VplsPwClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.VplsPwClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x98
	}
	if m.StaticClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.StaticClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x90
	}
	if m.L2TpClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.L2TpClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x88
	}
	if m.PppoeClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.PppoeClientCount))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0x80
	}
	if m.PppClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.PppClientCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf8
	}
	if m.VlanClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.VlanClientCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xf0
	}
	if m.DhcpClientCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.DhcpClientCount))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Fpcs != nil {
		{
			size, err := m.Fpcs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Chassis != nil {
		{
			size, err := m.Chassis.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberLimitNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitNominal))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd0
	}
	if m.SubscriberLimitExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitExceeded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc8
	}
	if m.CurrentSubscriberCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CurrentSubscriberCount))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xa0
	}
	if m.ConfiguredSubscriberLimit != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ConfiguredSubscriberLimit))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Fpc) > 0 {
		for iNdEx := len(m.Fpc) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Fpc[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Pics != nil {
		{
			size, err := m.Pics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.Statistics != nil {
		{
			size, err := m.Statistics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Slot != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.Slot))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberLimitNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitNominal))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd0
	}
	if m.SubscriberLimitExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitExceeded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc8
	}
	if m.Pfes != nil {
		{
			size, err := m.Pfes.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.CurrentSubscriberCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CurrentSubscriberCount))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xa0
	}
	if m.ConfiguredSubscriberLimit != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ConfiguredSubscriberLimit))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x98
	}
	if m.MemHeapNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemHeapNominal))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.MemHeapExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemHeapExceeded))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.RttThrottledSubCountService != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.RttThrottledSubCountService))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa8
	}
	if m.RttThrottledSubCountClient != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.RttThrottledSubCountClient))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xa0
	}
	if m.ServiceSessionDeniedCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ServiceSessionDeniedCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x98
	}
	if m.ClientSessionDeniedCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ClientSessionDeniedCount))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x90
	}
	if m.HeapMemoryUsed != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.HeapMemoryUsed))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Pfe) > 0 {
		for iNdEx := len(m.Pfe) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Pfe[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SchedBlocks != nil {
		{
			size, err := m.SchedBlocks.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.MemExpansionNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemExpansionNominal))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x90
	}
	if m.MemExpansionExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemExpansionExceeded))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x88
	}
	if m.MemIflNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemIflNominal))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0x80
	}
	if m.MemIflExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemIflExceeded))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xf8
	}
	if m.FwMemoryFree != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.FwMemoryFree))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc8
	}
	if m.NhMemoryFree != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.NhMemoryFree))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xc0
	}
	if m.ExpansionMemoryUsed != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ExpansionMemoryUsed))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb8
	}
	if m.IflMemoryUsed != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.IflMemoryUsed))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xb0
	}
	if m.FilterMemoryUsed != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.FilterMemoryUsed))
		i--
		dAtA[i] = 0x6
		i--
		dAtA[i] = 0xa8
	}
	if m.PfeNo != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.PfeNo))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SchedBlock) > 0 {
		for iNdEx := len(m.SchedBlock) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SchedBlock[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CosUtilizationNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CosUtilizationNominal))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xf0
	}
	if m.CosUtilizationExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CosUtilizationExceeded))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xe8
	}
	if m.QueuesAllocated != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.QueuesAllocated))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xd0
	}
	if m.QueuesMax != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.QueuesMax))
		i--
		dAtA[i] = 0x7
		i--
		dAtA[i] = 0xc8
	}
	if m.SblockNo != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SblockNo))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Pic) > 0 {
		for iNdEx := len(m.Pic) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Pic[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberLimitNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitNominal))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd0
	}
	if m.SubscriberLimitExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitExceeded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc8
	}
	if m.Ports != nil {
		{
			size, err := m.Ports.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.CurrentSubscriberCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CurrentSubscriberCount))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xa0
	}
	if m.ConfiguredSubscriberLimit != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ConfiguredSubscriberLimit))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x98
	}
	if m.PicNo != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.PicNo))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Port) > 0 {
		for iNdEx := len(m.Port) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Port[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberLimitNominal != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitNominal))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xd0
	}
	if m.SubscriberLimitExceeded != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.SubscriberLimitExceeded))
		i--
		dAtA[i] = 0xc
		i--
		dAtA[i] = 0xc8
	}
	if m.CurrentSubscriberCount != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.CurrentSubscriberCount))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0xa0
	}
	if m.ConfiguredSubscriberLimit != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ConfiguredSubscriberLimit))
		i--
		dAtA[i] = 0x8
		i--
		dAtA[i] = 0x98
	}
	if m.PortNo != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.PortNo))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoutingEngines != nil {
		{
			size, err := m.RoutingEngines.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Role != nil {
		i -= len(*m.Role)
		copy(dAtA[i:], *m.Role)
		i = encodeVarintSmidOc(dAtA, i, uint64(len(*m.Role)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.MemberId != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.MemberId))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RoutingEngine) > 0 {
		for iNdEx := len(m.RoutingEngine) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RoutingEngine[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ProcessStatus != nil {
		{
			size, err := m.ProcessStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.DbSynced != nil {
		i--
		if *m.DbSynced {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Role != nil {
		i -= len(*m.Role)
		copy(dAtA[i:], *m.Role)
		i = encodeVarintSmidOc(dAtA, i, uint64(len(*m.Role)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.ReIndex != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.ReIndex))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SubscriberManagementProcesses != nil {
		{
			size, err := m.SubscriberManagementProcesses.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSmidOc(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SubscriberManagementProcess) > 0 {
		for iNdEx := len(m.SubscriberManagementProcess) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SubscriberManagementProcess[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmidOc(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MemoryUtilization != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.MemoryUtilization))))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb9
	}
	if m.CpuUtilization != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.CpuUtilization))))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb1
	}
	if m.Runtime != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.Runtime))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.Pid != nil {
		i = encodeVarintSmidOc(dAtA, i, uint64(*m.Pid))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.ProcessName != nil {
		i -= len(*m.ProcessName)
		copy(dAtA[i:], *m.ProcessName)
		i = encodeVarintSmidOc(dAtA, i, uint64(len(*m.ProcessName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintSmidOc(dAtA []byte, offset int, v uint64) int {
	offset -= sovSmidOc(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *JunosSmi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.System != nil {
		l = m.System.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagement != nil {
		l = m.SubscriberManagement.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Infra != nil {
		l = m.Infra.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if len(m.Chassis) > 0 {
		for _, e := range m.Chassis {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Sdb != nil {
		l = m.Sdb.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.ResourceMonitor != nil {
		l = m.ResourceMonitor.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Statistics != nil {
		l = m.Statistics.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.ClientType != nil {
		l = m.ClientType.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InitStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.InitStateCount))
	}
	if m.ConfiguredStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.ConfiguredStateCount))
	}
	if m.ActiveStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.ActiveStateCount))
	}
	if m.TerminatingStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.TerminatingStateCount))
	}
	if m.TerminatedStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.TerminatedStateCount))
	}
	if m.TotalStateCount != nil {
		n += 2 + sovSmidOc(uint64(*m.TotalStateCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DhcpClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.DhcpClientCount))
	}
	if m.VlanClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.VlanClientCount))
	}
	if m.PppClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.PppClientCount))
	}
	if m.PppoeClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.PppoeClientCount))
	}
	if m.L2TpClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.L2TpClientCount))
	}
	if m.StaticClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.StaticClientCount))
	}
	if m.VplsPwClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.VplsPwClientCount))
	}
	if m.MlpppClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.MlpppClientCount))
	}
	if m.EssmClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.EssmClientCount))
	}
	if m.TotalClientCount != nil {
		n += 2 + sovSmidOc(uint64(*m.TotalClientCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Chassis != nil {
		l = m.Chassis.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.Fpcs != nil {
		l = m.Fpcs.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ConfiguredSubscriberLimit != nil {
		n += 2 + sovSmidOc(uint64(*m.ConfiguredSubscriberLimit))
	}
	if m.CurrentSubscriberCount != nil {
		n += 2 + sovSmidOc(uint64(*m.CurrentSubscriberCount))
	}
	if m.SubscriberLimitExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitExceeded))
	}
	if m.SubscriberLimitNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitNominal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Fpc) > 0 {
		for _, e := range m.Fpc {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Slot != nil {
		n += 2 + sovSmidOc(uint64(*m.Slot))
	}
	if m.Statistics != nil {
		l = m.Statistics.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.Pics != nil {
		l = m.Pics.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeapMemoryUsed != nil {
		n += 2 + sovSmidOc(uint64(*m.HeapMemoryUsed))
	}
	if m.ClientSessionDeniedCount != nil {
		n += 2 + sovSmidOc(uint64(*m.ClientSessionDeniedCount))
	}
	if m.ServiceSessionDeniedCount != nil {
		n += 2 + sovSmidOc(uint64(*m.ServiceSessionDeniedCount))
	}
	if m.RttThrottledSubCountClient != nil {
		n += 2 + sovSmidOc(uint64(*m.RttThrottledSubCountClient))
	}
	if m.RttThrottledSubCountService != nil {
		n += 2 + sovSmidOc(uint64(*m.RttThrottledSubCountService))
	}
	if m.MemHeapExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.MemHeapExceeded))
	}
	if m.MemHeapNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.MemHeapNominal))
	}
	if m.ConfiguredSubscriberLimit != nil {
		n += 2 + sovSmidOc(uint64(*m.ConfiguredSubscriberLimit))
	}
	if m.CurrentSubscriberCount != nil {
		n += 2 + sovSmidOc(uint64(*m.CurrentSubscriberCount))
	}
	if m.Pfes != nil {
		l = m.Pfes.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.SubscriberLimitExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitExceeded))
	}
	if m.SubscriberLimitNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitNominal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Pfe) > 0 {
		for _, e := range m.Pfe {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PfeNo != nil {
		n += 2 + sovSmidOc(uint64(*m.PfeNo))
	}
	if m.FilterMemoryUsed != nil {
		n += 2 + sovSmidOc(uint64(*m.FilterMemoryUsed))
	}
	if m.IflMemoryUsed != nil {
		n += 2 + sovSmidOc(uint64(*m.IflMemoryUsed))
	}
	if m.ExpansionMemoryUsed != nil {
		n += 2 + sovSmidOc(uint64(*m.ExpansionMemoryUsed))
	}
	if m.NhMemoryFree != nil {
		n += 2 + sovSmidOc(uint64(*m.NhMemoryFree))
	}
	if m.FwMemoryFree != nil {
		n += 2 + sovSmidOc(uint64(*m.FwMemoryFree))
	}
	if m.MemIflExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.MemIflExceeded))
	}
	if m.MemIflNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.MemIflNominal))
	}
	if m.MemExpansionExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.MemExpansionExceeded))
	}
	if m.MemExpansionNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.MemExpansionNominal))
	}
	if m.SchedBlocks != nil {
		l = m.SchedBlocks.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SchedBlock) > 0 {
		for _, e := range m.SchedBlock {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SblockNo != nil {
		n += 2 + sovSmidOc(uint64(*m.SblockNo))
	}
	if m.QueuesMax != nil {
		n += 2 + sovSmidOc(uint64(*m.QueuesMax))
	}
	if m.QueuesAllocated != nil {
		n += 2 + sovSmidOc(uint64(*m.QueuesAllocated))
	}
	if m.CosUtilizationExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.CosUtilizationExceeded))
	}
	if m.CosUtilizationNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.CosUtilizationNominal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Pic) > 0 {
		for _, e := range m.Pic {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PicNo != nil {
		n += 2 + sovSmidOc(uint64(*m.PicNo))
	}
	if m.ConfiguredSubscriberLimit != nil {
		n += 2 + sovSmidOc(uint64(*m.ConfiguredSubscriberLimit))
	}
	if m.CurrentSubscriberCount != nil {
		n += 2 + sovSmidOc(uint64(*m.CurrentSubscriberCount))
	}
	if m.Ports != nil {
		l = m.Ports.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.SubscriberLimitExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitExceeded))
	}
	if m.SubscriberLimitNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitNominal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Port) > 0 {
		for _, e := range m.Port {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PortNo != nil {
		n += 2 + sovSmidOc(uint64(*m.PortNo))
	}
	if m.ConfiguredSubscriberLimit != nil {
		n += 2 + sovSmidOc(uint64(*m.ConfiguredSubscriberLimit))
	}
	if m.CurrentSubscriberCount != nil {
		n += 2 + sovSmidOc(uint64(*m.CurrentSubscriberCount))
	}
	if m.SubscriberLimitExceeded != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitExceeded))
	}
	if m.SubscriberLimitNominal != nil {
		n += 2 + sovSmidOc(uint64(*m.SubscriberLimitNominal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MemberId != nil {
		n += 2 + sovSmidOc(uint64(*m.MemberId))
	}
	if m.Role != nil {
		l = len(*m.Role)
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.RoutingEngines != nil {
		l = m.RoutingEngines.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RoutingEngine) > 0 {
		for _, e := range m.RoutingEngine {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReIndex != nil {
		n += 2 + sovSmidOc(uint64(*m.ReIndex))
	}
	if m.Role != nil {
		l = len(*m.Role)
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.DbSynced != nil {
		n += 3
	}
	if m.ProcessStatus != nil {
		l = m.ProcessStatus.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SubscriberManagementProcesses != nil {
		l = m.SubscriberManagementProcesses.Size()
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SubscriberManagementProcess) > 0 {
		for _, e := range m.SubscriberManagementProcess {
			l = e.Size()
			n += 2 + l + sovSmidOc(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProcessName != nil {
		l = len(*m.ProcessName)
		n += 2 + l + sovSmidOc(uint64(l))
	}
	if m.Pid != nil {
		n += 2 + sovSmidOc(uint64(*m.Pid))
	}
	if m.Runtime != nil {
		n += 2 + sovSmidOc(uint64(*m.Runtime))
	}
	if m.CpuUtilization != nil {
		n += 10
	}
	if m.MemoryUtilization != nil {
		n += 10
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSmidOc(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSmidOc(x uint64) (n int) {
	return sovSmidOc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *JunosSmi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: junos_smi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: junos_smi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.System == nil {
				m.System = &JunosSmiSystemType{}
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: system_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: system_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagement == nil {
				m.SubscriberManagement = &JunosSmiSystemTypeSubscriberManagementType{}
			}
			if err := m.SubscriberManagement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Infra == nil {
				m.Infra = &JunosSmiSystemTypeSubscriberManagementTypeInfraType{}
			}
			if err := m.Infra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chassis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chassis = append(m.Chassis, &JunosSmiSystemTypeSubscriberManagementTypeChassisList{})
			if err := m.Chassis[len(m.Chassis)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: infra_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: infra_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sdb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sdb == nil {
				m.Sdb = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType{}
			}
			if err := m.Sdb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceMonitor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResourceMonitor == nil {
				m.ResourceMonitor = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType{}
			}
			if err := m.ResourceMonitor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sdb_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sdb_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Statistics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Statistics == nil {
				m.Statistics = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType{}
			}
			if err := m.Statistics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: statistics_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: statistics_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClientType == nil {
				m.ClientType = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType{}
			}
			if err := m.ClientType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InitStateCount = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfiguredStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfiguredStateCount = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ActiveStateCount = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminatingStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TerminatingStateCount = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TerminatedStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TerminatedStateCount = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalStateCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalStateCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeSdbTypeStatisticsTypeClientTypeType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: client_type_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: client_type_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DhcpClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DhcpClientCount = &v
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VlanClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VlanClientCount = &v
		case 63:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppClientCount = &v
		case 64:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PppoeClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PppoeClientCount = &v
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field L2TpClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.L2TpClientCount = &v
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StaticClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StaticClientCount = &v
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VplsPwClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VplsPwClientCount = &v
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MlpppClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MlpppClientCount = &v
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EssmClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EssmClientCount = &v
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalClientCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalClientCount = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: resource_monitor_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: resource_monitor_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chassis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Chassis == nil {
				m.Chassis = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType{}
			}
			if err := m.Chassis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fpcs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Fpcs == nil {
				m.Fpcs = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType{}
			}
			if err := m.Fpcs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeChassisType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: chassis_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: chassis_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfiguredSubscriberLimit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfiguredSubscriberLimit = &v
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSubscriberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentSubscriberCount = &v
		case 201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitExceeded = &v
		case 202:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitNominal = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: fpcs_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: fpcs_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fpc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fpc = append(m.Fpc, &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList{})
			if err := m.Fpc[len(m.Fpc)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: fpc_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: fpc_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Slot = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Statistics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Statistics == nil {
				m.Statistics = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType{}
			}
			if err := m.Statistics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pics == nil {
				m.Pics = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType{}
			}
			if err := m.Pics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: statistics_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: statistics_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeapMemoryUsed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HeapMemoryUsed = &v
		case 82:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSessionDeniedCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClientSessionDeniedCount = &v
		case 83:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceSessionDeniedCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ServiceSessionDeniedCount = &v
		case 84:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RttThrottledSubCountClient", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RttThrottledSubCountClient = &v
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RttThrottledSubCountService", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RttThrottledSubCountService = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemHeapExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemHeapExceeded = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemHeapNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemHeapNominal = &v
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfiguredSubscriberLimit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfiguredSubscriberLimit = &v
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSubscriberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentSubscriberCount = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pfes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pfes == nil {
				m.Pfes = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType{}
			}
			if err := m.Pfes.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitExceeded = &v
		case 202:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitNominal = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: pfes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: pfes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pfe", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pfe = append(m.Pfe, &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList{})
			if err := m.Pfe[len(m.Pfe)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: pfe_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: pfe_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PfeNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PfeNo = &v
		case 101:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilterMemoryUsed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FilterMemoryUsed = &v
		case 102:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IflMemoryUsed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IflMemoryUsed = &v
		case 103:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpansionMemoryUsed", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExpansionMemoryUsed = &v
		case 104:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NhMemoryFree", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NhMemoryFree = &v
		case 105:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FwMemoryFree", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FwMemoryFree = &v
		case 111:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemIflExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemIflExceeded = &v
		case 112:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemIflNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemIflNominal = &v
		case 113:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemExpansionExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemExpansionExceeded = &v
		case 114:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemExpansionNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemExpansionNominal = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchedBlocks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SchedBlocks == nil {
				m.SchedBlocks = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType{}
			}
			if err := m.SchedBlocks.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sched_blocks_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sched_blocks_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchedBlock", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchedBlock = append(m.SchedBlock, &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList{})
			if err := m.SchedBlock[len(m.SchedBlock)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListStatisticsTypePfesTypePfeListSchedBlocksTypeSchedBlockList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sched_block_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sched_block_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SblockNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SblockNo = &v
		case 121:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueuesMax", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QueuesMax = &v
		case 122:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueuesAllocated", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QueuesAllocated = &v
		case 141:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosUtilizationExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CosUtilizationExceeded = &v
		case 142:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosUtilizationNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CosUtilizationNominal = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: pics_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: pics_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pic", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pic = append(m.Pic, &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList{})
			if err := m.Pic[len(m.Pic)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: pic_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: pic_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PicNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PicNo = &v
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfiguredSubscriberLimit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfiguredSubscriberLimit = &v
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSubscriberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentSubscriberCount = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ports", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ports == nil {
				m.Ports = &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType{}
			}
			if err := m.Ports.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitExceeded = &v
		case 202:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitNominal = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ports_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ports_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Port = append(m.Port, &JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList{})
			if err := m.Port[len(m.Port)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeInfraTypeResourceMonitorTypeFpcsTypeFpcListPicsTypePicListPortsTypePortList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: port_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: port_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PortNo", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PortNo = &v
		case 131:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfiguredSubscriberLimit", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfiguredSubscriberLimit = &v
		case 132:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentSubscriberCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrentSubscriberCount = &v
		case 201:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitExceeded", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitExceeded = &v
		case 202:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberLimitNominal", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SubscriberLimitNominal = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: chassis_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: chassis_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MemberId = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Role = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoutingEngines", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RoutingEngines == nil {
				m.RoutingEngines = &JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType{}
			}
			if err := m.RoutingEngines.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: routing_engines_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: routing_engines_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoutingEngine", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoutingEngine = append(m.RoutingEngine, &JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList{})
			if err := m.RoutingEngine[len(m.RoutingEngine)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: routing_engine_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: routing_engine_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReIndex = &v
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Role = &s
			iNdEx = postIndex
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DbSynced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.DbSynced = &b
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProcessStatus == nil {
				m.ProcessStatus = &JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType{}
			}
			if err := m.ProcessStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: process_status_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: process_status_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagementProcesses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SubscriberManagementProcesses == nil {
				m.SubscriberManagementProcesses = &JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType{}
			}
			if err := m.SubscriberManagementProcesses.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_processes_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_processes_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriberManagementProcess", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriberManagementProcess = append(m.SubscriberManagementProcess, &JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList{})
			if err := m.SubscriberManagementProcess[len(m.SubscriberManagementProcess)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JunosSmiSystemTypeSubscriberManagementTypeChassisListRoutingEnginesTypeRoutingEngineListProcessStatusTypeSubscriberManagementProcessesTypeSubscriberManagementProcessList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subscriber_management_process_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subscriber_management_process_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSmidOc
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSmidOc
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProcessName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Pid = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Runtime", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Runtime = &v
		case 54:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuUtilization", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.CpuUtilization = &v2
		case 55:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemoryUtilization", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.MemoryUtilization = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipSmidOc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSmidOc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSmidOc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSmidOc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSmidOc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSmidOc
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSmidOc
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSmidOc
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSmidOc        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSmidOc          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSmidOc = fmt.Errorf("proto: unexpected end of group")
)
