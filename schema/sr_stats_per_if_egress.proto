syntax = "proto2";
option go_package = "git.juniper.net/iceberg/healthbot-ingest-jti-native/pkg/jti/adapters/_junos/schema";
import "telemetry_top.proto";

//
// This occupies branch 16 from JuniperNetworksSensors
//
extend JuniperNetworksSensors {
    optional SrStatsPerIfEgress jnpr_sr_stats_per_if_egress_ext = 17;
}

//
// Top-level message
//
message SrStatsPerIfEgress {
    // List of SR stats per IF egress records
    repeated SegmentRoutingInterfaceRecord per_if_records = 1;
}

//
// SR statistics record
//
message SegmentRoutingInterfaceRecord  {
    // Interface name, e.g., xe-0/0/0
    required string if_name = 1 [(telemetry_options).is_key = true];

    // Name of parent for AE interface, if applicable
    optional string parent_ae_name    = 2    [(telemetry_options).is_key = true];

    // Name of the counter. This is useful when an interface has multiple counters.
    // for some scenarios, it is possible that a new counter is
    // created in the hardware.
    optional string  counter_name         = 3  [(telemetry_options).is_key = true];

    // Traffic statistics
    optional SegmentRoutingIfStats ingress_stats = 4;
    optional SegmentRoutingIfStats egress_stats = 5;
}

message SegmentRoutingIfStats {
    // Packet and Byte statistics
    optional uint64      packets = 1         [(telemetry_options).is_counter = true];
    optional uint64      bytes = 2           [(telemetry_options).is_counter = true];

    // Rates of the above counters.
    optional uint64      packet_rate = 3    [(telemetry_options).is_gauge = true];
    optional uint64      byte_rate = 4     [(telemetry_options).is_gauge = true];
}
