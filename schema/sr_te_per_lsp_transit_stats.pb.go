// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sr_te_per_lsp_transit_stats.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Mpls_SrTePerLspTransitStats struct {
	SignalingProtocols   *Mpls_SrTePerLspTransitStatsSignalingProtocolsType `protobuf:"bytes,151,opt,name=signaling_protocols,json=signalingProtocols" json:"signaling_protocols,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStats) Reset()         { *m = Mpls_SrTePerLspTransitStats{} }
func (m *Mpls_SrTePerLspTransitStats) String() string { return proto.CompactTextString(m) }
func (*Mpls_SrTePerLspTransitStats) ProtoMessage()    {}
func (*Mpls_SrTePerLspTransitStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0}
}
func (m *Mpls_SrTePerLspTransitStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStats.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStats) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStats) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStats.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStats proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStats) GetSignalingProtocols() *Mpls_SrTePerLspTransitStatsSignalingProtocolsType {
	if m != nil {
		return m.SignalingProtocols
	}
	return nil
}

type Mpls_SrTePerLspTransitStatsSignalingProtocolsType struct {
	SegmentRouting       *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType `protobuf:"bytes,151,opt,name=segment_routing,json=segmentRouting" json:"segment_routing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                             `json:"-"`
	XXX_unrecognized     []byte                                                               `json:"-"`
	XXX_sizecache        int32                                                                `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) Reset() {
	*m = Mpls_SrTePerLspTransitStatsSignalingProtocolsType{}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) String() string {
	return proto.CompactTextString(m)
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsType) ProtoMessage() {}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0, 0}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsType.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsType.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsType proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) GetSegmentRouting() *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType {
	if m != nil {
		return m.SegmentRouting
	}
	return nil
}

type Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType struct {
	SrTePerLspTransitPolicies *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType `protobuf:"bytes,151,opt,name=sr_te_per_lsp_transit_policies,json=srTePerLspTransitPolicies" json:"sr_te_per_lsp_transit_policies,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                                                                          `json:"-"`
	XXX_unrecognized          []byte                                                                                            `json:"-"`
	XXX_sizecache             int32                                                                                             `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) Reset() {
	*m = Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType{}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) String() string {
	return proto.CompactTextString(m)
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) ProtoMessage() {}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0, 0, 0}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) GetSrTePerLspTransitPolicies() *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType {
	if m != nil {
		return m.SrTePerLspTransitPolicies
	}
	return nil
}

type Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType struct {
	SrTePerLspTransitPolicy []*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList `protobuf:"bytes,151,rep,name=sr_te_per_lsp_transit_policy,json=srTePerLspTransitPolicy" json:"sr_te_per_lsp_transit_policy,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                                                                                                       `json:"-"`
	XXX_unrecognized        []byte                                                                                                                         `json:"-"`
	XXX_sizecache           int32                                                                                                                          `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) Reset() {
	*m = Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType{}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) String() string {
	return proto.CompactTextString(m)
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) ProtoMessage() {
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0, 0, 0, 0}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) GetSrTePerLspTransitPolicy() []*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList {
	if m != nil {
		return m.SrTePerLspTransitPolicy
	}
	return nil
}

type Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList struct {
	Record               []*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList `protobuf:"bytes,151,rep,name=record" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                                                                 `json:"-"`
	XXX_unrecognized     []byte                                                                                                                                   `json:"-"`
	XXX_sizecache        int32                                                                                                                                    `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) Reset() {
	*m = Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList{}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) String() string {
	return proto.CompactTextString(m)
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) ProtoMessage() {
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0, 0, 0, 0, 0}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) GetRecord() []*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList {
	if m != nil {
		return m.Record
	}
	return nil
}

type Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList struct {
	TunnelName           *string  `protobuf:"bytes,51,opt,name=tunnel_name,json=tunnelName" json:"tunnel_name,omitempty"`
	Source               *string  `protobuf:"bytes,52,opt,name=source" json:"source,omitempty"`
	Origin               *string  `protobuf:"bytes,53,opt,name=origin" json:"origin,omitempty"`
	Distinguisher        *string  `protobuf:"bytes,54,opt,name=distinguisher" json:"distinguisher,omitempty"`
	LspName              *string  `protobuf:"bytes,55,opt,name=lsp_name,json=lspName" json:"lsp_name,omitempty"`
	CounterName          *string  `protobuf:"bytes,56,opt,name=counter_name,json=counterName" json:"counter_name,omitempty"`
	InstanceIdentifier   *uint32  `protobuf:"varint,57,opt,name=instance_identifier,json=instanceIdentifier" json:"instance_identifier,omitempty"`
	Packets              *uint64  `protobuf:"varint,58,opt,name=packets" json:"packets,omitempty"`
	Bytes                *uint64  `protobuf:"varint,59,opt,name=bytes" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) Reset() {
	*m = Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList{}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) String() string {
	return proto.CompactTextString(m)
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) ProtoMessage() {
}
func (*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9b4e7ea4823da5e, []int{0, 0, 0, 0, 0, 0}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList.Merge(m, src)
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) XXX_Size() int {
	return m.Size()
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) XXX_DiscardUnknown() {
	xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList.DiscardUnknown(m)
}

var xxx_messageInfo_Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList proto.InternalMessageInfo

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetTunnelName() string {
	if m != nil && m.TunnelName != nil {
		return *m.TunnelName
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetOrigin() string {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetDistinguisher() string {
	if m != nil && m.Distinguisher != nil {
		return *m.Distinguisher
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetLspName() string {
	if m != nil && m.LspName != nil {
		return *m.LspName
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetCounterName() string {
	if m != nil && m.CounterName != nil {
		return *m.CounterName
	}
	return ""
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetInstanceIdentifier() uint32 {
	if m != nil && m.InstanceIdentifier != nil {
		return *m.InstanceIdentifier
	}
	return 0
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetPackets() uint64 {
	if m != nil && m.Packets != nil {
		return *m.Packets
	}
	return 0
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) GetBytes() uint64 {
	if m != nil && m.Bytes != nil {
		return *m.Bytes
	}
	return 0
}

var E_JnprMpls_SrTePerLspTransitStatsExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*Mpls_SrTePerLspTransitStats)(nil),
	Field:         104,
	Name:          "jnpr_mpls_SrTePerLspTransitStats_ext",
	Tag:           "bytes,104,opt,name=jnpr_mpls_SrTePerLspTransitStats_ext",
	Filename:      "sr_te_per_lsp_transit_stats.proto",
}

func init() {
	proto.RegisterType((*Mpls_SrTePerLspTransitStats)(nil), "mpls_SrTePerLspTransitStats")
	proto.RegisterType((*Mpls_SrTePerLspTransitStatsSignalingProtocolsType)(nil), "mpls_SrTePerLspTransitStats.signaling_protocols_type")
	proto.RegisterType((*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType)(nil), "mpls_SrTePerLspTransitStats.signaling_protocols_type.segment_routing_type")
	proto.RegisterType((*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType)(nil), "mpls_SrTePerLspTransitStats.signaling_protocols_type.segment_routing_type.sr_te_per_lsp_transit_policies_type")
	proto.RegisterType((*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList)(nil), "mpls_SrTePerLspTransitStats.signaling_protocols_type.segment_routing_type.sr_te_per_lsp_transit_policies_type.sr_te_per_lsp_transit_policy_list")
	proto.RegisterType((*Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList)(nil), "mpls_SrTePerLspTransitStats.signaling_protocols_type.segment_routing_type.sr_te_per_lsp_transit_policies_type.sr_te_per_lsp_transit_policy_list.record_list")
	proto.RegisterExtension(E_JnprMpls_SrTePerLspTransitStatsExt)
}

func init() { proto.RegisterFile("sr_te_per_lsp_transit_stats.proto", fileDescriptor_b9b4e7ea4823da5e) }

var fileDescriptor_b9b4e7ea4823da5e = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6b, 0x13, 0x4f,
	0x1c, 0x66, 0xfa, 0xef, 0xeb, 0xe4, 0x5f, 0x85, 0xa9, 0xd0, 0x35, 0xad, 0x31, 0x55, 0x91, 0x80,
	0x74, 0x17, 0xaa, 0xf5, 0xa5, 0x5e, 0xa4, 0xe0, 0xc1, 0xa2, 0xa5, 0x6c, 0x7b, 0xf2, 0x32, 0x6e,
	0x37, 0x3f, 0x37, 0x93, 0x6e, 0x66, 0x86, 0xf9, 0xfd, 0x56, 0x9b, 0xab, 0x07, 0xcf, 0xbd, 0x89,
	0xe0, 0x77, 0x10, 0x14, 0xfc, 0x0c, 0x1e, 0x15, 0xfc, 0x00, 0xd2, 0xef, 0x21, 0xc8, 0x66, 0x93,
	0x90, 0x96, 0x74, 0x11, 0x11, 0xf1, 0xfa, 0xbc, 0xcc, 0xf3, 0x3c, 0xc3, 0xec, 0xf2, 0x15, 0x74,
	0x92, 0x40, 0x5a, 0x70, 0x32, 0x45, 0x2b, 0xc9, 0x45, 0x1a, 0x15, 0x49, 0xa4, 0x88, 0xd0, 0xb7,
	0xce, 0x90, 0xa9, 0x2e, 0x10, 0xa4, 0xd0, 0x01, 0x72, 0x5d, 0x49, 0xc6, 0x16, 0xe0, 0x95, 0xb7,
	0x9c, 0x2f, 0x75, 0x6c, 0x8a, 0x72, 0xd7, 0xed, 0xc1, 0x0e, 0xb8, 0xc7, 0x68, 0xf7, 0x0a, 0xef,
	0x6e, 0x6e, 0x15, 0x09, 0x5f, 0x40, 0x95, 0xe8, 0x28, 0x55, 0x3a, 0x91, 0x3d, 0x4b, 0x6c, 0x52,
	0xf4, 0xde, 0xb0, 0x3a, 0x6b, 0x54, 0xd6, 0xd6, 0xfd, 0x12, 0xaf, 0x3f, 0xc6, 0x28, 0xa9, 0x6b,
	0x21, 0x14, 0x43, 0x66, 0x67, 0x40, 0x54, 0x8f, 0xe6, 0xb8, 0x77, 0x96, 0x41, 0x10, 0x3f, 0x8f,
	0x90, 0x74, 0x40, 0x93, 0x74, 0x26, 0x23, 0xa5, 0x93, 0x41, 0x83, 0xad, 0xdf, 0x6a, 0xe0, 0x9f,
	0x3a, 0xad, 0xa8, 0x75, 0xae, 0x8f, 0x86, 0x05, 0x58, 0xfd, 0x31, 0xc3, 0x2f, 0x8c, 0x13, 0x8a,
	0x0f, 0x8c, 0xd7, 0xc6, 0xdf, 0xb7, 0x35, 0xa9, 0x8a, 0x15, 0x0c, 0x2f, 0x48, 0xff, 0xb9, 0x7a,
	0x7e, 0x79, 0x62, 0x31, 0xe1, 0x22, 0x9e, 0x4e, 0xda, 0xe9, 0xf3, 0xd5, 0xf7, 0xd3, 0xfc, 0xea,
	0x2f, 0x1c, 0x21, 0xbe, 0x32, 0xbe, 0x5c, 0xa2, 0xeb, 0xe6, 0xd3, 0xfe, 0x6b, 0x54, 0xd6, 0x8e,
	0xd8, 0xdf, 0xdd, 0x56, 0xa6, 0xe9, 0xca, 0x54, 0x21, 0x85, 0x8b, 0xe3, 0xd7, 0x77, 0xab, 0x1f,
	0x27, 0xcf, 0xfa, 0x40, 0x46, 0xec, 0xe2, 0x13, 0xe3, 0xd3, 0x0e, 0x62, 0xe3, 0x9a, 0x83, 0x8d,
	0xef, 0xfe, 0xb9, 0x8d, 0x7e, 0x51, 0xb0, 0xd8, 0xdb, 0x6f, 0x5b, 0xfd, 0x36, 0xc1, 0x2b, 0x23,
	0xb8, 0xb8, 0xce, 0x2b, 0x94, 0x69, 0x0d, 0xa9, 0xd4, 0x51, 0x07, 0xbc, 0x9b, 0x75, 0xd6, 0x98,
	0xdb, 0x9c, 0x7a, 0xf5, 0x60, 0x62, 0x96, 0x85, 0xbc, 0x60, 0xb6, 0xa3, 0x0e, 0x88, 0x4b, 0x7c,
	0x1a, 0x4d, 0xe6, 0x62, 0xf0, 0x6e, 0x8d, 0x4a, 0xfa, 0x60, 0x4e, 0x1b, 0xa7, 0x12, 0xa5, 0xbd,
	0xf5, 0x13, 0x74, 0x01, 0x8a, 0x1b, 0x7c, 0xbe, 0xa9, 0x30, 0xdf, 0x97, 0x29, 0x6c, 0x81, 0xf3,
	0x6e, 0x8f, 0xaa, 0x4e, 0x72, 0xa2, 0xce, 0x67, 0xf3, 0x45, 0xbd, 0x3e, 0x77, 0x46, 0x75, 0x33,
	0x29, 0xda, 0x5e, 0x99, 0x15, 0xfe, 0x7f, 0x6c, 0x32, 0x4d, 0xe0, 0x0a, 0xd5, 0xdd, 0x5c, 0x15,
	0x56, 0xfa, 0x58, 0x4f, 0x12, 0xf0, 0x05, 0xa5, 0x91, 0x22, 0x1d, 0x83, 0x54, 0x4d, 0xd0, 0xa4,
	0x9e, 0x2b, 0x70, 0xde, 0xbd, 0x3a, 0x6b, 0xcc, 0x87, 0x62, 0x40, 0x3d, 0x1a, 0x32, 0xe2, 0x32,
	0x9f, 0xb1, 0x51, 0x7c, 0x00, 0x84, 0xde, 0x46, 0x9d, 0x35, 0x26, 0x7b, 0xa1, 0x1e, 0x0b, 0x07,
	0xa8, 0x58, 0xe2, 0x53, 0xfb, 0x5d, 0x02, 0xf4, 0xee, 0x8f, 0xd2, 0x05, 0xb6, 0xf1, 0x9a, 0xf1,
	0x6b, 0x6d, 0x6d, 0x9d, 0x2c, 0x79, 0x03, 0x12, 0x0e, 0x49, 0x2c, 0xfa, 0x5b, 0x99, 0x56, 0x16,
	0xdc, 0x36, 0xd0, 0x4b, 0xe3, 0x0e, 0x70, 0x17, 0x34, 0x1a, 0x87, 0x5e, 0xab, 0xf7, 0x13, 0x58,
	0x2e, 0x7b, 0x44, 0xe1, 0x4a, 0x1e, 0xf1, 0xc4, 0xa6, 0x38, 0x9e, 0x7f, 0x78, 0x48, 0x9b, 0xcf,
	0x3e, 0x1f, 0xd7, 0xd8, 0x97, 0xe3, 0x1a, 0xfb, 0x7e, 0x5c, 0x63, 0x4f, 0xc3, 0x44, 0x91, 0xdf,
	0x2e, 0x02, 0x7d, 0x0d, 0x14, 0xa8, 0x18, 0xf6, 0xc1, 0x25, 0x41, 0x0b, 0xa2, 0x94, 0x5a, 0xfb,
	0x86, 0x56, 0x95, 0x4e, 0x00, 0x69, 0xb5, 0x4d, 0x6a, 0x55, 0x47, 0xa4, 0x5e, 0x40, 0x60, 0x0f,
	0x92, 0xa0, 0x4d, 0x2a, 0x88, 0x9a, 0x91, 0x25, 0x70, 0x18, 0xc8, 0x76, 0xa6, 0x0d, 0x06, 0x18,
	0xb7, 0xa0, 0x13, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x6e, 0x68, 0x2b, 0x3f, 0x06, 0x00,
	0x00,
}

func (m *Mpls_SrTePerLspTransitStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SignalingProtocols != nil {
		{
			size, err := m.SignalingProtocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SegmentRouting != nil {
		{
			size, err := m.SegmentRouting.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SrTePerLspTransitPolicies != nil {
		{
			size, err := m.SrTePerLspTransitPolicies.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SrTePerLspTransitPolicy) > 0 {
		for iNdEx := len(m.SrTePerLspTransitPolicy) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SrTePerLspTransitPolicy[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Record) > 0 {
		for iNdEx := len(m.Record) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Record[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Bytes != nil {
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(*m.Bytes))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd8
	}
	if m.Packets != nil {
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(*m.Packets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xd0
	}
	if m.InstanceIdentifier != nil {
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(*m.InstanceIdentifier))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc8
	}
	if m.CounterName != nil {
		i -= len(*m.CounterName)
		copy(dAtA[i:], *m.CounterName)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.CounterName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc2
	}
	if m.LspName != nil {
		i -= len(*m.LspName)
		copy(dAtA[i:], *m.LspName)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.LspName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xba
	}
	if m.Distinguisher != nil {
		i -= len(*m.Distinguisher)
		copy(dAtA[i:], *m.Distinguisher)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.Distinguisher)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb2
	}
	if m.Origin != nil {
		i -= len(*m.Origin)
		copy(dAtA[i:], *m.Origin)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.Origin)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xaa
	}
	if m.Source != nil {
		i -= len(*m.Source)
		copy(dAtA[i:], *m.Source)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.Source)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa2
	}
	if m.TunnelName != nil {
		i -= len(*m.TunnelName)
		copy(dAtA[i:], *m.TunnelName)
		i = encodeVarintSrTePerLspTransitStats(dAtA, i, uint64(len(*m.TunnelName)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func encodeVarintSrTePerLspTransitStats(dAtA []byte, offset int, v uint64) int {
	offset -= sovSrTePerLspTransitStats(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Mpls_SrTePerLspTransitStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignalingProtocols != nil {
		l = m.SignalingProtocols.Size()
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SegmentRouting != nil {
		l = m.SegmentRouting.Size()
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SrTePerLspTransitPolicies != nil {
		l = m.SrTePerLspTransitPolicies.Size()
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.SrTePerLspTransitPolicy) > 0 {
		for _, e := range m.SrTePerLspTransitPolicy {
			l = e.Size()
			n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Record) > 0 {
		for _, e := range m.Record {
			l = e.Size()
			n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TunnelName != nil {
		l = len(*m.TunnelName)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.Source != nil {
		l = len(*m.Source)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.Origin != nil {
		l = len(*m.Origin)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.Distinguisher != nil {
		l = len(*m.Distinguisher)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.LspName != nil {
		l = len(*m.LspName)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.CounterName != nil {
		l = len(*m.CounterName)
		n += 2 + l + sovSrTePerLspTransitStats(uint64(l))
	}
	if m.InstanceIdentifier != nil {
		n += 2 + sovSrTePerLspTransitStats(uint64(*m.InstanceIdentifier))
	}
	if m.Packets != nil {
		n += 2 + sovSrTePerLspTransitStats(uint64(*m.Packets))
	}
	if m.Bytes != nil {
		n += 2 + sovSrTePerLspTransitStats(uint64(*m.Bytes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSrTePerLspTransitStats(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSrTePerLspTransitStats(x uint64) (n int) {
	return sovSrTePerLspTransitStats(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Mpls_SrTePerLspTransitStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: mpls_SrTePerLspTransitStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: mpls_SrTePerLspTransitStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignalingProtocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SignalingProtocols == nil {
				m.SignalingProtocols = &Mpls_SrTePerLspTransitStatsSignalingProtocolsType{}
			}
			if err := m.SignalingProtocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: signaling_protocols_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: signaling_protocols_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SegmentRouting", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SegmentRouting == nil {
				m.SegmentRouting = &Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType{}
			}
			if err := m.SegmentRouting.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: segment_routing_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: segment_routing_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrTePerLspTransitPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SrTePerLspTransitPolicies == nil {
				m.SrTePerLspTransitPolicies = &Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType{}
			}
			if err := m.SrTePerLspTransitPolicies.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sr_te_per_lsp_transit_policies_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sr_te_per_lsp_transit_policies_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrTePerLspTransitPolicy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrTePerLspTransitPolicy = append(m.SrTePerLspTransitPolicy, &Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList{})
			if err := m.SrTePerLspTransitPolicy[len(m.SrTePerLspTransitPolicy)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: sr_te_per_lsp_transit_policy_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: sr_te_per_lsp_transit_policy_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Record", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Record = append(m.Record, &Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList{})
			if err := m.Record[len(m.Record)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Mpls_SrTePerLspTransitStatsSignalingProtocolsTypeSegmentRoutingTypeSrTePerLspTransitPoliciesTypeSrTePerLspTransitPolicyListRecordList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: record_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: record_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TunnelName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TunnelName = &s
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Source = &s
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Origin = &s
			iNdEx = postIndex
		case 54:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Distinguisher", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Distinguisher = &s
			iNdEx = postIndex
		case 55:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LspName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.LspName = &s
			iNdEx = postIndex
		case 56:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CounterName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CounterName = &s
			iNdEx = postIndex
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceIdentifier", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InstanceIdentifier = &v
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Packets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Packets = &v
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Bytes = &v
		default:
			iNdEx = preIndex
			skippy, err := skipSrTePerLspTransitStats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSrTePerLspTransitStats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSrTePerLspTransitStats(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSrTePerLspTransitStats
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSrTePerLspTransitStats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSrTePerLspTransitStats
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSrTePerLspTransitStats
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSrTePerLspTransitStats
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSrTePerLspTransitStats        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSrTePerLspTransitStats          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSrTePerLspTransitStats = fmt.Errorf("proto: unexpected end of group")
)
