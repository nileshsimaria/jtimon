// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: xmlproxyd_show_local_interface_OC.proto

package schema

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type InterfacesLocalInterface struct {
	Interface            []*InterfacesLocalInterfaceInterfaceList `protobuf:"bytes,151,rep,name=interface" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *InterfacesLocalInterface) Reset()         { *m = InterfacesLocalInterface{} }
func (m *InterfacesLocalInterface) String() string { return proto.CompactTextString(m) }
func (*InterfacesLocalInterface) ProtoMessage()    {}
func (*InterfacesLocalInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0}
}
func (m *InterfacesLocalInterface) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterface.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterface.Merge(m, src)
}
func (m *InterfacesLocalInterface) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterface.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterface proto.InternalMessageInfo

func (m *InterfacesLocalInterface) GetInterface() []*InterfacesLocalInterfaceInterfaceList {
	if m != nil {
		return m.Interface
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceList struct {
	Name                 *string                                                 `protobuf:"bytes,51,opt,name=name" json:"name,omitempty"`
	State                *InterfacesLocalInterfaceInterfaceListStateType         `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	Subinterfaces        *InterfacesLocalInterfaceInterfaceListSubinterfacesType `protobuf:"bytes,152,opt,name=subinterfaces" json:"subinterfaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceList) Reset()         { *m = InterfacesLocalInterfaceInterfaceList{} }
func (m *InterfacesLocalInterfaceInterfaceList) String() string { return proto.CompactTextString(m) }
func (*InterfacesLocalInterfaceInterfaceList) ProtoMessage()    {}
func (*InterfacesLocalInterfaceInterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0}
}
func (m *InterfacesLocalInterfaceInterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceList.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceList proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InterfacesLocalInterfaceInterfaceList) GetState() *InterfacesLocalInterfaceInterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *InterfacesLocalInterfaceInterfaceList) GetSubinterfaces() *InterfacesLocalInterfaceInterfaceListSubinterfacesType {
	if m != nil {
		return m.Subinterfaces
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceListStateType struct {
	Counters             *InterfacesLocalInterfaceInterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListStateType) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListStateType{}
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListStateType) ProtoMessage() {}
func (*InterfacesLocalInterfaceInterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 0}
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateType.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateType proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListStateType) GetCounters() *InterfacesLocalInterfaceInterfaceListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceListStateTypeCountersType struct {
	InOctets             *uint64  `protobuf:"varint,51,opt,name=in_octets,json=inOctets" json:"in_octets,omitempty"`
	InPkts               *uint64  `protobuf:"varint,61,opt,name=in_pkts,json=inPkts" json:"in_pkts,omitempty"`
	InDiscards           *uint64  `protobuf:"varint,52,opt,name=in_discards,json=inDiscards" json:"in_discards,omitempty"`
	InErrors             *uint64  `protobuf:"varint,53,opt,name=in_errors,json=inErrors" json:"in_errors,omitempty"`
	InDrops              *uint64  `protobuf:"varint,71,opt,name=in_drops,json=inDrops" json:"in_drops,omitempty"`
	InFrameErrors        *uint64  `protobuf:"varint,72,opt,name=in_frame_errors,json=inFrameErrors" json:"in_frame_errors,omitempty"`
	InRunts              *uint64  `protobuf:"varint,73,opt,name=in_runts,json=inRunts" json:"in_runts,omitempty"`
	InGiants             *uint64  `protobuf:"varint,74,opt,name=in_giants,json=inGiants" json:"in_giants,omitempty"`
	InResourceErrors     *uint64  `protobuf:"varint,75,opt,name=in_resource_errors,json=inResourceErrors" json:"in_resource_errors,omitempty"`
	OutOctets            *uint64  `protobuf:"varint,54,opt,name=out_octets,json=outOctets" json:"out_octets,omitempty"`
	OutPkts              *uint64  `protobuf:"varint,81,opt,name=out_pkts,json=outPkts" json:"out_pkts,omitempty"`
	OutDiscards          *uint64  `protobuf:"varint,55,opt,name=out_discards,json=outDiscards" json:"out_discards,omitempty"`
	OutErrors            *uint64  `protobuf:"varint,56,opt,name=out_errors,json=outErrors" json:"out_errors,omitempty"`
	OutDrops             *uint64  `protobuf:"varint,91,opt,name=out_drops,json=outDrops" json:"out_drops,omitempty"`
	CarrierTransitions   *uint64  `protobuf:"varint,92,opt,name=carrier_transitions,json=carrierTransitions" json:"carrier_transitions,omitempty"`
	MtuErrors            *uint64  `protobuf:"varint,93,opt,name=mtu_errors,json=mtuErrors" json:"mtu_errors,omitempty"`
	OutResourceErrors    *uint64  `protobuf:"varint,94,opt,name=out_resource_errors,json=outResourceErrors" json:"out_resource_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListStateTypeCountersType{}
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListStateTypeCountersType) ProtoMessage() {}
func (*InterfacesLocalInterfaceInterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 0, 0}
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateTypeCountersType.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListStateTypeCountersType proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInOctets() uint64 {
	if m != nil && m.InOctets != nil {
		return *m.InOctets
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInPkts() uint64 {
	if m != nil && m.InPkts != nil {
		return *m.InPkts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInDiscards() uint64 {
	if m != nil && m.InDiscards != nil {
		return *m.InDiscards
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInErrors() uint64 {
	if m != nil && m.InErrors != nil {
		return *m.InErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInDrops() uint64 {
	if m != nil && m.InDrops != nil {
		return *m.InDrops
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInFrameErrors() uint64 {
	if m != nil && m.InFrameErrors != nil {
		return *m.InFrameErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInRunts() uint64 {
	if m != nil && m.InRunts != nil {
		return *m.InRunts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInGiants() uint64 {
	if m != nil && m.InGiants != nil {
		return *m.InGiants
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetInResourceErrors() uint64 {
	if m != nil && m.InResourceErrors != nil {
		return *m.InResourceErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutOctets() uint64 {
	if m != nil && m.OutOctets != nil {
		return *m.OutOctets
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutPkts() uint64 {
	if m != nil && m.OutPkts != nil {
		return *m.OutPkts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutDiscards() uint64 {
	if m != nil && m.OutDiscards != nil {
		return *m.OutDiscards
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutErrors() uint64 {
	if m != nil && m.OutErrors != nil {
		return *m.OutErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutDrops() uint64 {
	if m != nil && m.OutDrops != nil {
		return *m.OutDrops
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetCarrierTransitions() uint64 {
	if m != nil && m.CarrierTransitions != nil {
		return *m.CarrierTransitions
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetMtuErrors() uint64 {
	if m != nil && m.MtuErrors != nil {
		return *m.MtuErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) GetOutResourceErrors() uint64 {
	if m != nil && m.OutResourceErrors != nil {
		return *m.OutResourceErrors
	}
	return 0
}

type InterfacesLocalInterfaceInterfaceListSubinterfacesType struct {
	Subinterface         []*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList `protobuf:"bytes,151,rep,name=subinterface" json:"subinterface,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListSubinterfacesType{}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesType) ProtoMessage() {}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesType) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 1}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesType.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesType proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) GetSubinterface() []*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList {
	if m != nil {
		return m.Subinterface
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList struct {
	Index                *uint32                                                                          `protobuf:"varint,51,opt,name=index" json:"index,omitempty"`
	State                *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType `protobuf:"bytes,151,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                         `json:"-"`
	XXX_unrecognized     []byte                                                                           `json:"-"`
	XXX_sizecache        int32                                                                            `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList{}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) ProtoMessage() {}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 1, 0}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) GetState() *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType {
	if m != nil {
		return m.State
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType struct {
	Counters             *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType `protobuf:"bytes,151,opt,name=counters" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                                     `json:"-"`
	XXX_unrecognized     []byte                                                                                       `json:"-"`
	XXX_sizecache        int32                                                                                        `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType{}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) ProtoMessage() {
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 1, 0, 0}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) GetCounters() *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType {
	if m != nil {
		return m.Counters
	}
	return nil
}

type InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType struct {
	InOctets             *uint64  `protobuf:"varint,51,opt,name=in_octets,json=inOctets" json:"in_octets,omitempty"`
	InPkts               *uint64  `protobuf:"varint,61,opt,name=in_pkts,json=inPkts" json:"in_pkts,omitempty"`
	InDiscards           *uint64  `protobuf:"varint,52,opt,name=in_discards,json=inDiscards" json:"in_discards,omitempty"`
	InErrors             *uint64  `protobuf:"varint,53,opt,name=in_errors,json=inErrors" json:"in_errors,omitempty"`
	InDrops              *uint64  `protobuf:"varint,71,opt,name=in_drops,json=inDrops" json:"in_drops,omitempty"`
	InFrameErrors        *uint64  `protobuf:"varint,72,opt,name=in_frame_errors,json=inFrameErrors" json:"in_frame_errors,omitempty"`
	InRunts              *uint64  `protobuf:"varint,73,opt,name=in_runts,json=inRunts" json:"in_runts,omitempty"`
	InGiants             *uint64  `protobuf:"varint,74,opt,name=in_giants,json=inGiants" json:"in_giants,omitempty"`
	InResourceErrors     *uint64  `protobuf:"varint,75,opt,name=in_resource_errors,json=inResourceErrors" json:"in_resource_errors,omitempty"`
	OutOctets            *uint64  `protobuf:"varint,54,opt,name=out_octets,json=outOctets" json:"out_octets,omitempty"`
	OutPkts              *uint64  `protobuf:"varint,81,opt,name=out_pkts,json=outPkts" json:"out_pkts,omitempty"`
	OutDiscards          *uint64  `protobuf:"varint,55,opt,name=out_discards,json=outDiscards" json:"out_discards,omitempty"`
	OutErrors            *uint64  `protobuf:"varint,56,opt,name=out_errors,json=outErrors" json:"out_errors,omitempty"`
	OutDrops             *uint64  `protobuf:"varint,91,opt,name=out_drops,json=outDrops" json:"out_drops,omitempty"`
	CarrierTransitions   *uint64  `protobuf:"varint,92,opt,name=carrier_transitions,json=carrierTransitions" json:"carrier_transitions,omitempty"`
	MtuErrors            *uint64  `protobuf:"varint,93,opt,name=mtu_errors,json=mtuErrors" json:"mtu_errors,omitempty"`
	OutResourceErrors    *uint64  `protobuf:"varint,94,opt,name=out_resource_errors,json=outResourceErrors" json:"out_resource_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Reset() {
	*m = InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType{}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) String() string {
	return proto.CompactTextString(m)
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) ProtoMessage() {
}
func (*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Descriptor() ([]byte, []int) {
	return fileDescriptor_22f6044bdb5fdcbd, []int{0, 0, 1, 0, 0, 0}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.Merge(m, src)
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_Size() int {
	return m.Size()
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) XXX_DiscardUnknown() {
	xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType.DiscardUnknown(m)
}

var xxx_messageInfo_InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType proto.InternalMessageInfo

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInOctets() uint64 {
	if m != nil && m.InOctets != nil {
		return *m.InOctets
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInPkts() uint64 {
	if m != nil && m.InPkts != nil {
		return *m.InPkts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInDiscards() uint64 {
	if m != nil && m.InDiscards != nil {
		return *m.InDiscards
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInErrors() uint64 {
	if m != nil && m.InErrors != nil {
		return *m.InErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInDrops() uint64 {
	if m != nil && m.InDrops != nil {
		return *m.InDrops
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInFrameErrors() uint64 {
	if m != nil && m.InFrameErrors != nil {
		return *m.InFrameErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInRunts() uint64 {
	if m != nil && m.InRunts != nil {
		return *m.InRunts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInGiants() uint64 {
	if m != nil && m.InGiants != nil {
		return *m.InGiants
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetInResourceErrors() uint64 {
	if m != nil && m.InResourceErrors != nil {
		return *m.InResourceErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutOctets() uint64 {
	if m != nil && m.OutOctets != nil {
		return *m.OutOctets
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutPkts() uint64 {
	if m != nil && m.OutPkts != nil {
		return *m.OutPkts
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutDiscards() uint64 {
	if m != nil && m.OutDiscards != nil {
		return *m.OutDiscards
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutErrors() uint64 {
	if m != nil && m.OutErrors != nil {
		return *m.OutErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutDrops() uint64 {
	if m != nil && m.OutDrops != nil {
		return *m.OutDrops
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetCarrierTransitions() uint64 {
	if m != nil && m.CarrierTransitions != nil {
		return *m.CarrierTransitions
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetMtuErrors() uint64 {
	if m != nil && m.MtuErrors != nil {
		return *m.MtuErrors
	}
	return 0
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) GetOutResourceErrors() uint64 {
	if m != nil && m.OutResourceErrors != nil {
		return *m.OutResourceErrors
	}
	return 0
}

var E_JnprInterfacesLocalInterfaceExt = &proto.ExtensionDesc{
	ExtendedType:  (*JuniperNetworksSensors)(nil),
	ExtensionType: (*InterfacesLocalInterface)(nil),
	Field:         61,
	Name:          "jnpr_interfaces_local_interface_ext",
	Tag:           "bytes,61,opt,name=jnpr_interfaces_local_interface_ext",
	Filename:      "xmlproxyd_show_local_interface_OC.proto",
}

func init() {
	proto.RegisterType((*InterfacesLocalInterface)(nil), "interfaces_local_interface")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceList)(nil), "interfaces_local_interface.interface_list")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListStateType)(nil), "interfaces_local_interface.interface_list.state_type")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListStateTypeCountersType)(nil), "interfaces_local_interface.interface_list.state_type.counters_type")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListSubinterfacesType)(nil), "interfaces_local_interface.interface_list.subinterfaces_type")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList)(nil), "interfaces_local_interface.interface_list.subinterfaces_type.subinterface_list")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType)(nil), "interfaces_local_interface.interface_list.subinterfaces_type.subinterface_list.state_type")
	proto.RegisterType((*InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType)(nil), "interfaces_local_interface.interface_list.subinterfaces_type.subinterface_list.state_type.counters_type")
	proto.RegisterExtension(E_JnprInterfacesLocalInterfaceExt)
}

func init() {
	proto.RegisterFile("xmlproxyd_show_local_interface_OC.proto", fileDescriptor_22f6044bdb5fdcbd)
}

var fileDescriptor_22f6044bdb5fdcbd = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0xcb, 0x4e, 0x14, 0x4d,
	0x14, 0x4e, 0xff, 0x3f, 0xf3, 0x33, 0x53, 0xc3, 0xfc, 0x40, 0xb1, 0xa0, 0xe9, 0x89, 0x80, 0x9a,
	0x28, 0x31, 0xd2, 0x9d, 0xa0, 0xa8, 0x31, 0x21, 0x31, 0x5c, 0x44, 0x90, 0x88, 0xb6, 0xae, 0xf0,
	0xd2, 0x34, 0x3d, 0xc5, 0x4c, 0xcd, 0xa5, 0xaa, 0xad, 0x3a, 0x2d, 0xc3, 0x96, 0xc4, 0xb5, 0x1b,
	0x13, 0x7d, 0x06, 0x1f, 0xc0, 0x37, 0x30, 0x71, 0xe9, 0x03, 0xb8, 0x30, 0x3c, 0x89, 0xa9, 0xea,
	0xcb, 0xd0, 0x4c, 0x30, 0xde, 0xd8, 0xb1, 0x3c, 0xe7, 0x3b, 0xe7, 0xfb, 0x4e, 0x7f, 0x5d, 0xe7,
	0xa0, 0xcb, 0xdd, 0x4e, 0x3b, 0x14, 0xbc, 0xbb, 0x5f, 0xf3, 0x64, 0x83, 0xef, 0x79, 0x6d, 0x1e,
	0xf8, 0x6d, 0x8f, 0x32, 0x20, 0x62, 0xd7, 0x0f, 0x88, 0xb7, 0xb9, 0x64, 0x87, 0x82, 0x03, 0xb7,
	0xc6, 0x80, 0xb4, 0x49, 0x87, 0x80, 0xd8, 0xf7, 0x80, 0x87, 0x71, 0xf2, 0xc2, 0xdb, 0x11, 0x64,
	0x65, 0xb5, 0xf2, 0x78, 0x33, 0x5e, 0x43, 0xa5, 0x2c, 0x30, 0xdf, 0x19, 0xd3, 0xff, 0xce, 0x94,
	0xe7, 0xae, 0xd8, 0x27, 0x37, 0xf4, 0x20, 0xaf, 0x4d, 0x25, 0xb8, 0xbd, 0x6e, 0xeb, 0xc3, 0x30,
	0xfa, 0x3f, 0x8f, 0xe2, 0x09, 0x34, 0xc0, 0xfc, 0x0e, 0x31, 0xaf, 0x4d, 0x1b, 0x33, 0xa5, 0xc5,
	0xc2, 0xc1, 0x9d, 0x7f, 0x8a, 0x86, 0xab, 0x53, 0x78, 0x03, 0x15, 0x24, 0xf8, 0xa0, 0x45, 0x8d,
	0x99, 0xf2, 0xdc, 0xfc, 0xcf, 0x8b, 0xda, 0xba, 0xd1, 0x83, 0xfd, 0x90, 0xb8, 0x31, 0x09, 0xae,
	0xa1, 0x8a, 0x8c, 0x76, 0x7a, 0x0c, 0xe6, 0xfb, 0x98, 0x75, 0xe1, 0x57, 0x58, 0x8f, 0x12, 0xc4,
	0xec, 0x79, 0x52, 0xeb, 0x63, 0x01, 0xa1, 0x9e, 0x36, 0xde, 0x46, 0xc5, 0x80, 0x47, 0x0a, 0x96,
	0xe9, 0x57, 0x2c, 0xfd, 0xd6, 0x57, 0xd8, 0x29, 0x4d, 0xac, 0x9a, 0xb1, 0x5a, 0x9f, 0x06, 0x50,
	0x25, 0x87, 0xe1, 0xaa, 0xfa, 0x5f, 0x1e, 0x0f, 0x80, 0x80, 0xd4, 0xb6, 0x0e, 0xb8, 0x45, 0xca,
	0x36, 0x75, 0x8c, 0xc7, 0xd1, 0x20, 0x65, 0x5e, 0xd8, 0x02, 0x69, 0x2e, 0x68, 0xe8, 0x3f, 0xca,
	0x1e, 0xb6, 0x40, 0xe2, 0x29, 0x54, 0xa6, 0xcc, 0xab, 0x51, 0x19, 0xf8, 0xa2, 0x26, 0xcd, 0xeb,
	0x1a, 0x44, 0x94, 0x2d, 0x27, 0x99, 0x84, 0x96, 0x08, 0xc1, 0x85, 0x34, 0xe7, 0x53, 0xda, 0x15,
	0x1d, 0xe3, 0x09, 0x54, 0x54, 0xdd, 0x82, 0x87, 0xd2, 0x5c, 0xd5, 0xd8, 0x20, 0x65, 0xcb, 0x2a,
	0xc4, 0x97, 0xd0, 0x30, 0x65, 0xde, 0xae, 0xf0, 0x3b, 0x24, 0xed, 0xbe, 0xa7, 0x2b, 0x2a, 0x94,
	0xdd, 0x55, 0xd9, 0x1c, 0x85, 0x88, 0x18, 0x48, 0x73, 0x2d, 0xa5, 0x70, 0x55, 0x98, 0x48, 0xd7,
	0xa9, 0xaf, 0xb0, 0xf5, 0x54, 0x7a, 0x55, 0xc7, 0xf8, 0x2a, 0xc2, 0xaa, 0x8f, 0x48, 0x1e, 0x89,
	0x20, 0x93, 0xb8, 0xaf, 0xab, 0x46, 0x28, 0x73, 0x13, 0x20, 0x51, 0x39, 0x87, 0x10, 0x8f, 0x20,
	0x75, 0xe7, 0x86, 0xae, 0x2a, 0xf1, 0x08, 0x12, 0x7b, 0x26, 0x50, 0x51, 0xc1, 0xda, 0x9f, 0x47,
	0xf1, 0x10, 0x3c, 0x02, 0x6d, 0xd0, 0x79, 0x34, 0xa4, 0xa0, 0xcc, 0xa1, 0x9b, 0x1a, 0x2e, 0xf3,
	0x08, 0x32, 0x8b, 0x12, 0xf2, 0x64, 0x84, 0x5b, 0x19, 0x79, 0xa2, 0x5d, 0x45, 0x25, 0xcd, 0xa0,
	0x5d, 0x7a, 0x1a, 0x7f, 0x86, 0x6a, 0xd7, 0x36, 0x39, 0x68, 0x2c, 0xf0, 0x85, 0xa0, 0x44, 0x78,
	0x20, 0x7c, 0x26, 0x29, 0x50, 0xce, 0xa4, 0xf9, 0x4c, 0x97, 0xe1, 0x04, 0x7a, 0xd2, 0x43, 0x94,
	0x58, 0x07, 0xa2, 0x54, 0xec, 0x79, 0x2c, 0xd6, 0x81, 0x28, 0x11, 0xb3, 0xd1, 0x98, 0x12, 0x3b,
	0xee, 0xcb, 0x0b, 0x5d, 0x37, 0xca, 0x23, 0xc8, 0x1b, 0x63, 0xbd, 0x29, 0x22, 0xdc, 0xff, 0xbc,
	0x31, 0xa0, 0xa1, 0xa3, 0xd9, 0x74, 0xff, 0x37, 0xff, 0x68, 0x69, 0x72, 0xa9, 0xf8, 0x48, 0xe4,
	0x54, 0xac, 0x83, 0x41, 0x34, 0xda, 0x57, 0x83, 0xab, 0xa8, 0x40, 0x59, 0x8d, 0x74, 0xf5, 0xa3,
	0xae, 0xa4, 0xb7, 0x22, 0xce, 0xe1, 0x97, 0xc7, 0x8e, 0xc5, 0xd6, 0x5f, 0x9e, 0xb0, 0xff, 0xa2,
	0x58, 0x5f, 0xf3, 0xbb, 0xfe, 0xda, 0xe8, 0x5f, 0xf6, 0xc6, 0xe9, 0x4d, 0x71, 0x76, 0x11, 0xce,
	0x2e, 0xc2, 0x69, 0x5e, 0x84, 0xdb, 0x07, 0x06, 0xba, 0xd8, 0x64, 0xa1, 0xf0, 0x4e, 0x7e, 0xc2,
	0x1e, 0xe9, 0x02, 0x1e, 0xb7, 0xd7, 0x23, 0x46, 0x43, 0x22, 0x1e, 0x10, 0xd8, 0xe3, 0xa2, 0x25,
	0x1f, 0x13, 0x26, 0x15, 0xf3, 0x82, 0x5e, 0x81, 0xea, 0x0f, 0x56, 0xc0, 0x9d, 0x52, 0x02, 0x6b,
	0x19, 0xbe, 0xa1, 0xe0, 0x2c, 0x5c, 0xe9, 0xc2, 0xe2, 0xf6, 0xe7, 0xc3, 0x49, 0xe3, 0xcb, 0xe1,
	0xa4, 0xf1, 0xed, 0x70, 0xd2, 0xd8, 0x72, 0xeb, 0x14, 0xec, 0x66, 0xac, 0x66, 0x33, 0x02, 0x0e,
	0x0d, 0xc8, 0x0e, 0x11, 0x75, 0xa7, 0x41, 0xfc, 0x36, 0x34, 0x76, 0x38, 0xcc, 0x52, 0x56, 0x27,
	0x12, 0x66, 0x9b, 0x40, 0x67, 0x99, 0x0f, 0xf4, 0x15, 0x71, 0xc2, 0x56, 0xdd, 0x69, 0x02, 0x75,
	0xfc, 0x9a, 0x1f, 0xaa, 0x9d, 0x70, 0xbc, 0x66, 0xc4, 0xb8, 0x74, 0x64, 0xd0, 0x20, 0x1d, 0xff,
	0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xe5, 0xb0, 0x7a, 0x3c, 0x09, 0x00, 0x00,
}

func (m *InterfacesLocalInterface) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterface) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterface) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Interface) > 0 {
		for iNdEx := len(m.Interface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Interface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Subinterfaces != nil {
		{
			size, err := m.Subinterfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xc2
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OutResourceErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutResourceErrors))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf0
	}
	if m.MtuErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.MtuErrors))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe8
	}
	if m.CarrierTransitions != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.CarrierTransitions))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.OutDrops != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutDrops))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.OutPkts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutPkts))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.InResourceErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InResourceErrors))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.InGiants != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InGiants))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.InRunts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InRunts))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.InFrameErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InFrameErrors))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.InDrops != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InDrops))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.InPkts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.OutErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.OutDiscards != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.OutOctets != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.InErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.InDiscards != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InOctets != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Subinterface) > 0 {
		for iNdEx := len(m.Subinterface) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Subinterface[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x9
			i--
			dAtA[i] = 0xba
		}
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != nil {
		{
			size, err := m.State.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	if m.Index != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Counters != nil {
		{
			size, err := m.Counters.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x9
		i--
		dAtA[i] = 0xba
	}
	return len(dAtA) - i, nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OutResourceErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutResourceErrors))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xf0
	}
	if m.MtuErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.MtuErrors))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe8
	}
	if m.CarrierTransitions != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.CarrierTransitions))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xe0
	}
	if m.OutDrops != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutDrops))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd8
	}
	if m.OutPkts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutPkts))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x88
	}
	if m.InResourceErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InResourceErrors))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd8
	}
	if m.InGiants != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InGiants))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xd0
	}
	if m.InRunts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InRunts))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc8
	}
	if m.InFrameErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InFrameErrors))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xc0
	}
	if m.InDrops != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InDrops))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb8
	}
	if m.InPkts != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InPkts))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe8
	}
	if m.OutErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xc0
	}
	if m.OutDiscards != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb8
	}
	if m.OutOctets != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.OutOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xb0
	}
	if m.InErrors != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InErrors))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa8
	}
	if m.InDiscards != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InDiscards))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xa0
	}
	if m.InOctets != nil {
		i = encodeVarintXmlproxydShowLocalInterface_OC(dAtA, i, uint64(*m.InOctets))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x98
	}
	return len(dAtA) - i, nil
}

func encodeVarintXmlproxydShowLocalInterface_OC(dAtA []byte, offset int, v uint64) int {
	offset -= sovXmlproxydShowLocalInterface_OC(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *InterfacesLocalInterface) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Interface) > 0 {
		for _, e := range m.Interface {
			l = e.Size()
			n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Name != nil {
		l = len(*m.Name)
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.Subinterfaces != nil {
		l = m.Subinterfaces.Size()
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InOctets != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InOctets))
	}
	if m.InDiscards != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InDiscards))
	}
	if m.InErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InErrors))
	}
	if m.OutOctets != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutOctets))
	}
	if m.OutDiscards != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutDiscards))
	}
	if m.OutErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutErrors))
	}
	if m.InPkts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InPkts))
	}
	if m.InDrops != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InDrops))
	}
	if m.InFrameErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InFrameErrors))
	}
	if m.InRunts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InRunts))
	}
	if m.InGiants != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InGiants))
	}
	if m.InResourceErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InResourceErrors))
	}
	if m.OutPkts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutPkts))
	}
	if m.OutDrops != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutDrops))
	}
	if m.CarrierTransitions != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.CarrierTransitions))
	}
	if m.MtuErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.MtuErrors))
	}
	if m.OutResourceErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutResourceErrors))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Subinterface) > 0 {
		for _, e := range m.Subinterface {
			l = e.Size()
			n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.Index))
	}
	if m.State != nil {
		l = m.State.Size()
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Counters != nil {
		l = m.Counters.Size()
		n += 2 + l + sovXmlproxydShowLocalInterface_OC(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InOctets != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InOctets))
	}
	if m.InDiscards != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InDiscards))
	}
	if m.InErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InErrors))
	}
	if m.OutOctets != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutOctets))
	}
	if m.OutDiscards != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutDiscards))
	}
	if m.OutErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutErrors))
	}
	if m.InPkts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InPkts))
	}
	if m.InDrops != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InDrops))
	}
	if m.InFrameErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InFrameErrors))
	}
	if m.InRunts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InRunts))
	}
	if m.InGiants != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InGiants))
	}
	if m.InResourceErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.InResourceErrors))
	}
	if m.OutPkts != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutPkts))
	}
	if m.OutDrops != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutDrops))
	}
	if m.CarrierTransitions != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.CarrierTransitions))
	}
	if m.MtuErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.MtuErrors))
	}
	if m.OutResourceErrors != nil {
		n += 2 + sovXmlproxydShowLocalInterface_OC(uint64(*m.OutResourceErrors))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovXmlproxydShowLocalInterface_OC(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozXmlproxydShowLocalInterface_OC(x uint64) (n int) {
	return sovXmlproxydShowLocalInterface_OC(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InterfacesLocalInterface) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interfaces_local_interface: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interfaces_local_interface: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interface = append(m.Interface, &InterfacesLocalInterfaceInterfaceList{})
			if err := m.Interface[len(m.Interface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: interface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: interface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &InterfacesLocalInterfaceInterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 152:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Subinterfaces == nil {
				m.Subinterfaces = &InterfacesLocalInterfaceInterfaceListSubinterfacesType{}
			}
			if err := m.Subinterfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &InterfacesLocalInterfaceInterfaceListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InOctets = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InDiscards = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InErrors = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutOctets = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutDiscards = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutErrors = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPkts = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InDrops = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFrameErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFrameErrors = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InRunts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InRunts = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InGiants", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InGiants = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InResourceErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InResourceErrors = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPkts = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutDrops = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarrierTransitions", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CarrierTransitions = &v
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MtuErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MtuErrors = &v
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutResourceErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutResourceErrors = &v
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subinterfaces_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subinterfaces_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Subinterface", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Subinterface = append(m.Subinterface, &InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList{})
			if err := m.Subinterface[len(m.Subinterface)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: subinterface_list: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: subinterface_list: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.State == nil {
				m.State = &InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType{}
			}
			if err := m.State.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: state_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: state_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 151:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Counters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Counters == nil {
				m.Counters = &InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType{}
			}
			if err := m.Counters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InterfacesLocalInterfaceInterfaceListSubinterfacesTypeSubinterfaceListStateTypeCountersType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: counters_type: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: counters_type: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InOctets = &v
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InDiscards = &v
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InErrors = &v
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutOctets", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutOctets = &v
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutDiscards", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutDiscards = &v
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutErrors = &v
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InPkts = &v
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InDrops = &v
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InFrameErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InFrameErrors = &v
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InRunts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InRunts = &v
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InGiants", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InGiants = &v
		case 75:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InResourceErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InResourceErrors = &v
		case 81:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutPkts", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutPkts = &v
		case 91:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutDrops", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutDrops = &v
		case 92:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarrierTransitions", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CarrierTransitions = &v
		case 93:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MtuErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MtuErrors = &v
		case 94:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutResourceErrors", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OutResourceErrors = &v
		default:
			iNdEx = preIndex
			skippy, err := skipXmlproxydShowLocalInterface_OC(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipXmlproxydShowLocalInterface_OC(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowXmlproxydShowLocalInterface_OC
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowXmlproxydShowLocalInterface_OC
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthXmlproxydShowLocalInterface_OC
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupXmlproxydShowLocalInterface_OC
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthXmlproxydShowLocalInterface_OC
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthXmlproxydShowLocalInterface_OC        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowXmlproxydShowLocalInterface_OC          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupXmlproxydShowLocalInterface_OC = fmt.Errorf("proto: unexpected end of group")
)
